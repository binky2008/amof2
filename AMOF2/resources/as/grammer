behavior_declaration :: ( name "::" )* name ("activity" "{" activity "}" | "query" "{" ocl_expression "}" )

activity :: ( action | branch | loop)*

action :: '[' action_name ( ':' expression )? ']' parameter* ';'

action_name :: name |
    'start' |
    'end'

parameter :: '<' in_parameter |
    '>' out_paramter

in_parameter :: (name | sub_action) ( 'as' ( 'context' | name ) )?

out_parameter :: name | 'new' name ':' type

sub_action :: '{' action '}'

expression :: ocl_expression | 'else' | feature_expression

branch :: 'branch' ( condition '{' activity '}' )+ 

condition :: '[' expression ']' in_parameter;

loop :: 'while' condition '{' activity '}' |
        'do' '{' activity '}' 'while' condition

feature_expression :: name | name '(' ')'

ocl_expression := // Eine correct geklammerter belliebiger Ausdruck
name := // alum
