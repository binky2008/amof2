<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmlns:xmi="http://www.omg.org/XMI" xmlns:uml="http://www.foo.org/uml" xmi:version="2.1">
  <uml:Model xmi:id="9985">
    <ownedElement xmi:id="8299" element="8297" value="http://www.w3.org/2001/XMLSchema#boolean" name="org.omg.xmi.schemaType" xmi:type="Tag" />
    <ownedElement xmi:id="8288" element="8289" value="http://www.w3.org/2001/XMLSchema#integer" name="org.omg.xmi.schemaType" xmi:type="Tag" />
    <ownedElement xmi:id="8302" visibility="public" name="InfrastructureLibrary" xmi:type="Package">
      <nestedPackage xmi:id="8303" visibility="public" name="Profiles" nestingPackage="8302" xmi:type="Package">
        <packageImport xmi:id="9982" importingNamespace="8303" visibility="public" importedPackage="8320" xmi:type="PackageImport" />
        <packageImport xmi:id="9983" importingNamespace="8303" visibility="public" importedPackage="8290" xmi:type="PackageImport" />
        <ownedMember xmi:id="8304" visibility="public" isDerived="false" memberEnd="8305" isAbstract="false" name="A_appliedProfile_profileApplication" general="8374" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="8306" owningAssociation="8304" visibility="public" isDerived="false" type="8309" isDerivedUnion="false" opposite="8305" isReadOnly="false" isUnique="true" isOrdered="false" name="profileApplication" xmi:type="Property">
            <upperValue xmi:id="11103" value="*" xmi:type="LiteralString" />
            <lowerValue xmi:id="11104" value="0" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
        <ownedMember xmi:id="9913" visibility="public" isAbstract="false" name="Class" package="8303" xmi:type="Class">
          <ownedAttribute xmi:id="9915" visibility="public" isDerived="true" type="9919" class="9913" association="9918" isDerivedUnion="false" opposite="9916" isReadOnly="true" isUnique="true" isOrdered="false" name="extension" xmi:type="Property">
            <upperValue xmi:id="11105" value="*" xmi:type="LiteralString" />
            <ownedComment xmi:id="9967" annotatedElement="9915" body="References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class." xmi:type="Comment" />
            <lowerValue xmi:id="11106" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedComment xmi:id="9914" annotatedElement="9913" body="Class has derived association that indicates how it may be extended through one or more stereotypes." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9933" visibility="public" isAbstract="false" name="ExtensionEnd" package="8303" superClass="9463" xmi:type="Class">
          <ownedRule xmi:id="9935" namespace="9933" name="multiplicity" constrainedElement="9933" xmi:type="Constraint">
            <ownedComment xmi:id="9936" annotatedElement="9935" body="The multiplicity of ExtensionEnd is 0..1 or 1." xmi:type="Comment" />
            <specification xmi:id="9937" language="OCL" body="(self-&gt;lowerBound() = 0 or self-&gt;lowerBound() = 1) and self-&gt;upperBound() = 1" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedRule xmi:id="9938" namespace="9933" name="aggregation" constrainedElement="9933" xmi:type="Constraint">
            <ownedComment xmi:id="9939" annotatedElement="9938" body="The aggregation of an ExtensionEnd is composite." xmi:type="Comment" />
            <specification xmi:id="9940" language="OCL" body="self.aggregation = #composite" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedAttribute xmi:id="9941" visibility="public" isDerived="false" type="9891" class="9933" redefinedProperty="9311" association="9943" isDerivedUnion="false" opposite="9942" isReadOnly="false" isOrdered="false" isUnique="true" name="type" xmi:type="Property">
            <upperValue xmi:id="11107" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9944" annotatedElement="9941" body="References the type of the ExtensionEnd. Note that this association restricts the possible types of an ExtensionEnd to only be Stereotypes." xmi:type="Comment" />
            <lowerValue xmi:id="11108" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9945" visibility="public" isDerived="false" type="8289" class="9933" redefinedProperty="9598" default="0" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="lower" xmi:type="Property">
            <upperValue xmi:id="11109" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9946" annotatedElement="9945" body="This redefinition changes the default multiplicity of association ends, since model elements are usually extended by 0 or 1 instance of the extension stereotype." xmi:type="Comment" />
            <lowerValue xmi:id="11110" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedOperation xmi:id="9947" isQuery="true" visibility="public" redefinedOperation="9625" upper="1" lower="1" class="9933" isOrdered="false" isUnique="true" name="lowerBound" xmi:type="Operation">
            <formalParameter xmi:id="9949" direction="return" type="8289" isOrdered="false" isUnique="true" operation="9947" xmi:type="Parameter">
              <upperValue xmi:id="11111" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="11112" value="1" xmi:type="LiteralString" />
            </formalParameter>
            <bodyCondition xmi:id="9950" namespace="9947" name="spec" constrainedElement="9947" xmi:type="Constraint">
              <specification xmi:id="9951" language="OCL" body="result = lowerBound = if lowerValue-&gt;isEmpty() then 0 else lowerValue-&gt;IntegerValue() endif" xmi:type="OpaqueExpression" />
            </bodyCondition>
            <ownedComment xmi:id="9948" annotatedElement="9947" body="The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default&#xA;&#xA;lower bound, which normally, for MultiplicityElements, evaluates to 1 if empty." xmi:type="Comment" />
          </ownedOperation>
          <generalization xmi:id="11113" general="9463" xmi:type="Generalization" />
          <generalization xmi:id="11115" general="9463" xmi:type="Generalization" />
          <ownedComment xmi:id="9934" annotatedElement="9933" body="ExtensionEnd is a kind of Property that is always typed by a Stereotype. An ExtensionEnd is never navigable. If it was navigable, it would be a property of the extended classifier. Since a profile is not allowed to change the referenced metamodel, it is not possible to add properties to the extended classifier. As a consequence, an ExtensionEnd can only be owned by an Extension. The aggregation of an ExtensionEnd is always composite. The default multiplicity of an ExtensionEnd is 0..1." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9943" visibility="public" isDerived="false" memberEnd="9941" isAbstract="false" name="A_type_extensionEnd" general="9313" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="9942" owningAssociation="9943" visibility="public" isDerived="false" type="9933" isDerivedUnion="false" opposite="9941" isReadOnly="false" isUnique="true" isOrdered="false" name="extensionEnd" xmi:type="Property">
            <upperValue xmi:id="11116" value="*" xmi:type="LiteralString" />
            <lowerValue xmi:id="11117" value="0" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
        <ownedMember xmi:id="9879" visibility="public" isAbstract="false" name="Profile" package="8303" superClass="8377" xmi:type="Class">
          <ownedRule xmi:id="9881" namespace="9879" name="metaclass_reference_not_specialized" constrainedElement="9879" xmi:type="Constraint">
            <ownedComment xmi:id="9882" annotatedElement="9881" body="An element imported as a metaclassReference is not specialized or generalized in a Profile." xmi:type="Comment" />
            <specification xmi:id="9883" language="OCL" body="self.metaclassReference.importedElement-&gt;&#xA;&#xA;  select(c | c.oclIsKindOf(Classifier) and&#xA;&#xA;    (c.generalization.namespace = self or&#xA;&#xA;      (c.specialization.namespace = self) )-&gt;isEmpty()" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedRule xmi:id="9884" namespace="9879" name="references_same_metamodel" constrainedElement="9879" xmi:type="Constraint">
            <ownedComment xmi:id="9885" annotatedElement="9884" body="All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel." xmi:type="Comment" />
            <specification xmi:id="9886" language="OCL" body="self.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages())-&gt;&#xA;&#xA;  union(self.metaclassReference.importedElement.allOwningPackages() )-&gt;notEmpty()" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedAttribute xmi:id="9887" visibility="public" isDerived="true" subsettedProperty="8382" type="9891" class="9879" association="9889" aggregation="composite" isDerivedUnion="false" opposite="9888" isReadOnly="false" isOrdered="false" isUnique="true" name="ownedStereotype" xmi:type="Property">
            <upperValue xmi:id="11118" value="*" xmi:type="LiteralString" />
            <ownedComment xmi:id="9890" annotatedElement="9887" body="References the Stereotypes that are owned by the Profile." xmi:type="Comment" />
            <lowerValue xmi:id="11119" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9968" visibility="public" isDerived="false" subsettedProperty="9245" type="9249" class="9879" association="9970" aggregation="composite" isDerivedUnion="false" opposite="9969" isReadOnly="false" isOrdered="false" isUnique="true" name="metaclassReference" xmi:type="Property">
            <upperValue xmi:id="11120" value="*" xmi:type="LiteralString" />
            <ownedComment xmi:id="9971" annotatedElement="9968" body="References a metaclass that may be extended." xmi:type="Comment" />
            <lowerValue xmi:id="11121" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9972" visibility="public" isDerived="false" subsettedProperty="9271" type="9275" class="9879" association="9974" aggregation="composite" isDerivedUnion="false" opposite="9973" isReadOnly="false" isOrdered="false" isUnique="true" name="metamodelReference" xmi:type="Property">
            <upperValue xmi:id="11122" value="*" xmi:type="LiteralString" />
            <ownedComment xmi:id="9975" annotatedElement="9972" body="References a package containing (directly or indirectly) metaclasses that may be extended." xmi:type="Comment" />
            <lowerValue xmi:id="11123" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <generalization xmi:id="11126" general="8377" xmi:type="Generalization" />
          <ownedComment xmi:id="9880" annotatedElement="9879" body="A Profile is a kind of Package that extends a reference metamodel. The primary extension construct is the Stereotype, which are defined as part of Profiles.&#xA;&#xA;&#xA;&#xA;A profile introduces several constraints, or restrictions, on ordinary metamodeling through the use of the metaclasses defined in this package.&#xA;&#xA;&#xA;&#xA;A profile is a restricted form of a metamodel that must always be related to a reference metamodel, such as UML, as described below. A profile cannot be used without its reference metamodel, and defines a limited capability to extendmetaclasses of the reference metamodel. The extensions are defined as stereotypes that apply to existing metaclasses." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9970" visibility="public" isDerived="false" memberEnd="9968" isAbstract="false" name="A_metaclassReference_profile" general="9248" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="9969" owningAssociation="9970" visibility="public" isDerived="false" type="9879" isDerivedUnion="false" opposite="9968" isReadOnly="false" isUnique="true" isOrdered="false" name="profile" xmi:type="Property">
            <upperValue xmi:id="11127" value="1" xmi:type="LiteralString" />
            <lowerValue xmi:id="11128" value="0" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
        <ownedMember xmi:id="9889" visibility="public" isDerived="false" memberEnd="9887" isAbstract="false" name="A_ownedStereotype_profile" general="9321" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="9888" owningAssociation="9889" visibility="public" isDerived="false" type="9879" redefinedProperty="8387" isDerivedUnion="false" opposite="9887" isReadOnly="false" isUnique="true" isOrdered="false" name="profile" xmi:type="Property">
            <upperValue xmi:id="11129" value="1" xmi:type="LiteralString" />
            <lowerValue xmi:id="11130" value="1" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
        <ownedMember xmi:id="9911" visibility="public" isAbstract="true" name="Element" package="8303" xmi:type="Class">
          <ownedComment xmi:id="9912" annotatedElement="9911" body=" An element is a constituent of a model. An element can own comments." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9918" visibility="public" isDerived="true" memberEnd="9915 9916" isAbstract="false" name="A_extension_metaclass" package="8303" xmi:type="Association" />
        <ownedMember xmi:id="9901" visibility="public" isDerived="false" memberEnd="9899" isAbstract="false" name="A_icon_stereotype" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="9900" owningAssociation="9901" visibility="public" isDerived="false" type="9891" isDerivedUnion="false" opposite="9899" isReadOnly="false" isUnique="true" isOrdered="false" name="stereotype" xmi:type="Property">
            <upperValue xmi:id="11135" value="*" xmi:type="LiteralString" />
            <lowerValue xmi:id="11136" value="0" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
        <ownedMember xmi:id="9891" visibility="public" isAbstract="false" name="Stereotype" package="8303" superClass="9913" xmi:type="Class">
          <ownedRule xmi:id="9893" namespace="9891" name="name_not_clash" constrainedElement="9891" xmi:type="Constraint">
            <ownedComment xmi:id="9894" annotatedElement="9893" body="Stereotype names should not clash with keyword names for the extended model element." xmi:type="Comment" />
            <specification xmi:id="9895" language="OCL" body="true" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedRule xmi:id="9896" namespace="9891" name="generalize" constrainedElement="9891" xmi:type="Constraint">
            <ownedComment xmi:id="9897" annotatedElement="9896" body="A Stereotype may only generalize or specialize another Stereotype." xmi:type="Comment" />
            <specification xmi:id="9898" language="OCL" body="generalization.general-&gt;forAll(e |e.oclIsKindOf(Stereotype)) and generalization.specific-&gt;forAll(e | e.oclIsKindOf(Stereotype)) " xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedAttribute xmi:id="9899" visibility="public" isDerived="false" type="9903" class="9891" association="9901" aggregation="composite" isDerivedUnion="false" opposite="9900" isReadOnly="false" isUnique="true" isOrdered="false" name="icon" xmi:type="Property">
            <upperValue xmi:id="11133" value="*" xmi:type="LiteralString" />
            <ownedComment xmi:id="9902" annotatedElement="9899" body="Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements." xmi:type="Comment" />
            <lowerValue xmi:id="11134" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <generalization xmi:id="11137" general="9913" xmi:type="Generalization" />
          <ownedComment xmi:id="9892" annotatedElement="9891" body="Stereotype is a kind of Class that extends Classes through Extensions. Just like a class, a stereotype may have properties, which may be referred to as tag definitions. When a stereotype is applied to a model element, the values of the properties may be referred to as tagged values. Also, stereotype names should not clash with keyword names for the extended model element." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9876" visibility="public" isAbstract="false" name="Package" package="8303" superClass="8388" xmi:type="Class">
          <ownedAttribute xmi:id="8315" visibility="public" isDerived="false" subsettedProperty="8316" type="8309" class="9876" association="9875" aggregation="composite" isDerivedUnion="false" opposite="8314" isReadOnly="false" isOrdered="false" isUnique="true" name="profileApplication" xmi:type="Property">
            <upperValue xmi:id="11138" value="*" xmi:type="LiteralString" />
            <ownedComment xmi:id="9874" annotatedElement="8315" body="References the ProfileApplications that indicate which profiles have been applied to the Package." xmi:type="Comment" />
            <lowerValue xmi:id="11139" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <generalization xmi:id="11141" general="8388" xmi:type="Generalization" />
          <ownedComment xmi:id="9877" annotatedElement="9876" body="A Package can have one or more ProfileApplications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9919" visibility="public" isAbstract="false" name="Extension" package="8303" superClass="9722" xmi:type="Class">
          <ownedRule xmi:id="9921" namespace="9919" name="non_owned_end" constrainedElement="9919" xmi:type="Constraint">
            <ownedComment xmi:id="9922" annotatedElement="9921" body="The non-owned end of an Extension is typed by a Class." xmi:type="Comment" />
            <specification xmi:id="9923" language="OCL" body="metaclassEnd()-&gt;notEmpty() and metaclass()-&gt;oclIsKindOf(Class)" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedRule xmi:id="9924" namespace="9919" name="is_binary" constrainedElement="9919" xmi:type="Constraint">
            <ownedComment xmi:id="9925" annotatedElement="9924" body="An Extension is binary, i.e., it has only two memberEnds." xmi:type="Comment" />
            <specification xmi:id="9926" language="OCL" body="memberEnd-&gt;size() = 2" xmi:type="OpaqueExpression" />
          </ownedRule>
          <ownedAttribute xmi:id="9927" visibility="public" isDerived="true" type="8297" class="9919" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="true" isUnique="true" isOrdered="false" name="isRequired" xmi:type="Property">
            <upperValue xmi:id="11142" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9928" annotatedElement="9927" body="Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the multiplicity of the Property referenced by Extension::ownedEnd; a multiplicity of 1 means that isRequired is true, but otherwise it is false. Since the default multiplicity of an ExtensionEnd is 0..1, the default value of isRequired is false." xmi:type="Comment" />
            <lowerValue xmi:id="11143" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9916" visibility="public" isDerived="true" type="9913" class="9919" association="9918" isDerivedUnion="false" opposite="9915" isReadOnly="true" isUnique="true" isOrdered="false" name="metaclass" xmi:type="Property">
            <upperValue xmi:id="11131" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9917" annotatedElement="9916" body="References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd." xmi:type="Comment" />
            <lowerValue xmi:id="11132" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9929" visibility="public" isDerived="false" type="9933" class="9919" redefinedProperty="9717" association="9931" aggregation="composite" isDerivedUnion="false" opposite="9930" isReadOnly="false" isOrdered="false" isUnique="true" name="ownedEnd" xmi:type="Property">
            <upperValue xmi:id="11144" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9932" annotatedElement="9929" body="References the end of the extension that is typed by a Stereotype." xmi:type="Comment" />
            <lowerValue xmi:id="11145" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedOperation xmi:id="9952" isQuery="true" visibility="public" upper="1" lower="1" class="9919" isOrdered="false" isUnique="true" name="metaclassEnd" xmi:type="Operation">
            <formalParameter xmi:id="9954" direction="return" type="9463" isOrdered="false" isUnique="true" operation="9952" xmi:type="Parameter">
              <upperValue xmi:id="11146" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="11147" value="1" xmi:type="LiteralString" />
            </formalParameter>
            <bodyCondition xmi:id="9955" namespace="9952" name="spec" constrainedElement="9952" xmi:type="Constraint">
              <specification xmi:id="9956" language="OCL" body="result = memberEnd-&gt;reject(ownedEnd)" xmi:type="OpaqueExpression" />
            </bodyCondition>
            <ownedComment xmi:id="9953" annotatedElement="9952" body="The query metaclassEnd() returns the Property that is typed by a metaclass (as opposed to a stereotype)." xmi:type="Comment" />
          </ownedOperation>
          <ownedOperation xmi:id="9957" isQuery="true" visibility="public" upper="1" lower="1" class="9919" isOrdered="false" isUnique="true" name="metaclass" xmi:type="Operation">
            <formalParameter xmi:id="9959" direction="return" type="9913" isOrdered="false" isUnique="true" operation="9957" xmi:type="Parameter">
              <upperValue xmi:id="11149" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="11150" value="1" xmi:type="LiteralString" />
            </formalParameter>
            <bodyCondition xmi:id="9960" namespace="9957" name="spec" constrainedElement="9957" xmi:type="Constraint">
              <specification xmi:id="9961" language="OCL" body="result = metaclassEnd().type" xmi:type="OpaqueExpression" />
            </bodyCondition>
            <ownedComment xmi:id="9958" annotatedElement="9957" body="The query metaclass() returns the metaclass that is being extended (as opposed to the extending stereotype)." xmi:type="Comment" />
          </ownedOperation>
          <ownedOperation xmi:id="9962" isQuery="true" visibility="public" upper="1" lower="1" class="9919" isOrdered="false" isUnique="true" name="isRequired" xmi:type="Operation">
            <formalParameter xmi:id="9964" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9962" xmi:type="Parameter">
              <upperValue xmi:id="11152" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="11153" value="1" xmi:type="LiteralString" />
            </formalParameter>
            <bodyCondition xmi:id="9965" namespace="9962" name="spec" constrainedElement="9962" xmi:type="Constraint">
              <specification xmi:id="9966" language="OCL" body="result = (ownedEnd-&gt;lowerBound() = 1)" xmi:type="OpaqueExpression" />
            </bodyCondition>
            <ownedComment xmi:id="9963" annotatedElement="9962" body="The query isRequired() is true if the owned end has a multiplicity with the lower bound of 1." xmi:type="Comment" />
          </ownedOperation>
          <generalization xmi:id="11148" general="9722" xmi:type="Generalization" />
          <generalization xmi:id="11151" general="9722" xmi:type="Generalization" />
          <generalization xmi:id="11154" general="9722" xmi:type="Generalization" />
          <generalization xmi:id="11157" general="9722" xmi:type="Generalization" />
          <ownedComment xmi:id="9920" annotatedElement="9919" body="Extension is a kind of Association. One end of the Extension is an ordinary Property and the other end is an ExtensionEnd. The former ties the Extension to a Class, while the latter ties the Extension to a Stereotype that extends the Class." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9931" visibility="public" isDerived="false" memberEnd="9929" isAbstract="false" name="A_ownedEnd_extension" general="9736" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="9930" owningAssociation="9931" visibility="public" isDerived="false" type="9919" redefinedProperty="8387" isDerivedUnion="false" opposite="9929" isReadOnly="false" isUnique="true" isOrdered="false" name="extension" xmi:type="Property">
            <upperValue xmi:id="11158" value="1" xmi:type="LiteralString" />
            <lowerValue xmi:id="11159" value="1" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
        <ownedMember xmi:id="9903" visibility="public" isAbstract="false" name="Image" package="8303" superClass="9911" xmi:type="Class">
          <ownedAttribute xmi:id="9905" visibility="public" isDerived="false" type="8295" class="9903" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="content" xmi:type="Property">
            <upperValue xmi:id="11160" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9906" annotatedElement="9905" body="This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing 'instructions' using a standard such as Scalable Vector Graphic (SVG) (which is XML based)." xmi:type="Comment" />
            <lowerValue xmi:id="11161" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9907" visibility="public" isDerived="false" type="8295" class="9903" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="location" xmi:type="Property">
            <upperValue xmi:id="11162" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9908" annotatedElement="9907" body="This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype." xmi:type="Comment" />
            <lowerValue xmi:id="11163" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="9909" visibility="public" isDerived="false" type="8295" class="9903" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="format" xmi:type="Property">
            <upperValue xmi:id="11164" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9910" annotatedElement="9909" body="This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.&#xA;&#xA;&#xA;&#xA;In addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example &quot;SVG&quot; could instead be expressed as &quot;MIME: image/svg+xml&quot;." xmi:type="Comment" />
            <lowerValue xmi:id="11165" value="0" xmi:type="LiteralString" />
          </ownedAttribute>
          <generalization xmi:id="11166" general="9911" xmi:type="Generalization" />
          <ownedComment xmi:id="9904" annotatedElement="9903" body="The Image class provides the necessary information to display an Image in a diagram. Icons are typically handled through the Image class." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9976" visibility="public" isAbstract="true" name="NamedElement" package="8303" xmi:type="Class">
          <ownedOperation xmi:id="9977" isQuery="true" visibility="public" upper="1" lower="1" class="9976" isOrdered="false" isUnique="true" name="allOwningPackages" xmi:type="Operation">
            <formalParameter xmi:id="9979" direction="return" type="9876" isOrdered="false" isUnique="true" operation="9977" xmi:type="Parameter">
              <upperValue xmi:id="11167" value="*" xmi:type="LiteralString" />
              <lowerValue xmi:id="11168" value="0" xmi:type="LiteralString" />
            </formalParameter>
            <bodyCondition xmi:id="9980" namespace="9977" name="spec" constrainedElement="9977" xmi:type="Constraint">
              <specification xmi:id="9981" language="OCL" body="result = self.namespace-&gt;select(p | p.oclIsKindOf(Package))-&gt;union(p.allOwningPackages())" xmi:type="OpaqueExpression" />
            </bodyCondition>
            <ownedComment xmi:id="9978" annotatedElement="9977" body="The query allOwningPackages() returns all the directly or indirectly owning packages." xmi:type="Comment" />
          </ownedOperation>
        </ownedMember>
        <ownedMember xmi:id="8309" visibility="public" isAbstract="false" name="ProfileApplication" package="8303" superClass="8330" xmi:type="Class">
          <ownedAttribute xmi:id="8305" visibility="public" isDerived="false" subsettedProperty="8332" type="9879" class="8309" association="8304" isDerivedUnion="false" opposite="8306" isReadOnly="false" isOrdered="false" isUnique="true" name="appliedProfile" xmi:type="Property">
            <upperValue xmi:id="9987" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="9878" annotatedElement="8305" body="References the Profiles that are applied to a Package through this ProfileApplication." xmi:type="Comment" />
            <lowerValue xmi:id="9989" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="8311" visibility="public" isDerived="false" type="8297" class="8309" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isStrict" xmi:type="Property">
            <upperValue xmi:id="11169" value="1" xmi:type="LiteralString" />
            <ownedComment xmi:id="8312" annotatedElement="8311" body="Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied." xmi:type="Comment" />
            <lowerValue xmi:id="11170" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <ownedAttribute xmi:id="8314" visibility="public" isDerived="false" subsettedProperty="8328 8317" type="9876" class="8309" association="9875" isDerivedUnion="false" opposite="8315" isReadOnly="false" isUnique="true" isOrdered="false" name="applyingPackage" xmi:type="Property">
            <upperValue xmi:id="11171" value="1" xmi:type="LiteralString" />
            <lowerValue xmi:id="11172" value="1" xmi:type="LiteralString" />
          </ownedAttribute>
          <generalization xmi:id="11174" general="8330" xmi:type="Generalization" />
          <ownedComment xmi:id="8310" annotatedElement="8309" body="ProfileApplication is a kind of PackageImport that adds the capability to state that a Profile is applied to a Package." xmi:type="Comment" />
        </ownedMember>
        <ownedMember xmi:id="9875" visibility="public" isDerived="false" memberEnd="8315 8314" isAbstract="false" name="A_profileApplication_applyingPackage" general="8319 8327" package="8303" xmi:type="Association" />
        <ownedMember xmi:id="9974" visibility="public" isDerived="false" memberEnd="9972" isAbstract="false" name="A_metamodelReference_profile" general="9274" package="8303" xmi:type="Association">
          <ownedEnd xmi:id="9973" owningAssociation="9974" visibility="public" isDerived="false" type="9879" isDerivedUnion="false" opposite="9972" isReadOnly="false" isUnique="true" isOrdered="false" name="profile" xmi:type="Property">
            <upperValue xmi:id="11175" value="1" xmi:type="LiteralString" />
            <lowerValue xmi:id="11176" value="0" xmi:type="LiteralString" />
          </ownedEnd>
        </ownedMember>
      </nestedPackage>
      <nestedPackage xmi:id="8301" visibility="public" name="Core" nestingPackage="8302" xmi:type="Package">
        <nestedPackage xmi:id="8883" visibility="public" name="Basic" nestingPackage="8301" xmi:type="Package">
          <packageImport xmi:id="8980" importingNamespace="8883" visibility="public" importedPackage="8290" xmi:type="PackageImport" />
          <ownedMember xmi:id="8884" visibility="public" isAbstract="false" name="Class" package="8883" superClass="8912" xmi:type="Class">
            <ownedAttribute xmi:id="8886" visibility="public" isDerived="false" type="8297" class="8884" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isAbstract" xmi:type="Property">
              <upperValue xmi:id="10570" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8887" annotatedElement="8886" body="True when a class is abstract." xmi:type="Comment" />
              <lowerValue xmi:id="10571" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8888" visibility="public" isDerived="false" type="8892" class="8884" association="8891" aggregation="composite" isDerivedUnion="false" opposite="8889" isReadOnly="false" isUnique="true" isOrdered="true" name="ownedAttribute" xmi:type="Property">
              <upperValue xmi:id="10572" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8944" annotatedElement="8888" body="The attributes owned by a class. These do not include the inherited attributes. Attributes are represented by instances of Property." xmi:type="Comment" />
              <lowerValue xmi:id="10573" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8945" visibility="public" isDerived="false" type="8949" class="8884" association="8948" aggregation="composite" isDerivedUnion="false" opposite="8946" isReadOnly="false" isUnique="true" isOrdered="true" name="ownedOperation" xmi:type="Property">
              <upperValue xmi:id="10574" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8962" annotatedElement="8945" body="The operations owned by a class. These do not include the inherited operations." xmi:type="Comment" />
              <lowerValue xmi:id="10575" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8963" visibility="public" isDerived="false" type="8884" class="8884" association="8965" isDerivedUnion="false" opposite="8964" isReadOnly="false" isUnique="true" isOrdered="false" name="superClass" xmi:type="Property">
              <upperValue xmi:id="10576" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8966" annotatedElement="8963" body="The immediate superclasses of a class, from which the class inherits." xmi:type="Comment" />
              <lowerValue xmi:id="10577" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10586" general="8912" xmi:type="Generalization" />
            <ownedComment xmi:id="8885" annotatedElement="8884" body="A class is a type that has objects as its instances." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8910" visibility="public" isDerived="false" memberEnd="8908" isAbstract="false" name="A_type_typedElement" package="8883" xmi:type="Association">
            <ownedEnd xmi:id="8909" owningAssociation="8910" visibility="public" isDerived="false" type="8906" isDerivedUnion="false" opposite="8908" isReadOnly="false" isUnique="true" isOrdered="false" name="typedElement" xmi:type="Property">
              <upperValue xmi:id="10589" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10590" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8933" visibility="public" isDerived="false" memberEnd="8931" isAbstract="false" name="A_ownedComment_owningElement" package="8883" xmi:type="Association">
            <ownedEnd xmi:id="8932" owningAssociation="8933" visibility="public" isDerived="false" type="8929" isDerivedUnion="false" opposite="8931" isReadOnly="false" isUnique="true" isOrdered="false" name="owningElement" xmi:type="Property">
              <upperValue xmi:id="10591" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10592" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8891" visibility="public" isDerived="false" memberEnd="8888 8889" isAbstract="false" name="A_ownedAttribute_class" package="8883" xmi:type="Association" />
          <ownedMember xmi:id="8967" visibility="public" isAbstract="false" name="PrimitiveType" package="8883" superClass="8969" xmi:type="Class">
            <generalization xmi:id="10597" general="8969" xmi:type="Generalization" />
            <ownedComment xmi:id="8968" annotatedElement="8967" body="A primitive type is a data type implemented by the underlying infrastructure and made available for modeling." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8929" visibility="public" isAbstract="true" name="Element" package="8883" xmi:type="Class">
            <ownedAttribute xmi:id="8931" visibility="public" isDerived="false" type="8935" class="8929" association="8933" aggregation="composite" isDerivedUnion="false" opposite="8932" isReadOnly="false" isUnique="true" isOrdered="false" name="ownedComment" xmi:type="Property">
              <upperValue xmi:id="10582" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8934" annotatedElement="8931" body="The Comments owned by this element." xmi:type="Comment" />
              <lowerValue xmi:id="10583" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedComment xmi:id="8930" annotatedElement="8929" body="Element is an abstract metaclass with no superclass. It is used as the common superclass for all metaclasses in the infrastructure library." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8892" visibility="public" isAbstract="false" name="Property" package="8883" superClass="8906 8882" xmi:type="Class">
            <ownedAttribute xmi:id="8894" visibility="public" isDerived="false" type="8297" class="8892" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isReadOnly" xmi:type="Property">
              <upperValue xmi:id="10598" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8895" annotatedElement="8894" body="If isReadOnly is true, the attribute may not be written to after initialization." xmi:type="Comment" />
              <lowerValue xmi:id="10599" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8896" visibility="public" isDerived="false" type="8295" class="8892" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="default" xmi:type="Property">
              <upperValue xmi:id="10600" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8897" annotatedElement="8896" body="A string that is evaluated to give a default value for the attribute when an object of the owning class is instantiated." xmi:type="Comment" />
              <lowerValue xmi:id="10601" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8898" visibility="public" isDerived="false" type="8297" class="8892" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isComposite" xmi:type="Property">
              <upperValue xmi:id="10602" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8899" annotatedElement="8898" body="If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute." xmi:type="Comment" />
              <lowerValue xmi:id="10603" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8900" visibility="public" isDerived="false" type="8297" class="8892" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isDerived" xmi:type="Property">
              <upperValue xmi:id="10604" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8901" annotatedElement="8900" body="If isDerived is true, the value of the attribute is derived from information elsewhere." xmi:type="Comment" />
              <lowerValue xmi:id="10605" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8889" visibility="public" isDerived="false" type="8884" class="8892" association="8891" isDerivedUnion="false" opposite="8888" isReadOnly="false" isUnique="true" isOrdered="false" name="class" xmi:type="Property">
              <upperValue xmi:id="10593" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8890" annotatedElement="8889" body="The class that owns the property, and of which the property is an attribute." xmi:type="Comment" />
              <lowerValue xmi:id="10594" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8902" visibility="public" isDerived="false" type="8892" class="8892" association="8904" isDerivedUnion="false" opposite="8903" isReadOnly="false" isUnique="true" isOrdered="false" name="opposite" xmi:type="Property">
              <upperValue xmi:id="10606" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8905" annotatedElement="8902" body="Two attributes attr1 and attr2 of two objects o1 and o2 (which may be the same object) may be paired with each other so that o1.attr1 refers to o2 if and only if o2.attr2 refers to o1. In such a case attr1 is the opposite of attr2 and attr2 is the opposite of attr1." xmi:type="Comment" />
              <lowerValue xmi:id="10607" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10638" general="8906" xmi:type="Generalization" />
            <generalization xmi:id="10639" general="8882" xmi:type="Generalization" />
            <ownedComment xmi:id="8893" annotatedElement="8892" body="A property is a typed element that represents an attribute of a class." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8965" visibility="public" isDerived="false" memberEnd="8963" isAbstract="false" name="A_superClass_class" package="8883" xmi:type="Association">
            <ownedEnd xmi:id="8964" owningAssociation="8965" visibility="public" isDerived="false" type="8884" isDerivedUnion="false" opposite="8963" isReadOnly="false" isUnique="true" isOrdered="false" name="class" xmi:type="Property">
              <upperValue xmi:id="10640" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10641" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8949" visibility="public" isAbstract="false" name="Operation" package="8883" superClass="8906 8882" xmi:type="Class">
            <ownedAttribute xmi:id="8951" visibility="public" isDerived="false" type="8912" class="8949" association="8953" isDerivedUnion="false" opposite="8952" isReadOnly="false" isUnique="true" isOrdered="false" name="raisedException" xmi:type="Property">
              <upperValue xmi:id="10642" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8954" annotatedElement="8951" body="The exceptions that are declared as possible during an invocation of the operation." xmi:type="Comment" />
              <lowerValue xmi:id="10643" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8955" visibility="public" isDerived="false" type="8959" class="8949" association="8958" aggregation="composite" isDerivedUnion="false" opposite="8956" isReadOnly="false" isUnique="true" isOrdered="true" name="ownedParameter" xmi:type="Property">
              <upperValue xmi:id="10644" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8961" annotatedElement="8955" body="The parameters to the operation." xmi:type="Comment" />
              <lowerValue xmi:id="10645" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8946" visibility="public" isDerived="false" type="8884" class="8949" association="8948" isDerivedUnion="false" opposite="8945" isReadOnly="false" isUnique="true" isOrdered="false" name="class" xmi:type="Property">
              <upperValue xmi:id="10646" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8947" annotatedElement="8946" body="The class that owns the operation." xmi:type="Comment" />
              <lowerValue xmi:id="10647" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10650" general="8906" xmi:type="Generalization" />
            <generalization xmi:id="10651" general="8882" xmi:type="Generalization" />
            <ownedComment xmi:id="8950" annotatedElement="8949" body="An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8882" visibility="public" isAbstract="true" name="MultiplicityElement" package="8883" superClass="8929" xmi:type="Class">
            <ownedRule xmi:id="8982" namespace="8882" name="upper_gt_0" constrainedElement="8882" xmi:type="Constraint">
              <ownedComment xmi:id="8983" annotatedElement="8982" body="A multiplicity must define at least one valid cardinality that is greater than zero." xmi:type="Comment" />
              <specification xmi:id="8984" language="OCL" body="upperBound()-&gt;notEmpty() implies upperBound() &gt; 0" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="8985" namespace="8882" name="lower_ge_0" constrainedElement="8882" xmi:type="Constraint">
              <ownedComment xmi:id="8986" annotatedElement="8985" body="The lower bound must be a non-negative integer literal." xmi:type="Comment" />
              <specification xmi:id="8987" language="OCL" body="lowerBound()-&gt;notEmpty() implies lowerBound() &gt;= 0" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="8988" namespace="8882" name="upper_ge_lower" constrainedElement="8882" xmi:type="Constraint">
              <ownedComment xmi:id="8989" annotatedElement="8988" body="The upper bound must be greater than or equal to the lower bound." xmi:type="Comment" />
              <specification xmi:id="8990" language="OCL" body="(upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()) implies upperBound() &gt;= lowerBound()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="8991" visibility="public" isDerived="false" type="8297" class="8882" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isOrdered" xmi:type="Property">
              <upperValue xmi:id="10610" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8992" annotatedElement="8991" body="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.." xmi:type="Comment" />
              <lowerValue xmi:id="10611" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8993" visibility="public" isDerived="false" type="8297" class="8882" default="true" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isUnique" xmi:type="Property">
              <upperValue xmi:id="10612" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8994" annotatedElement="8993" body="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique." xmi:type="Comment" />
              <lowerValue xmi:id="10613" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8995" visibility="public" isDerived="false" type="8289" class="8882" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="lower" xmi:type="Property">
              <upperValue xmi:id="10614" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8996" annotatedElement="8995" body="Specifies the lower bound of the multiplicity interval." xmi:type="Comment" />
              <lowerValue xmi:id="10615" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8997" visibility="public" isDerived="false" type="8291" class="8882" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="upper" xmi:type="Property">
              <upperValue xmi:id="10616" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8998" annotatedElement="8997" body="Specifies the upper bound of the multiplicity interval." xmi:type="Comment" />
              <lowerValue xmi:id="10617" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="8999" isQuery="true" visibility="public" upper="1" lower="1" class="8882" isOrdered="false" isUnique="true" name="lowerBound" xmi:type="Operation">
              <formalParameter xmi:id="9001" direction="return" type="8289" isOrdered="false" isUnique="true" operation="8999" xmi:type="Parameter">
                <upperValue xmi:id="10618" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10619" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9002" namespace="8999" name="spec" constrainedElement="8999" xmi:type="Constraint">
                <specification xmi:id="9003" language="OCL" body="result = if lower-&gt;notEmpty() then lower else 1 endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9000" annotatedElement="8999" body="The query lowerBound() returns the lower bound of the multiplicity as an integer." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9004" isQuery="true" visibility="public" upper="1" lower="1" class="8882" isOrdered="false" isUnique="true" name="upperBound" xmi:type="Operation">
              <formalParameter xmi:id="9006" direction="return" type="8291" isOrdered="false" isUnique="true" operation="9004" xmi:type="Parameter">
                <upperValue xmi:id="10621" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10622" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9007" namespace="9004" name="spec" constrainedElement="9004" xmi:type="Constraint">
                <specification xmi:id="9008" language="OCL" body="result = if upper-&gt;notEmpty() then upper else 1 endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9005" annotatedElement="9004" body="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9009" isQuery="true" visibility="public" upper="1" lower="1" class="8882" isOrdered="false" isUnique="true" name="isMultivalued" xmi:type="Operation">
              <formalParameter xmi:id="9011" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9009" xmi:type="Parameter">
                <upperValue xmi:id="10624" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10625" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9014" namespace="9009" name="spec" constrainedElement="9009" xmi:type="Constraint">
                <specification xmi:id="9015" language="OCL" body="result = upperBound() &gt; 1" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9012" namespace="9009" constrainedElement="9009" xmi:type="Constraint">
                <specification xmi:id="9013" language="OCL" body="upperBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9010" annotatedElement="9009" body="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9016" isQuery="true" visibility="public" upper="1" lower="1" class="8882" isOrdered="false" isUnique="true" name="includesCardinality" xmi:type="Operation">
              <formalParameter xmi:id="9018" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9016" xmi:type="Parameter">
                <upperValue xmi:id="10627" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10628" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9019" direction="in" type="8289" isOrdered="false" isUnique="true" name="C" operation="9016" xmi:type="Parameter">
                <upperValue xmi:id="10629" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10630" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9022" namespace="9016" name="spec" constrainedElement="9016" xmi:type="Constraint">
                <specification xmi:id="9023" language="OCL" body="result = (lowerBound() &lt;= C) and (upperBound() &gt;= C)" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9020" namespace="9016" constrainedElement="9016" xmi:type="Constraint">
                <specification xmi:id="9021" language="OCL" body="upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9017" annotatedElement="9016" body="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9024" isQuery="true" visibility="public" upper="1" lower="1" class="8882" isOrdered="false" isUnique="true" name="includesMultiplicity" xmi:type="Operation">
              <formalParameter xmi:id="9026" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9024" xmi:type="Parameter">
                <upperValue xmi:id="10632" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10633" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9027" direction="in" type="8882" isOrdered="false" isUnique="true" name="M" operation="9024" xmi:type="Parameter">
                <upperValue xmi:id="10634" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10635" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9030" namespace="9024" name="spec" constrainedElement="9024" xmi:type="Constraint">
                <specification xmi:id="9031" language="OCL" body="result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() &gt;= M.upperBound())" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9028" namespace="9024" constrainedElement="9024" xmi:type="Constraint">
                <specification xmi:id="9029" language="OCL" body="self.upperBound()-&gt;notEmpty() and self.lowerBound()-&gt;notEmpty() and M.upperBound()-&gt;notEmpty() and M.lowerBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9025" annotatedElement="9024" body="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10620" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10623" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10626" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10631" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10636" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10637" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10649" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10652" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10682" general="8929" xmi:type="Generalization" />
            <ownedComment xmi:id="8981" annotatedElement="8882" body="A MultiplicityElement is an abstract metaclass which includes optional attributes for defining the bounds of a multiplicity. A MultiplicityElement also includes specifications of whether the values in an instantiation of this element must be unique or ordered." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8941" visibility="public" isDerived="false" memberEnd="8939" isAbstract="false" name="A_annotatedElement_comment" package="8883" xmi:type="Association">
            <ownedEnd xmi:id="8940" owningAssociation="8941" visibility="public" isDerived="false" type="8935" isDerivedUnion="false" opposite="8939" isReadOnly="false" isUnique="true" isOrdered="false" name="comment" xmi:type="Property">
              <upperValue xmi:id="10655" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10656" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8971" visibility="public" isDerived="false" memberEnd="8972 8973" isAbstract="false" name="A_ownedLiteral_enumeration" package="8883" xmi:type="Association" />
          <ownedMember xmi:id="8935" visibility="public" isAbstract="false" name="Comment" package="8883" superClass="8929" xmi:type="Class">
            <ownedAttribute xmi:id="8937" visibility="public" isDerived="false" type="8295" class="8935" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="body" xmi:type="Property">
              <upperValue xmi:id="10661" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8938" annotatedElement="8937" body="Specifies a string that is the comment." xmi:type="Comment" />
              <lowerValue xmi:id="10662" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8939" visibility="public" isDerived="false" type="8929" class="8935" association="8941" isDerivedUnion="false" opposite="8940" isReadOnly="false" isUnique="true" isOrdered="false" name="annotatedElement" xmi:type="Property">
              <upperValue xmi:id="10653" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8942" annotatedElement="8939" body="References the Element(s) being commented." xmi:type="Comment" />
              <lowerValue xmi:id="10654" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10663" general="8929" xmi:type="Generalization" />
            <ownedComment xmi:id="8936" annotatedElement="8935" body="A comment gives the ability to attach various remarks to elements. A comment carries no semantic force, but may contain information that is useful to a modeler. A comment may be owned by any element." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8918" visibility="public" isAbstract="false" name="Package" package="8883" superClass="8925" xmi:type="Class">
            <ownedAttribute xmi:id="8920" visibility="public" isDerived="false" type="8918" class="8918" association="8923" aggregation="composite" isDerivedUnion="false" opposite="8921" isReadOnly="false" isUnique="true" isOrdered="false" name="nestedPackage" xmi:type="Property">
              <upperValue xmi:id="10664" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8924" annotatedElement="8920" body="The set of contained packages." xmi:type="Comment" />
              <lowerValue xmi:id="10665" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8921" visibility="public" isDerived="false" type="8918" class="8918" association="8923" isDerivedUnion="false" opposite="8920" isReadOnly="false" isUnique="true" isOrdered="false" name="nestingPackage" xmi:type="Property">
              <upperValue xmi:id="10666" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8922" annotatedElement="8921" body="The containing package." xmi:type="Comment" />
              <lowerValue xmi:id="10667" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8915" visibility="public" isDerived="false" type="8912" class="8918" association="8917" aggregation="composite" isDerivedUnion="false" opposite="8914" isReadOnly="false" isUnique="true" isOrdered="false" name="ownedType" xmi:type="Property">
              <upperValue xmi:id="10668" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8916" annotatedElement="8915" body="The set of contained types." xmi:type="Comment" />
              <lowerValue xmi:id="10669" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10671" general="8925" xmi:type="Generalization" />
            <ownedComment xmi:id="8919" annotatedElement="8918" body="A package is a container for types and other packages." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8958" visibility="public" isDerived="false" memberEnd="8955 8956" isAbstract="false" name="A_ownedParameter_operation" package="8883" xmi:type="Association" />
          <ownedMember xmi:id="8925" visibility="public" isAbstract="true" name="NamedElement" package="8883" superClass="8929" xmi:type="Class">
            <ownedAttribute xmi:id="8927" visibility="public" isDerived="false" type="8295" class="8925" aggregation="composite" isDerivedUnion="false" isID="true" isReadOnly="false" isUnique="true" isOrdered="false" name="name" xmi:type="Property">
              <upperValue xmi:id="10580" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8928" annotatedElement="8927" body="The name of the NamedElement." xmi:type="Comment" />
              <lowerValue xmi:id="10581" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10584" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10608" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10670" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10674" general="8929" xmi:type="Generalization" />
            <generalization xmi:id="10677" general="8929" xmi:type="Generalization" />
            <ownedComment xmi:id="8926" annotatedElement="8925" body="A named element represents elements with names." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8975" visibility="public" isAbstract="false" name="Enumeration" package="8883" superClass="8969" xmi:type="Class">
            <ownedAttribute xmi:id="8972" visibility="public" isDerived="false" type="8977" class="8975" association="8971" aggregation="composite" isDerivedUnion="false" opposite="8973" isReadOnly="false" isUnique="true" isOrdered="true" name="ownedLiteral" xmi:type="Property">
              <upperValue xmi:id="10657" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8979" annotatedElement="8972" body="The ordered set of literals for this Enumeration." xmi:type="Comment" />
              <lowerValue xmi:id="10658" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10676" general="8969" xmi:type="Generalization" />
            <ownedComment xmi:id="8976" annotatedElement="8975" body="An enumeration defines a set of literals that can be used as its values." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8977" visibility="public" isAbstract="false" name="EnumerationLiteral" package="8883" superClass="8925" xmi:type="Class">
            <ownedAttribute xmi:id="8973" visibility="public" isDerived="false" type="8975" class="8977" association="8971" isDerivedUnion="false" opposite="8972" isReadOnly="false" isUnique="true" isOrdered="false" name="enumeration" xmi:type="Property">
              <upperValue xmi:id="10659" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8974" annotatedElement="8973" body="The Enumeration that this EnumerationLiteral is a member of." xmi:type="Comment" />
              <lowerValue xmi:id="10660" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10678" general="8925" xmi:type="Generalization" />
            <ownedComment xmi:id="8978" annotatedElement="8977" body="An enumeration literal is a value of an enumeration." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8953" visibility="public" isDerived="false" memberEnd="8951" isAbstract="false" name="A_raisedException_operation" package="8883" xmi:type="Association">
            <ownedEnd xmi:id="8952" owningAssociation="8953" visibility="public" isDerived="false" type="8949" isDerivedUnion="false" opposite="8951" isReadOnly="false" isUnique="true" isOrdered="false" name="operation" xmi:type="Property">
              <upperValue xmi:id="10679" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10680" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8959" visibility="public" isAbstract="false" name="Parameter" package="8883" superClass="8906 8882" xmi:type="Class">
            <ownedAttribute xmi:id="8956" visibility="public" isDerived="false" type="8949" class="8959" association="8958" isDerivedUnion="false" opposite="8955" isReadOnly="false" isUnique="true" isOrdered="false" name="operation" xmi:type="Property">
              <upperValue xmi:id="10672" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8957" annotatedElement="8956" body="The operation that owns the parameter." xmi:type="Comment" />
              <lowerValue xmi:id="10673" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10683" general="8906" xmi:type="Generalization" />
            <generalization xmi:id="10684" general="8882" xmi:type="Generalization" />
            <ownedComment xmi:id="8960" annotatedElement="8959" body="A parameter is a typed element that represents a parameter of an operation." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8904" visibility="public" isDerived="false" memberEnd="8902" isAbstract="false" name="A_opposite_property" package="8883" xmi:type="Association">
            <ownedEnd xmi:id="8903" owningAssociation="8904" visibility="public" isDerived="false" type="8892" isDerivedUnion="false" opposite="8902" isReadOnly="false" isUnique="true" isOrdered="false" name="property" xmi:type="Property">
              <upperValue xmi:id="10685" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10686" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8917" visibility="public" isDerived="false" memberEnd="8915 8914" isAbstract="false" name="A_ownedType_package" package="8883" xmi:type="Association" />
          <ownedMember xmi:id="8923" visibility="public" isDerived="false" memberEnd="8920 8921" isAbstract="false" name="A_nestedPackage_nestingPackage" package="8883" xmi:type="Association" />
          <ownedMember xmi:id="8969" visibility="public" isAbstract="true" name="DataType" package="8883" superClass="8912" xmi:type="Class">
            <generalization xmi:id="10596" general="8912" xmi:type="Generalization" />
            <generalization xmi:id="10675" general="8912" xmi:type="Generalization" />
            <generalization xmi:id="10687" general="8912" xmi:type="Generalization" />
            <ownedComment xmi:id="8970" annotatedElement="8969" body="DataType is an abstract class that acts as a common superclass for different kinds of data types." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8948" visibility="public" isDerived="false" memberEnd="8945 8946" isAbstract="false" name="A_ownedOperation_class" package="8883" xmi:type="Association" />
          <ownedMember xmi:id="8906" visibility="public" isAbstract="true" name="TypedElement" package="8883" superClass="8925" xmi:type="Class">
            <ownedAttribute xmi:id="8908" visibility="public" isDerived="false" type="8912" class="8906" association="8910" isDerivedUnion="false" opposite="8909" isReadOnly="false" isUnique="true" isOrdered="false" name="type" xmi:type="Property">
              <upperValue xmi:id="10587" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8911" annotatedElement="8908" body="The type of the TypedElement." xmi:type="Comment" />
              <lowerValue xmi:id="10588" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10609" general="8925" xmi:type="Generalization" />
            <generalization xmi:id="10648" general="8925" xmi:type="Generalization" />
            <generalization xmi:id="10681" general="8925" xmi:type="Generalization" />
            <generalization xmi:id="10688" general="8925" xmi:type="Generalization" />
            <ownedComment xmi:id="8907" annotatedElement="8906" body="A typed element is a kind of named element that represents elements with types." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8912" visibility="public" isAbstract="true" name="Type" package="8883" superClass="8925" xmi:type="Class">
            <ownedAttribute xmi:id="8914" visibility="public" isDerived="false" type="8918" class="8912" association="8917" isDerivedUnion="false" opposite="8915" isReadOnly="false" isUnique="true" isOrdered="false" name="package" xmi:type="Property">
              <upperValue xmi:id="10578" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8943" annotatedElement="8914" body="Specifies the owning package of this classifier, if any." xmi:type="Comment" />
              <lowerValue xmi:id="10579" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10585" general="8925" xmi:type="Generalization" />
            <generalization xmi:id="10595" general="8925" xmi:type="Generalization" />
            <generalization xmi:id="10689" general="8925" xmi:type="Generalization" />
            <ownedComment xmi:id="8913" annotatedElement="8912" body="A type is a named element that is used as the type for a typed element. A type can be contained in a package." xmi:type="Comment" />
          </ownedMember>
        </nestedPackage>
        <nestedPackage xmi:id="8320" visibility="public" name="Constructs" nestingPackage="8301" xmi:type="Package">
          <packageImport xmi:id="9872" importingNamespace="8320" visibility="public" importedPackage="8290" xmi:type="PackageImport" />
          <ownedMember xmi:id="8321" visibility="public" isAbstract="false" name="PackageMerge" package="8320" superClass="8330" xmi:type="Class">
            <ownedAttribute xmi:id="8323" visibility="public" isDerived="false" subsettedProperty="8328 8317" type="8377" class="8321" association="8326" isDerivedUnion="false" opposite="8324" isReadOnly="false" isOrdered="false" isUnique="true" name="receivingPackage" xmi:type="Property">
              <upperValue xmi:id="9997" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9414" annotatedElement="8323" body="References the Package that is being extended with the contents of the merged package of the PackageMerge." xmi:type="Comment" />
              <lowerValue xmi:id="9998" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9415" visibility="public" isDerived="false" subsettedProperty="8332" type="8377" class="8321" association="9417" isDerivedUnion="false" opposite="9416" isReadOnly="false" isOrdered="false" isUnique="true" name="mergedPackage" xmi:type="Property">
              <upperValue xmi:id="9999" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9418" annotatedElement="9415" body="References the Package that is to be merged with the receiving package of the PackageMerge." xmi:type="Comment" />
              <lowerValue xmi:id="10000" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10018" general="8330" xmi:type="Generalization" />
            <ownedComment xmi:id="8322" annotatedElement="8321" body="A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both.&#xA;&#xA;&#xA;&#xA;This mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.&#xA;&#xA;&#xA;&#xA;Conceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9419" visibility="public" isDerived="false" memberEnd="9420 9421" isAbstract="false" name="A_feature_featuringClassifier" general="8396" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9560" visibility="public" isDerived="false" memberEnd="9558" isAbstract="false" name="A_ownedParameter_ownerFormalParam" general="9290" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9559" owningAssociation="9560" visibility="public" isDerived="false" subsettedProperty="8384" type="9556" isDerivedUnion="false" opposite="9558" isReadOnly="false" isUnique="true" isOrdered="false" name="ownerFormalParam" xmi:type="Property">
              <upperValue xmi:id="10033" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10034" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9529" visibility="public" isDerived="false" memberEnd="9527 9526" isAbstract="false" name="A_ownedOperation_datatype" general="9419 9290 9459" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9747" visibility="public" isDerived="false" memberEnd="9745" isAbstract="false" name="A_subsettedProperty_property" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9746" owningAssociation="9747" visibility="public" isDerived="false" type="9463" isDerivedUnion="false" opposite="9745" isReadOnly="false" isUnique="true" isOrdered="false" name="property" xmi:type="Property">
              <upperValue xmi:id="10045" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10046" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8400" visibility="public" isAbstract="true" name="NamedElement" package="8320" superClass="8338" xmi:type="Class">
            <ownedRule xmi:id="8402" namespace="8400" name="has_no_qualified_name" constrainedElement="8400" xmi:type="Constraint">
              <ownedComment xmi:id="8403" annotatedElement="8402" body="If there is no name, or one of the containing namespaces has no name, there is no qualified name." xmi:type="Comment" />
              <specification xmi:id="8404" language="OCL" body="(self.name-&gt;isEmpty() or self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;notEmpty())&#xA;&#xA;  implies self.qualifiedName-&gt;isEmpty()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="8405" namespace="8400" name="has_qualified_name" constrainedElement="8400" xmi:type="Constraint">
              <ownedComment xmi:id="8406" annotatedElement="8405" body="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces." xmi:type="Comment" />
              <specification xmi:id="8407" language="OCL" body="(self.name-&gt;notEmpty() and self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()-&gt;iterate( ns : Namespace; result: String = self.name | ns.name-&gt;union(self.separator())-&gt;union(result))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="8408" namespace="8400" name="visibility_needs_ownership" constrainedElement="8400" xmi:type="Constraint">
              <ownedComment xmi:id="8409" annotatedElement="8408" body="If a NamedElement is not owned by a Namespace, it does not have a visibility." xmi:type="Comment" />
              <specification xmi:id="8410" language="OCL" body="namespace-&gt;isEmpty() implies visibility-&gt;isEmpty()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="8411" visibility="public" isDerived="false" type="8295" class="8400" aggregation="composite" isDerivedUnion="false" isID="true" isReadOnly="false" isUnique="true" isOrdered="false" name="name" xmi:type="Property">
              <upperValue xmi:id="10047" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8412" annotatedElement="8411" body="The name of the NamedElement." xmi:type="Comment" />
              <lowerValue xmi:id="10048" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8413" visibility="public" isDerived="false" type="8415" class="8400" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="visibility" xmi:type="Property">
              <upperValue xmi:id="10049" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8414" annotatedElement="8413" body="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility." xmi:type="Comment" />
              <lowerValue xmi:id="10050" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8384" visibility="public" isDerived="true" subsettedProperty="8317" type="8388" class="8400" association="9290" isDerivedUnion="true" opposite="8385" isReadOnly="true" isOrdered="false" isUnique="true" name="namespace" xmi:type="Property">
              <upperValue xmi:id="10031" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9389" annotatedElement="8384" body="Specifies the namespace that owns the NamedElement." xmi:type="Comment" />
              <lowerValue xmi:id="10032" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9221" visibility="public" isDerived="true" type="8295" class="8400" aggregation="composite" isDerivedUnion="false" isReadOnly="true" isUnique="true" isOrdered="false" name="qualifiedName" xmi:type="Property">
              <upperValue xmi:id="10051" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9222" annotatedElement="9221" body="A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself." xmi:type="Comment" />
              <lowerValue xmi:id="10052" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9223" isQuery="true" visibility="public" upper="1" lower="1" class="8400" isOrdered="false" isUnique="true" name="allNamespaces" xmi:type="Operation">
              <formalParameter xmi:id="9225" direction="return" type="8388" isOrdered="true" isUnique="true" operation="9223" xmi:type="Parameter">
                <upperValue xmi:id="10053" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10054" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9226" namespace="9223" name="spec" constrainedElement="9223" xmi:type="Constraint">
                <specification xmi:id="9227" language="OCL" body="result = if self.namespace-&gt;isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()-&gt;prepend(self.namespace)&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9224" annotatedElement="9223" body="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9228" isQuery="true" visibility="public" upper="1" lower="1" class="8400" isOrdered="false" isUnique="true" name="isDistinguishableFrom" xmi:type="Operation">
              <formalParameter xmi:id="9230" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9228" xmi:type="Parameter">
                <upperValue xmi:id="10056" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10057" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9231" direction="in" type="8400" isOrdered="false" isUnique="true" name="n" operation="9228" xmi:type="Parameter">
                <upperValue xmi:id="10058" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10059" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9232" direction="in" type="8388" isOrdered="false" isUnique="true" name="ns" operation="9228" xmi:type="Parameter">
                <upperValue xmi:id="10060" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10061" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9233" namespace="9228" name="spec" constrainedElement="9228" xmi:type="Constraint">
                <specification xmi:id="9234" language="OCL" body="result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)-&gt;intersection(ns.getNamesOfMember(n))-&gt;isEmpty()&#xA;else true&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9229" annotatedElement="9228" body="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9235" isQuery="true" visibility="public" upper="1" lower="1" class="8400" isOrdered="false" isUnique="true" name="separator" xmi:type="Operation">
              <formalParameter xmi:id="9237" direction="return" type="8295" isOrdered="false" isUnique="true" operation="9235" xmi:type="Parameter">
                <upperValue xmi:id="10063" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10064" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9238" namespace="9235" name="spec" constrainedElement="9235" xmi:type="Constraint">
                <specification xmi:id="9239" language="OCL" body="result = '::'" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9236" annotatedElement="9235" body="The query separator() gives the string that is used to separate names when constructing a qualified name." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9240" isQuery="true" visibility="public" upper="1" lower="1" class="8400" isOrdered="false" isUnique="true" name="qualifiedName" xmi:type="Operation">
              <formalParameter xmi:id="9242" direction="return" type="8295" isOrdered="false" isUnique="true" operation="9240" xmi:type="Parameter">
                <upperValue xmi:id="10066" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10067" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9243" namespace="9240" name="spec" constrainedElement="9240" xmi:type="Constraint">
                <specification xmi:id="9244" language="OCL" body="result = if self.name-&gt;notEmpty() and self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;isEmpty()&#xA;then &#xA;    self.allNamespaces()-&gt;iterate( ns : Namespace; result: String = self.name | ns.name-&gt;union(self.separator())-&gt;union(result))&#xA;else&#xA;    Set{}&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9241" annotatedElement="9240" body="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10055" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10062" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10065" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10068" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10069" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10106" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10107" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10180" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10228" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10246" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10480" general="8338" xmi:type="Generalization" />
            <ownedComment xmi:id="8401" annotatedElement="8400" body="NamedElement has a visibility attribute." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9445" visibility="public" isDerived="false" memberEnd="9443" isAbstract="false" name="A_redefinedElement_redefinableElement" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9444" owningAssociation="9445" visibility="public" isDerived="false" type="9435" isDerivedUnion="false" opposite="9443" isReadOnly="false" isUnique="true" isOrdered="false" name="redefinableElement" xmi:type="Property">
              <upperValue xmi:id="10072" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10073" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9500" visibility="public" isAbstract="false" name="Class" package="8320" superClass="9423" xmi:type="Class">
            <ownedAttribute xmi:id="9502" visibility="public" isDerived="false" type="8297" class="9500" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isAbstract" xmi:type="Property">
              <upperValue xmi:id="10074" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9503" annotatedElement="9502" body="True when a class is abstract." xmi:type="Comment" />
              <lowerValue xmi:id="10075" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9497" visibility="public" isDerived="false" subsettedProperty="9431 8385" type="9463" class="9500" association="9499" aggregation="composite" isDerivedUnion="false" opposite="9496" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedAttribute" xmi:type="Property">
              <upperValue xmi:id="10076" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9498" annotatedElement="9497" body="The attributes (i.e. the properties) owned by the class." xmi:type="Comment" />
              <lowerValue xmi:id="10077" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9504" visibility="public" isDerived="false" subsettedProperty="9420 8385" type="9508" class="9500" association="9507" aggregation="composite" isDerivedUnion="false" opposite="9505" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedOperation" xmi:type="Property">
              <upperValue xmi:id="10078" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9700" annotatedElement="9504" body="The operations owned by the class." xmi:type="Comment" />
              <lowerValue xmi:id="10079" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9701" visibility="public" isDerived="false" type="9500" class="9500" redefinedProperty="9704" association="9707" isDerivedUnion="false" opposite="9702" isReadOnly="false" isOrdered="false" isUnique="true" name="superClass" xmi:type="Property">
              <upperValue xmi:id="10080" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9708" annotatedElement="9701" body="This gives the superclasses of a class." xmi:type="Comment" />
              <lowerValue xmi:id="10081" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9709" isQuery="true" visibility="public" redefinedOperation="9539" upper="1" lower="1" class="9500" isOrdered="false" isUnique="true" name="inherit" xmi:type="Operation">
              <formalParameter xmi:id="9711" direction="return" type="8400" isOrdered="false" isUnique="true" operation="9709" xmi:type="Parameter">
                <upperValue xmi:id="10082" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10083" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9712" direction="in" type="8400" isOrdered="false" isUnique="true" name="inhs" operation="9709" xmi:type="Parameter">
                <upperValue xmi:id="10084" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10085" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9713" namespace="9709" name="spec" constrainedElement="9709" xmi:type="Constraint">
                <specification xmi:id="9714" language="OCL" body="result = inhs-&gt;excluding(inh | ownedMember-&gt;select(oclIsKindOf(RedefinableElement))-&gt;select(redefinedElement-&gt;includes(inh)))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9710" annotatedElement="9709" body="The inherit operation is overridden to exclude redefined properties." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10186" general="9423" xmi:type="Generalization" />
            <generalization xmi:id="10189" general="9423" xmi:type="Generalization" />
            <ownedComment xmi:id="9501" annotatedElement="9500" body="Class is a kind of classifier whose features are attributes and operations. Attributes of a class are represented by instances of Property that are owned by the class. Some of these attributes may represent the navigable ends of binary associations." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9463" visibility="public" isAbstract="false" name="Property" package="8320" superClass="9753" xmi:type="Class">
            <ownedRule xmi:id="9465" namespace="9463" name="multiplicity_of_composite" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9466" annotatedElement="9465" body="A multiplicity of a composite aggregation must not have an upper bound greater than 1." xmi:type="Comment" />
              <specification xmi:id="9467" language="OCL" body="isComposite implies (upperBound()-&gt;isEmpty() or upperBound() &lt;= 1)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9468" namespace="9463" name="subsetting_context_conforms" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9469" annotatedElement="9468" body="Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property." xmi:type="Comment" />
              <specification xmi:id="9470" language="OCL" body="self.subsettedProperty-&gt;notEmpty() implies&#xA;  (self.subsettingContext()-&gt;notEmpty() and self.subsettingContext()-&gt;forAll (sc |&#xA;    self.subsettedProperty-&gt;forAll(sp |&#xA;      sp.subsettingContext()-&gt;exists(c | sc.conformsTo(c)))))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9471" namespace="9463" name="redefined_property_inherited" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9472" annotatedElement="9471" body="A redefined property must be inherited from a more general classifier containing the redefining property." xmi:type="Comment" />
              <specification xmi:id="9473" language="OCL" body="if (redefinedProperty-&gt;notEmpty()) then&#xA;  (redefinitionContext-&gt;notEmpty() and&#xA;      redefinedProperty-&gt;forAll(rp|&#xA;        ((redefinitionContext-&gt;collect(fc|&#xA;          fc.allParents()))-&gt;asSet())-&gt;collect(c| c.allFeatures())-&gt;asSet()-&gt;includes(rp))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9474" namespace="9463" name="subsetting_rules" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9475" annotatedElement="9474" body="A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less." xmi:type="Comment" />
              <specification xmi:id="9476" language="OCL" body="self.subsettedProperty-&gt;forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()-&gt;notEmpty() and sp.upperBound()-&gt;notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9477" namespace="9463" name="navigable_readonly" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9478" annotatedElement="9477" body="Only a navigable property can be marked as readOnly." xmi:type="Comment" />
              <specification xmi:id="9479" language="OCL" body="isReadOnly implies isNavigable()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9480" namespace="9463" name="derived_union_is_derived" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9481" annotatedElement="9480" body="A derived union is derived." xmi:type="Comment" />
              <specification xmi:id="9482" language="OCL" body="isDerivedUnion implies isDerived" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9483" namespace="9463" name="subsetted_property_names" constrainedElement="9463" xmi:type="Constraint">
              <ownedComment xmi:id="9484" annotatedElement="9483" body="A property may not subset a property with the same name." xmi:type="Comment" />
              <specification xmi:id="9485" language="OCL" body="true" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9486" visibility="public" isDerived="false" type="8297" class="9463" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isReadOnly" xmi:type="Property">
              <upperValue xmi:id="10190" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9487" annotatedElement="9486" body="This redefines the corresponding attribute in Basic::Property and Abstractions::StructuralFeature." xmi:type="Comment" />
              <lowerValue xmi:id="10191" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9488" visibility="public" isDerived="false" type="8295" class="9463" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="default" xmi:type="Property">
              <upperValue xmi:id="10192" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9489" annotatedElement="9488" body="Specifies a String that represents a value to be used when no argument is supplied for the Property." xmi:type="Comment" />
              <lowerValue xmi:id="10193" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9490" visibility="public" isDerived="false" type="8297" class="9463" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isComposite" xmi:type="Property">
              <upperValue xmi:id="10194" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9491" annotatedElement="9490" body="If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute." xmi:type="Comment" />
              <lowerValue xmi:id="10195" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9492" visibility="public" isDerived="false" type="8297" class="9463" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isDerived" xmi:type="Property">
              <upperValue xmi:id="10196" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9493" annotatedElement="9492" body="If isDerived is true, the value of the attribute is derived from information elsewhere." xmi:type="Comment" />
              <lowerValue xmi:id="10197" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9494" visibility="public" isDerived="false" type="8297" class="9463" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isDerivedUnion" xmi:type="Property">
              <upperValue xmi:id="10198" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9495" annotatedElement="9494" body="Specifies whether the property is derived as the union of all of the properties that are constrained to subset it." xmi:type="Comment" />
              <lowerValue xmi:id="10199" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9496" visibility="public" isDerived="false" subsettedProperty="8384 9421 9432" type="9500" class="9463" association="9499" isDerivedUnion="false" opposite="9497" isReadOnly="false" isOrdered="false" isUnique="true" name="class" xmi:type="Property">
              <upperValue xmi:id="10200" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9715" annotatedElement="9496" body="References the Class that owns the Property." xmi:type="Comment" />
              <lowerValue xmi:id="10201" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9716" visibility="public" isDerived="false" subsettedProperty="9719 8384 9421" type="9722" class="9463" association="9736" isDerivedUnion="false" opposite="9717" isReadOnly="false" isOrdered="false" isUnique="true" name="owningAssociation" xmi:type="Property">
              <upperValue xmi:id="10202" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9740" annotatedElement="9716" body="References the owning association of this property, if any." xmi:type="Comment" />
              <lowerValue xmi:id="10203" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9741" visibility="public" isDerived="false" subsettedProperty="9443" type="9463" class="9463" association="9743" isDerivedUnion="false" opposite="9742" isReadOnly="false" isOrdered="false" isUnique="true" name="redefinedProperty" xmi:type="Property">
              <upperValue xmi:id="10204" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9744" annotatedElement="9741" body="References the properties that are redefined by this property." xmi:type="Comment" />
              <lowerValue xmi:id="10205" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9745" visibility="public" isDerived="false" type="9463" class="9463" association="9747" isDerivedUnion="false" opposite="9746" isReadOnly="false" isUnique="true" isOrdered="false" name="subsettedProperty" xmi:type="Property">
              <upperValue xmi:id="10043" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9748" annotatedElement="9745" body="References the properties of which this property is constrained to be a subset." xmi:type="Comment" />
              <lowerValue xmi:id="10044" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9749" visibility="public" isDerived="true" type="9463" class="9463" association="9751" isDerivedUnion="false" opposite="9750" isReadOnly="false" isUnique="true" isOrdered="false" name="opposite" xmi:type="Property">
              <upperValue xmi:id="10206" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9752" annotatedElement="9749" body="In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end." xmi:type="Comment" />
              <lowerValue xmi:id="10207" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9533" visibility="public" isDerived="false" subsettedProperty="8384 9421 9432" type="9530" class="9463" association="9535" isDerivedUnion="false" opposite="9532" isReadOnly="false" isOrdered="false" isUnique="true" name="datatype" xmi:type="Property">
              <upperValue xmi:id="10208" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9534" annotatedElement="9533" body="The DataType that owns this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10209" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9719" visibility="public" isDerived="false" type="9722" class="9463" association="9721" isDerivedUnion="false" opposite="9718" isReadOnly="false" isUnique="true" isOrdered="false" name="association" xmi:type="Property">
              <upperValue xmi:id="10210" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9720" annotatedElement="9719" body="References the association of which this property is a member, if any." xmi:type="Comment" />
              <lowerValue xmi:id="10211" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9755" isQuery="true" visibility="public" upper="1" lower="1" class="9463" isOrdered="false" isUnique="true" name="opposite" xmi:type="Operation">
              <formalParameter xmi:id="9757" direction="return" type="9463" isOrdered="false" isUnique="true" operation="9755" xmi:type="Parameter">
                <upperValue xmi:id="10212" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10213" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9758" namespace="9755" name="spec" constrainedElement="9755 9749" xmi:type="Constraint">
                <specification xmi:id="9759" language="OCL" body="result = if owningAssociation-&gt;isEmpty() and association.memberEnd-&gt;size() = 2&#xA;  then&#xA;    let otherEnd = (association.memberEnd - self)-&gt;any() in&#xA;      if otherEnd.owningAssociation-&gt;isEmpty() then otherEnd else Set{} endif&#xA;    else Set {}&#xA;    endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9756" annotatedElement="9755" body="If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9760" isQuery="true" visibility="public" class="9463" upper="1" redefinedOperation="9447" lower="1" isUnique="true" isOrdered="false" name="isConsistentWith" xmi:type="Operation">
              <formalParameter xmi:id="9762" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9760" xmi:type="Parameter">
                <upperValue xmi:id="10215" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10216" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9763" direction="in" type="9435" isOrdered="false" isUnique="true" name="redefinee" operation="9760" xmi:type="Parameter">
                <upperValue xmi:id="10217" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10218" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <precondition xmi:id="9764" namespace="9760" constrainedElement="9760" xmi:type="Constraint">
                <specification xmi:id="9765" language="OCL" body="redefinee.isRedefinitionContextValid(self)" xmi:type="OpaqueExpression" />
              </precondition>
              <bodyCondition xmi:id="9766" namespace="9760" name="spec" constrainedElement="9760" xmi:type="Constraint">
                <specification xmi:id="9767" language="OCL" body="result = redefinee.oclIsKindOf(Property) and &#xA;  let prop : Property = redefinee.oclAsType(Property) in &#xA;  (prop.type.conformsTo(self.type) and &#xA;  ((prop.lowerBound()-&gt;notEmpty() and self.lowerBound()-&gt;notEmpty()) implies prop.lowerBound() &gt;= self.lowerBound()) and &#xA;  ((prop.upperBound()-&gt;notEmpty() and self.upperBound()-&gt;notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and &#xA;  (self.isDerived implies prop.isDerived) and&#xA;  (self.isComposite implies prop.isComposite))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9761" annotatedElement="9760" body="The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9768" isQuery="true" visibility="public" upper="1" lower="1" class="9463" isOrdered="false" isUnique="true" name="subsettingContext" xmi:type="Operation">
              <formalParameter xmi:id="9770" direction="return" type="9423" isOrdered="false" isUnique="true" operation="9768" xmi:type="Parameter">
                <upperValue xmi:id="10231" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10232" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9771" namespace="9768" name="spec" constrainedElement="9768" xmi:type="Constraint">
                <specification xmi:id="9772" language="OCL" body="result = if association-&gt;notEmpty()&#xA;then association.endType-type &#xA;else if classifier-&gt;notEmpty then Set{classifier} else Set{} endif&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9769" annotatedElement="9768" body="The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9773" isQuery="true" visibility="public" upper="1" lower="1" class="9463" isOrdered="false" isUnique="true" name="isNavigable" xmi:type="Operation">
              <formalParameter xmi:id="9775" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9773" xmi:type="Parameter">
                <upperValue xmi:id="10234" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10235" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9776" namespace="9773" name="spec" constrainedElement="9773" xmi:type="Constraint">
                <specification xmi:id="9777" language="OCL" body="result = not classifier-&gt;isEmpty() or&#xA;association.owningAssociation.navigableOwnedEnd-&gt;includes(self)" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9774" annotatedElement="9773" body="The query isNavigable indicates whether it is possible to navigate across the property." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9778" isQuery="true" visibility="public" upper="1" lower="1" class="9463" isOrdered="false" isUnique="true" name="isAttribute" xmi:type="Operation">
              <formalParameter xmi:id="9780" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9778" xmi:type="Parameter">
                <upperValue xmi:id="10237" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10238" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9781" direction="in" type="9463" isOrdered="false" isUnique="true" name="p" operation="9778" xmi:type="Parameter">
                <upperValue xmi:id="10239" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10240" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9782" namespace="9778" name="spec" constrainedElement="9778" xmi:type="Constraint">
                <specification xmi:id="9783" language="OCL" body="result = Classifier-&gt;allInstances-&gt;exists(c | c.attribute-&gt;includes(p))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9779" annotatedElement="9778" body="The query isAttribute() is true if the Property is defined as an attribute of some classifier." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10214" general="9753" xmi:type="Generalization" />
            <generalization xmi:id="10230" general="9753" xmi:type="Generalization" />
            <generalization xmi:id="10233" general="9753" xmi:type="Generalization" />
            <generalization xmi:id="10236" general="9753" xmi:type="Generalization" />
            <generalization xmi:id="10241" general="9753" xmi:type="Generalization" />
            <generalization xmi:id="10279" general="9753" xmi:type="Generalization" />
            <generalization xmi:id="11114" general="9753" xmi:type="Generalization" />
            <ownedComment xmi:id="9464" annotatedElement="9463" body="Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association.&#xA;&#xA;&#xA;&#xA;Property is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9290" visibility="public" isDerived="false" memberEnd="8385 8384" isAbstract="false" name="A_ownedMember_namespace" general="8396 8319" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9722" visibility="public" isAbstract="false" name="Association" package="8320" superClass="9423 8372" xmi:type="Class">
            <ownedRule xmi:id="9724" namespace="9722" name="association_ends" constrainedElement="9722" xmi:type="Constraint">
              <ownedComment xmi:id="9725" annotatedElement="9724" body="Association ends of associations with more than two ends must be owned by the association." xmi:type="Comment" />
              <specification xmi:id="9726" language="OCL" body="if memberEnd-&gt;size() &gt; 2 then ownedEnd-&gt;includesAll(memberEnd)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9727" visibility="public" isDerived="false" type="8297" class="9722" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isDerived" xmi:type="Property">
              <upperValue xmi:id="10280" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9728" annotatedElement="9727" body="Specifies whether the association is derived from other model elements such as other associations or constraints." xmi:type="Comment" />
              <lowerValue xmi:id="10281" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9717" visibility="public" isDerived="false" subsettedProperty="9718 9420 8385" type="9463" class="9722" association="9736" aggregation="composite" isDerivedUnion="false" opposite="9716" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedEnd" xmi:type="Property">
              <upperValue xmi:id="10282" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9739" annotatedElement="9717" body="The ends that are owned by the association itself. This is an ordered association." xmi:type="Comment" />
              <lowerValue xmi:id="10283" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9729" visibility="public" isDerived="true" subsettedProperty="8335" type="9315" class="9722" association="9731" isDerivedUnion="false" opposite="9730" isReadOnly="true" isOrdered="false" isUnique="true" name="endType" xmi:type="Property">
              <upperValue xmi:id="10284" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9732" annotatedElement="9729" body="References the classifiers that are used as types of the ends of the association." xmi:type="Comment" />
              <lowerValue xmi:id="10285" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9718" visibility="public" isDerived="false" subsettedProperty="8386" type="9463" class="9722" association="9721" isDerivedUnion="false" opposite="9719" isReadOnly="false" isOrdered="true" isUnique="true" name="memberEnd" xmi:type="Property">
              <upperValue xmi:id="10286" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9738" annotatedElement="9718" body="Each end represents participation of instances of the classifier connected to the end in links of the association. This is an ordered association." xmi:type="Comment" />
              <lowerValue xmi:id="10287" value="2" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9733" visibility="public" isDerived="false" subsettedProperty="9717" type="9463" class="9722" association="9735" isDerivedUnion="false" opposite="9734" isReadOnly="false" isOrdered="false" isUnique="true" name="navigableOwnedEnd" xmi:type="Property">
              <upperValue xmi:id="10288" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9737" annotatedElement="9733" body="The navigable ends that are owned by the association itself." xmi:type="Comment" />
              <lowerValue xmi:id="10289" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10293" general="9423" xmi:type="Generalization" />
            <generalization xmi:id="10294" general="8372" xmi:type="Generalization" />
            <generalization xmi:id="11155" general="9423" xmi:type="Generalization" />
            <generalization xmi:id="11156" general="8372" xmi:type="Generalization" />
            <ownedComment xmi:id="9723" annotatedElement="9722" body="An association specifies a semantic relationship that can occur between typed instances. It has at least two ends represented by properties, each of which is connected to the type of the end. More than one end of an association may have the same type.&#xA;&#xA;&#xA;&#xA;An end property of an association that is owned by an end class or that is a navigable owned end of the association indicates that the association is navigable from the opposite ends, otherwise the association is not navigable from the opposite ends." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9321" visibility="public" isDerived="false" memberEnd="8382" isAbstract="false" name="A_packagedElement_owningPackage" general="9290" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8383" owningAssociation="9321" visibility="public" isDerived="false" subsettedProperty="8384" type="8377" isDerivedUnion="false" opposite="8382" isReadOnly="false" isUnique="true" isOrdered="false" name="owningPackage" xmi:type="Property">
              <upperValue xmi:id="10297" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10298" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8372" visibility="public" isAbstract="true" name="Relationship" package="8320" superClass="8338" xmi:type="Class">
            <ownedAttribute xmi:id="8335" visibility="public" isDerived="true" type="8338" class="8372" association="8337" isDerivedUnion="true" opposite="8334" isReadOnly="true" isUnique="true" isOrdered="false" name="relatedElement" xmi:type="Property">
              <upperValue xmi:id="9993" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8336" annotatedElement="8335" body="Specifies the elements related by the Relationship." xmi:type="Comment" />
              <lowerValue xmi:id="9994" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10015" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10292" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10299" general="8338" xmi:type="Generalization" />
            <ownedComment xmi:id="8373" annotatedElement="8372" body="A relationship references one or more related elements. Relationship is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9507" visibility="public" isDerived="false" memberEnd="9504 9505" isAbstract="false" name="A_ownedOperation_class" general="9419 9290 9459" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9461" visibility="public" isDerived="false" memberEnd="9431" isAbstract="false" name="A_attribute_classifier" general="9419 9459" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9432" owningAssociation="9461" visibility="public" isDerived="false" subsettedProperty="9433" type="9423" isDerivedUnion="false" opposite="9431" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
              <upperValue xmi:id="10302" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10303" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9535" visibility="public" isDerived="false" memberEnd="9532 9533" isAbstract="false" name="A_ownedAttribute_datatype" general="9461 9290" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9263" visibility="public" isDerived="false" memberEnd="9261" isAbstract="false" name="A_importedElement_elementImport" general="8374" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9262" owningAssociation="9263" visibility="public" isDerived="false" type="9249" redefinedProperty="8333" isDerivedUnion="false" opposite="9261" isReadOnly="false" isUnique="true" isOrdered="false" name="elementImport" xmi:type="Property">
              <upperValue xmi:id="10308" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10309" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8330" visibility="public" isAbstract="true" name="DirectedRelationship" package="8320" superClass="8372" xmi:type="Class">
            <ownedAttribute xmi:id="8328" visibility="public" isDerived="true" subsettedProperty="8335" type="8338" class="8330" association="8327" isDerivedUnion="true" opposite="8329" isReadOnly="true" isOrdered="false" isUnique="true" name="source" xmi:type="Property">
              <upperValue xmi:id="10002" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8376" annotatedElement="8328" body="Specifies the sources of the DirectedRelationship." xmi:type="Comment" />
              <lowerValue xmi:id="10003" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8332" visibility="public" isDerived="true" subsettedProperty="8335" type="8338" class="8330" association="8374" isDerivedUnion="true" opposite="8333" isReadOnly="true" isOrdered="false" isUnique="true" name="target" xmi:type="Property">
              <upperValue xmi:id="9991" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8375" annotatedElement="8332" body="Specifies the targets of the DirectedRelationship." xmi:type="Comment" />
              <lowerValue xmi:id="9992" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10017" general="8372" xmi:type="Generalization" />
            <generalization xmi:id="10310" general="8372" xmi:type="Generalization" />
            <generalization xmi:id="10523" general="8372" xmi:type="Generalization" />
            <generalization xmi:id="10547" general="8372" xmi:type="Generalization" />
            <generalization xmi:id="11173" general="8372" xmi:type="Generalization" />
            <ownedComment xmi:id="8331" annotatedElement="8330" body="A directed relationship references one or more source elements and one or more target elements. DirectedRelationship is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9315" visibility="public" isAbstract="true" name="Type" package="8320" superClass="8400 8398" xmi:type="Class">
            <ownedAttribute xmi:id="9317" visibility="public" isDerived="false" subsettedProperty="8384" type="8377" class="9315" association="9320" isDerivedUnion="false" opposite="9318" isReadOnly="false" isOrdered="false" isUnique="true" name="package" xmi:type="Property">
              <upperValue xmi:id="10104" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9322" annotatedElement="9317" body="References the owning package of a package." xmi:type="Comment" />
              <lowerValue xmi:id="10105" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9323" isQuery="true" visibility="public" upper="1" lower="1" class="9315" isOrdered="false" isUnique="true" name="conformsTo" xmi:type="Operation">
              <formalParameter xmi:id="9325" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9323" xmi:type="Parameter">
                <upperValue xmi:id="10100" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10101" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9326" direction="in" type="9315" isOrdered="false" isUnique="true" name="other" operation="9323" xmi:type="Parameter">
                <upperValue xmi:id="10102" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10103" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9327" namespace="9323" name="spec" constrainedElement="9323" xmi:type="Constraint">
                <specification xmi:id="9328" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9324" annotatedElement="9323" body="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10109" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10110" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10182" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10183" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10311" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10312" general="8398" xmi:type="Generalization" />
            <ownedComment xmi:id="9316" annotatedElement="9315" body="A type serves as a constraint on the range of values represented by a typed element. Type is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8415" visibility="public" isAbstract="false" name="VisibilityKind" package="8320" xmi:type="Enumeration">
            <ownedLiteral xmi:id="8417" enumeration="8415" name="public" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="8418" annotatedElement="8417" body="A public element is visible to all elements that can access the contents of the namespace that owns it." xmi:type="Comment" />
            </ownedLiteral>
            <ownedLiteral xmi:id="8420" enumeration="8415" name="private" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="8421" annotatedElement="8420" body="A private element is only visible inside the namespace that owns it." xmi:type="Comment" />
            </ownedLiteral>
            <ownedLiteral xmi:id="8422" enumeration="8415" name="protected" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="8423" annotatedElement="8422" body="A protected element is visible to elements that have a generalization relationship to the namespace that owns it." xmi:type="Comment" />
            </ownedLiteral>
            <ownedLiteral xmi:id="8424" enumeration="8415" name="package" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="8425" annotatedElement="8424" body="A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible." xmi:type="Comment" />
            </ownedLiteral>
            <ownedOperation xmi:id="8426" isQuery="true" visibility="public" upper="1" lower="1" datatype="8415" isOrdered="false" isUnique="true" name="bestVisibility" xmi:type="Operation">
              <formalParameter xmi:id="8428" direction="return" type="8429" isOrdered="false" isUnique="true" operation="8426" xmi:type="Parameter">
                <upperValue xmi:id="10313" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10314" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9218" direction="in" type="8415" isOrdered="false" isUnique="true" name="vis" operation="8426" xmi:type="Parameter">
                <upperValue xmi:id="10315" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10316" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9219" namespace="8426" name="spec" constrainedElement="8426" xmi:type="Constraint">
                <specification xmi:id="9220" language="OCL" body="result = if vis-&gt;includes(#public) then #public else #private endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="8427" annotatedElement="8426" body="The query bestVisibility() examines a set of VisibilityKinds, and returns public as the preferred visibility." xmi:type="Comment" />
            </ownedOperation>
            <ownedComment xmi:id="8416" annotatedElement="8415" body="VisibilityKind is an enumeration of the following literal values:&#xA;&#xA;  - public&#xA;&#xA;  - private&#xA;&#xA;  - protected&#xA;&#xA;  - package" xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9274" visibility="public" isDerived="false" memberEnd="9271 9272" isAbstract="false" name="A_packageImport_importingNamespace" general="8319 8327" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9842" visibility="public" isDerived="false" memberEnd="9843" isAbstract="false" name="A_body_opaqueExpression" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9844" owningAssociation="9842" visibility="public" isDerived="false" type="9845" isDerivedUnion="false" opposite="9843" isReadOnly="false" isUnique="true" isOrdered="false" name="opaqueExpression" xmi:type="Property">
              <upperValue xmi:id="10323" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10324" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9289" visibility="public" isDerived="false" memberEnd="9287 9288" isAbstract="false" name="A_ownedRule_context" general="9290" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9735" visibility="public" isDerived="false" memberEnd="9733" isAbstract="false" name="A_navigableOwnedEnd_association" general="9736" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9734" owningAssociation="9735" visibility="public" isDerived="false" type="9722" redefinedProperty="8387" isDerivedUnion="false" opposite="9733" isReadOnly="false" isUnique="true" isOrdered="false" name="association" xmi:type="Property">
              <upperValue xmi:id="10327" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10328" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9845" visibility="public" isAbstract="false" name="OpaqueExpression" package="8320" superClass="9307" xmi:type="Class">
            <ownedRule xmi:id="9847" namespace="9845" name="language_body_size" constrainedElement="9845" xmi:type="Constraint">
              <ownedComment xmi:id="9848" annotatedElement="9847" body="If the language attribute is not empty, then the size of the body and language arrays must be the same." xmi:type="Comment" />
              <specification xmi:id="9849" language="OCL" body="language-&gt;notEmpty() implies (body-&gt;size() = language-&gt;size())" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9843" visibility="public" isDerived="false" type="8295" class="9845" association="9842" aggregation="composite" isDerivedUnion="false" opposite="9844" isReadOnly="false" isUnique="true" isOrdered="true" name="body" xmi:type="Property">
              <upperValue xmi:id="10321" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9854" annotatedElement="9843" body="The text of the expression, possibly in multiple languages." xmi:type="Comment" />
              <lowerValue xmi:id="10322" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9850" visibility="public" isDerived="false" type="8295" class="9845" association="9852" aggregation="composite" isDerivedUnion="false" opposite="9851" isReadOnly="false" isUnique="true" isOrdered="true" name="language" xmi:type="Property">
              <upperValue xmi:id="10329" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9853" annotatedElement="9850" body="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression body or the context. Languages are matched to body strings by order." xmi:type="Comment" />
              <lowerValue xmi:id="10330" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10359" general="9307" xmi:type="Generalization" />
            <ownedComment xmi:id="9846" annotatedElement="9845" body="An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9635" visibility="public" isAbstract="true" name="Feature" package="8320" superClass="9435" xmi:type="Class">
            <ownedAttribute xmi:id="9421" visibility="public" isDerived="true" type="9423" class="9635" association="9419" isDerivedUnion="true" opposite="9420" isReadOnly="true" isUnique="true" isOrdered="false" name="featuringClassifier" xmi:type="Property">
              <upperValue xmi:id="10021" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9422" annotatedElement="9421" body="Redefines the corresponding association in Abstractions." xmi:type="Comment" />
              <lowerValue xmi:id="10022" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10243" general="9435" xmi:type="Generalization" />
            <generalization xmi:id="10360" general="9435" xmi:type="Generalization" />
            <generalization xmi:id="10448" general="9435" xmi:type="Generalization" />
            <ownedComment xmi:id="9636" annotatedElement="9635" body="A feature declares a behavioral or structural characteristic of instances of classifiers. Feature is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8398" visibility="public" isAbstract="true" name="PackageableElement" package="8320" superClass="8400" xmi:type="Class">
            <generalization xmi:id="10108" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10356" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10361" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10491" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10566" general="8400" xmi:type="Generalization" />
            <ownedComment xmi:id="8399" annotatedElement="8398" body="A packageable element indicates a named element that may be owned directly by a package." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9568" visibility="public" isAbstract="false" name="ParameterDirectionKind" package="8320" xmi:type="Enumeration">
            <ownedLiteral xmi:id="9570" enumeration="9568" name="in" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="9571" annotatedElement="9570" body="Indicates that parameter values are passed into the behavioral element by the caller." xmi:type="Comment" />
            </ownedLiteral>
            <ownedLiteral xmi:id="9572" enumeration="9568" name="inout" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="9573" annotatedElement="9572" body="Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element." xmi:type="Comment" />
            </ownedLiteral>
            <ownedLiteral xmi:id="9574" enumeration="9568" name="out" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="9575" annotatedElement="9574" body="Indicates that parameter values are passed from a behavioral element out to the caller." xmi:type="Comment" />
            </ownedLiteral>
            <ownedLiteral xmi:id="9576" enumeration="9568" name="return" xmi:type="EnumerationLiteral">
              <ownedComment xmi:id="9577" annotatedElement="9576" body="Indicates that parameter values are passed as return values from a behavioral element back to the caller." xmi:type="Comment" />
            </ownedLiteral>
            <ownedComment xmi:id="9569" annotatedElement="9568" body="ParameterDirectionKind is an enumeration of the following literal values:&#xA;&#xA;  - in Indicates that parameter values are passed into the behavioral element by the caller.&#xA;&#xA;  - inout Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.&#xA;&#xA;  - out Indicates that parameter values are passed from a behavioral element out to the caller.&#xA;&#xA;  - return Indicates that parameter values are passed as return values from a behavioral element back to the caller.&#xA;&#xA;" xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9855" visibility="public" isDerived="false" memberEnd="9856" isAbstract="false" name="A_operand_expression" general="8319" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9857" owningAssociation="9855" visibility="public" isDerived="false" subsettedProperty="8317" type="9858" isDerivedUnion="false" opposite="9856" isReadOnly="false" isUnique="true" isOrdered="false" name="expression" xmi:type="Property">
              <upperValue xmi:id="10364" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10365" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9555" visibility="public" isDerived="false" memberEnd="9553" isAbstract="false" name="A_raisedException_behavioralFeature" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9552" owningAssociation="9555" visibility="public" isDerived="false" type="9556" isDerivedUnion="false" opposite="9553" isReadOnly="false" isUnique="true" isOrdered="false" name="behavioralFeature" xmi:type="Property">
              <upperValue xmi:id="10368" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10369" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9753" visibility="public" isAbstract="true" name="StructuralFeature" package="8320" superClass="9635 9309 9583" xmi:type="Class">
            <generalization xmi:id="10276" general="9635" xmi:type="Generalization" />
            <generalization xmi:id="10277" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10278" general="9583" xmi:type="Generalization" />
            <generalization xmi:id="10370" general="9635" xmi:type="Generalization" />
            <generalization xmi:id="10371" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10372" general="9583" xmi:type="Generalization" />
            <ownedComment xmi:id="9754" annotatedElement="9753" body="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier. Structural feature is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8396" visibility="public" isDerived="false" memberEnd="8386" isAbstract="false" name="A_member_namespace" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8387" owningAssociation="8396" visibility="public" isDerived="false" type="8388" isDerivedUnion="false" opposite="8386" isReadOnly="false" isUnique="true" isOrdered="false" name="namespace" xmi:type="Property">
              <upperValue xmi:id="10025" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10026" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9313" visibility="public" isDerived="false" memberEnd="9311" isAbstract="false" name="A_type_typedElement" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9312" owningAssociation="9313" visibility="public" isDerived="false" type="9309" isDerivedUnion="false" opposite="9311" isReadOnly="false" isUnique="true" isOrdered="false" name="typedElement" xmi:type="Property">
              <upperValue xmi:id="10373" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10374" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9581" visibility="public" isDerived="false" memberEnd="9579 9578" isAbstract="false" name="A_ownedParameter_operation" general="9560" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9307" visibility="public" isAbstract="true" name="ValueSpecification" package="8320" superClass="9309 8398" xmi:type="Class">
            <ownedOperation xmi:id="9329" isQuery="true" visibility="public" upper="1" lower="1" class="9307" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
              <formalParameter xmi:id="9331" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9329" xmi:type="Parameter">
                <upperValue xmi:id="10331" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10332" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9332" namespace="9329" name="spec" constrainedElement="9329" xmi:type="Constraint">
                <specification xmi:id="9333" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9330" annotatedElement="9329" body="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9334" isQuery="true" visibility="public" upper="1" lower="1" class="9307" isOrdered="false" isUnique="true" name="integerValue" xmi:type="Operation">
              <formalParameter xmi:id="9336" direction="return" type="8289" isOrdered="false" isUnique="true" operation="9334" xmi:type="Parameter">
                <upperValue xmi:id="10335" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10336" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9337" namespace="9334" name="spec" constrainedElement="9334" xmi:type="Constraint">
                <specification xmi:id="9338" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9335" annotatedElement="9334" body="The query integerValue() gives a single Integer value when one can be computed." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9339" isQuery="true" visibility="public" upper="1" lower="1" class="9307" isOrdered="false" isUnique="true" name="booleanValue" xmi:type="Operation">
              <formalParameter xmi:id="9341" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9339" xmi:type="Parameter">
                <upperValue xmi:id="10339" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10340" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9342" namespace="9339" name="spec" constrainedElement="9339" xmi:type="Constraint">
                <specification xmi:id="9343" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9340" annotatedElement="9339" body="The query booleanValue() gives a single Boolean value when one can be computed." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9344" isQuery="true" visibility="public" upper="1" lower="1" class="9307" isOrdered="false" isUnique="true" name="stringValue" xmi:type="Operation">
              <formalParameter xmi:id="9346" direction="return" type="8295" isOrdered="false" isUnique="true" operation="9344" xmi:type="Parameter">
                <upperValue xmi:id="10343" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10344" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9347" namespace="9344" name="spec" constrainedElement="9344" xmi:type="Constraint">
                <specification xmi:id="9348" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9345" annotatedElement="9344" body="The query stringValue() gives a single String value when one can be computed." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9349" isQuery="true" visibility="public" upper="1" lower="1" class="9307" isOrdered="false" isUnique="true" name="unlimitedValue" xmi:type="Operation">
              <formalParameter xmi:id="9351" direction="return" type="8291" isOrdered="false" isUnique="true" operation="9349" xmi:type="Parameter">
                <upperValue xmi:id="10347" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10348" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9352" namespace="9349" name="spec" constrainedElement="9349" xmi:type="Constraint">
                <specification xmi:id="9353" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9350" annotatedElement="9349" body="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9354" isQuery="true" visibility="public" upper="1" lower="1" class="9307" isOrdered="false" isUnique="true" name="isNull" xmi:type="Operation">
              <formalParameter xmi:id="9356" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9354" xmi:type="Parameter">
                <upperValue xmi:id="10351" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10352" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9357" namespace="9354" name="spec" constrainedElement="9354" xmi:type="Constraint">
                <specification xmi:id="9358" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9355" annotatedElement="9354" body="The query isNull() returns true when it can be computed that the value is null." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10333" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10334" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10337" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10338" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10341" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10342" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10345" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10346" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10349" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10350" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10353" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10354" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10357" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10358" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10379" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10380" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10484" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10485" general="8398" xmi:type="Generalization" />
            <ownedComment xmi:id="9308" annotatedElement="9307" body="ValueSpecification is an abstract metaclass used to identify a value or values in a model. It may reference an instance or it may be an expression denoting an instance or instances when evaluated. It adds a specialization to Constructs::TypedElement." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9707" visibility="public" isDerived="false" memberEnd="9701" isAbstract="false" name="A_superClass_class" general="9706" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9702" owningAssociation="9707" visibility="public" isDerived="false" type="9500" redefinedProperty="9703" isDerivedUnion="false" opposite="9701" isReadOnly="false" isUnique="true" isOrdered="false" name="class" xmi:type="Property">
              <upperValue xmi:id="10383" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10384" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9394" visibility="public" isDerived="false" memberEnd="9391 9392" isAbstract="false" name="A_nestedPackage_nestingPackage" general="9321" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9652" visibility="public" isDerived="false" memberEnd="9650" isAbstract="false" name="A_type_operation" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9651" owningAssociation="9652" visibility="public" isDerived="false" type="9508" isDerivedUnion="false" opposite="9650" isReadOnly="false" isUnique="true" isOrdered="false" name="operation" xmi:type="Property">
              <upperValue xmi:id="10391" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10392" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9499" visibility="public" isDerived="false" memberEnd="9497 9496" isAbstract="false" name="A_ownedAttribute_class" general="9461 9290" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9743" visibility="public" isDerived="false" memberEnd="9741" isAbstract="false" name="A_redefinedProperty_property" general="9445" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9742" owningAssociation="9743" visibility="public" isDerived="false" type="9463" redefinedProperty="9444" isDerivedUnion="false" opposite="9741" isReadOnly="false" isUnique="true" isOrdered="false" name="property" xmi:type="Property">
              <upperValue xmi:id="10393" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10394" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8395" visibility="public" isDerived="false" memberEnd="8393" isAbstract="false" name="A_importedMember_namespace" general="8396" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8394" owningAssociation="8395" visibility="public" isDerived="false" type="8388" redefinedProperty="8387" isDerivedUnion="false" opposite="8393" isReadOnly="false" isUnique="true" isOrdered="false" name="namespace" xmi:type="Property">
              <upperValue xmi:id="10395" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10396" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9508" visibility="public" isAbstract="false" name="Operation" package="8320" superClass="9556" xmi:type="Class">
            <ownedRule xmi:id="9510" namespace="9508" name="only_body_for_query" constrainedElement="9508" xmi:type="Constraint">
              <ownedComment xmi:id="9511" annotatedElement="9510" body="A bodyCondition can only be specified for a query operation." xmi:type="Comment" />
              <specification xmi:id="9512" language="OCL" body="bodyCondition-&gt;notEmpty() implies isQuery" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9513" namespace="9508" name="at_most_one_return" constrainedElement="9508" xmi:type="Constraint">
              <ownedComment xmi:id="9514" annotatedElement="9513" body="An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'" xmi:type="Comment" />
              <specification xmi:id="9515" language="OCL" body="self.ownedParameter-&gt;select(par | par.direction = #return)-&gt;size() &lt;= 1" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9516" visibility="public" isDerived="false" type="8297" class="9508" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isQuery" xmi:type="Property">
              <upperValue xmi:id="10397" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9517" annotatedElement="9516" body="Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)." xmi:type="Comment" />
              <lowerValue xmi:id="10398" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9518" visibility="public" isDerived="true" type="8297" class="9508" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isOrdered" xmi:type="Property">
              <upperValue xmi:id="10399" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9519" annotatedElement="9518" body="Redefines the corresponding property from Basic to derive this information from the return result for this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10400" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9520" visibility="public" isDerived="true" type="8297" class="9508" default="true" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isUnique" xmi:type="Property">
              <upperValue xmi:id="10401" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9521" annotatedElement="9520" body="Redefines the corresponding property from Basic to derive this information from the return result for this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10402" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9522" visibility="public" isDerived="true" type="8289" class="9508" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="lower" xmi:type="Property">
              <upperValue xmi:id="10403" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9523" annotatedElement="9522" body="Redefines the corresponding property from Basic to derive this information from the return result for this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10404" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9524" visibility="public" isDerived="true" type="8291" class="9508" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="upper" xmi:type="Property">
              <upperValue xmi:id="10405" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9525" annotatedElement="9524" body="Redefines the corresponding property from Basic to derive this information from the return result for this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10406" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9505" visibility="public" isDerived="false" subsettedProperty="9433 8384 9421" type="9500" class="9508" association="9507" isDerivedUnion="false" opposite="9504" isReadOnly="false" isOrdered="false" isUnique="true" name="class" xmi:type="Property">
              <upperValue xmi:id="10300" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9506" annotatedElement="9505" body="The class that owns the operation." xmi:type="Comment" />
              <lowerValue xmi:id="10301" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9526" visibility="public" isDerived="false" subsettedProperty="9433 8384 9421" type="9530" class="9508" association="9529" isDerivedUnion="false" opposite="9527" isReadOnly="false" isOrdered="false" isUnique="true" name="datatype" xmi:type="Property">
              <upperValue xmi:id="10037" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9549" annotatedElement="9526" body="The DataType that owns this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10038" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9550" visibility="public" isDerived="false" type="9315" class="9508" redefinedProperty="9553" association="9644" isDerivedUnion="false" opposite="9551" isReadOnly="false" isOrdered="false" isUnique="true" name="raisedException" xmi:type="Property">
              <upperValue xmi:id="10407" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9645" annotatedElement="9550" body="References the Types representing exceptions that may be raised during an invocation of this operation." xmi:type="Comment" />
              <lowerValue xmi:id="10408" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9646" visibility="public" isDerived="false" subsettedProperty="9443" type="9508" class="9508" association="9648" isDerivedUnion="false" opposite="9647" isReadOnly="false" isOrdered="false" isUnique="true" name="redefinedOperation" xmi:type="Property">
              <upperValue xmi:id="10409" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9649" annotatedElement="9646" body="References the Operations that are redefined by this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10410" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9650" visibility="public" isDerived="true" type="9315" class="9508" association="9652" isDerivedUnion="false" opposite="9651" isReadOnly="false" isUnique="true" isOrdered="false" name="type" xmi:type="Property">
              <upperValue xmi:id="10389" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9653" annotatedElement="9650" body="Redefines the corresponding property from Basic to derive this information from the return result for this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10390" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9579" visibility="public" isDerived="false" type="9562" class="9508" redefinedProperty="9558" association="9581" aggregation="composite" isDerivedUnion="false" opposite="9578" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedParameter" xmi:type="Property">
              <upperValue xmi:id="10375" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9580" annotatedElement="9579" body="Specifies the ordered set of formal parameters of this BehavioralFeature." xmi:type="Comment" />
              <lowerValue xmi:id="10376" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9654" visibility="public" isDerived="false" subsettedProperty="9287" type="9291" class="9508" association="9656" aggregation="composite" isDerivedUnion="false" opposite="9655" isReadOnly="false" isUnique="true" isOrdered="false" name="precondition" xmi:type="Property">
              <upperValue xmi:id="10411" value="*" xmi:type="LiteralString" />
              <lowerValue xmi:id="10412" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9657" visibility="public" isDerived="false" subsettedProperty="9287" type="9291" class="9508" association="9659" aggregation="composite" isDerivedUnion="false" opposite="9658" isReadOnly="false" isUnique="true" isOrdered="false" name="postcondition" xmi:type="Property">
              <upperValue xmi:id="10413" value="*" xmi:type="LiteralString" />
              <lowerValue xmi:id="10414" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9660" visibility="public" isDerived="false" subsettedProperty="9287" type="9291" class="9508" association="9662" aggregation="composite" isDerivedUnion="false" opposite="9661" isReadOnly="false" isUnique="true" isOrdered="false" name="bodyCondition" xmi:type="Property">
              <upperValue xmi:id="10415" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10416" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9663" isQuery="true" visibility="public" upper="1" lower="1" class="9508" isOrdered="false" isUnique="true" name="isOrdered" xmi:type="Operation">
              <formalParameter xmi:id="9665" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9663" xmi:type="Parameter">
                <upperValue xmi:id="10417" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10418" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9666" namespace="9663" name="spec" constrainedElement="9663 9518" xmi:type="Constraint">
                <specification xmi:id="9667" language="OCL" body="result = if returnResult-&gt;size() = 1 then returnResult-&gt;any().isOrdered else false endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9664" annotatedElement="9663" body="If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9668" isQuery="true" visibility="public" upper="1" lower="1" class="9508" isOrdered="false" isUnique="true" name="isUnique" xmi:type="Operation">
              <formalParameter xmi:id="9670" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9668" xmi:type="Parameter">
                <upperValue xmi:id="10420" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10421" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9671" namespace="9668" name="spec" constrainedElement="9668 9520" xmi:type="Constraint">
                <specification xmi:id="9672" language="OCL" body="result = if returnResult-&gt;size() = 1 then returnResult-&gt;any().isUnique else true endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9669" annotatedElement="9668" body="If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9673" isQuery="true" visibility="public" upper="1" lower="1" class="9508" isOrdered="false" isUnique="true" name="lower" xmi:type="Operation">
              <formalParameter xmi:id="9675" direction="return" type="8289" isOrdered="false" isUnique="true" operation="9673" xmi:type="Parameter">
                <upperValue xmi:id="10423" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10424" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9676" namespace="9673" name="spec" constrainedElement="9673 9522" xmi:type="Constraint">
                <specification xmi:id="9677" language="OCL" body="result = if returnResult-&gt;size() = 1 then returnResult-&gt;any().lower else Set{} endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9674" annotatedElement="9673" body="If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9678" isQuery="true" visibility="public" upper="1" lower="1" class="9508" isOrdered="false" isUnique="true" name="upper" xmi:type="Operation">
              <formalParameter xmi:id="9680" direction="return" type="8291" isOrdered="false" isUnique="true" operation="9678" xmi:type="Parameter">
                <upperValue xmi:id="10426" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10427" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9681" namespace="9678" name="spec" constrainedElement="9678 9524" xmi:type="Constraint">
                <specification xmi:id="9682" language="OCL" body="result = if returnResult-&gt;size() = 1 then returnResult-&gt;any().upper else Set{} endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9679" annotatedElement="9678" body="If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9683" isQuery="true" visibility="public" upper="1" lower="1" class="9508" isOrdered="false" isUnique="true" name="type" xmi:type="Operation">
              <formalParameter xmi:id="9685" direction="return" type="9315" isOrdered="false" isUnique="true" operation="9683" xmi:type="Parameter">
                <upperValue xmi:id="10429" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10430" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9686" namespace="9683" name="spec" constrainedElement="9683 9650" xmi:type="Constraint">
                <specification xmi:id="9687" language="OCL" body="result = if returnResult-&gt;size() = 1 then returnResult-&gt;any().type else Set{} endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9684" annotatedElement="9683" body="If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type is not defined." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9688" isQuery="true" visibility="public" class="9508" upper="1" redefinedOperation="9447" lower="1" isUnique="true" isOrdered="false" name="isConsistentWith" xmi:type="Operation">
              <formalParameter xmi:id="9690" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9688" xmi:type="Parameter">
                <upperValue xmi:id="10432" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10433" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9691" direction="in" type="9435" isOrdered="false" isUnique="true" name="redefinee" operation="9688" xmi:type="Parameter">
                <upperValue xmi:id="10434" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10435" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <precondition xmi:id="9692" namespace="9688" constrainedElement="9688" xmi:type="Constraint">
                <specification xmi:id="9693" language="OCL" body="redefinee.isRedefinitionContextValid(self)" xmi:type="OpaqueExpression" />
              </precondition>
              <bodyCondition xmi:id="9694" namespace="9688" name="spec" constrainedElement="9688" xmi:type="Constraint">
                <specification xmi:id="9695" language="OCL" body="result = (redefinee.oclIsKindOf(Operation) and&#xA;    let op: Operation = redefinee.oclAsType(Operation) in&#xA;        self.formalParameter.size() = op.formalParameter.size() and&#xA;        self.returnResult.size() = op.returnResult.size() and&#xA;        forAll(i | op.formalParameter[i].type.conformsTo(self.formalParameter[i].type)) and&#xA;        forAll(i | op.returnResult[i].type.conformsTo(self.returnResult[i].type))&#xA;)" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9689" annotatedElement="9688" body="The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9696" isQuery="true" visibility="public" upper="1" lower="1" class="9508" isOrdered="false" isUnique="true" name="returnResult" xmi:type="Operation">
              <formalParameter xmi:id="9697" direction="return" type="9562" isOrdered="false" isUnique="true" operation="9696" xmi:type="Parameter">
                <upperValue xmi:id="10437" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10438" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9698" namespace="9696" name="spec" constrainedElement="9696" xmi:type="Constraint">
                <specification xmi:id="9699" language="OCL" body="result = ownedParameter-&gt;select (par | par.direction = #return)" xmi:type="OpaqueExpression" />
              </bodyCondition>
            </ownedOperation>
            <generalization xmi:id="10419" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10422" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10425" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10428" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10431" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10436" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10439" general="9556" xmi:type="Generalization" />
            <generalization xmi:id="10452" general="9556" xmi:type="Generalization" />
            <ownedComment xmi:id="9509" annotatedElement="9508" body="An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9530" visibility="public" isAbstract="false" name="DataType" package="8320" superClass="9423" xmi:type="Class">
            <ownedAttribute xmi:id="9532" visibility="public" isDerived="false" subsettedProperty="9431 8385" type="9463" class="9530" association="9535" aggregation="composite" isDerivedUnion="false" opposite="9533" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedAttribute" xmi:type="Property">
              <upperValue xmi:id="10304" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9536" annotatedElement="9532" body="The Attributes owned by the DataType." xmi:type="Comment" />
              <lowerValue xmi:id="10305" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9527" visibility="public" isDerived="false" subsettedProperty="9420 8385" type="9508" class="9530" association="9529" aggregation="composite" isDerivedUnion="false" opposite="9526" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedOperation" xmi:type="Property">
              <upperValue xmi:id="10035" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9528" annotatedElement="9527" body="The Operations owned by the DataType." xmi:type="Comment" />
              <lowerValue xmi:id="10036" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9537" isQuery="true" visibility="public" redefinedOperation="9539" upper="1" lower="1" class="9530" isOrdered="false" isUnique="true" name="inherit" xmi:type="Operation">
              <formalParameter xmi:id="9545" direction="return" type="8400" isOrdered="false" isUnique="true" operation="9537" xmi:type="Parameter">
                <upperValue xmi:id="10453" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10454" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9546" direction="in" type="8400" isOrdered="false" isUnique="true" name="inhs" operation="9537" xmi:type="Parameter">
                <upperValue xmi:id="10455" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10456" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9547" namespace="9537" name="spec" constrainedElement="9537" xmi:type="Constraint">
                <specification xmi:id="9548" language="OCL" body="result = inhs-&gt;excluding(inh | ownedMember-&gt;select(oclIsKindOf(RedefinableElement))-&gt;select(redefinedElement-&gt;includes(inh)))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9538" annotatedElement="9537" body="The inherit operation is overridden to exclude redefined properties." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10457" general="9423" xmi:type="Generalization" />
            <generalization xmi:id="10460" general="9423" xmi:type="Generalization" />
            <generalization xmi:id="10496" general="9423" xmi:type="Generalization" />
            <generalization xmi:id="10518" general="9423" xmi:type="Generalization" />
            <ownedComment xmi:id="9531" annotatedElement="9530" body="A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.&#xA;&#xA;&#xA;&#xA;A typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9435" visibility="public" isAbstract="true" name="RedefinableElement" package="8320" superClass="8400" xmi:type="Class">
            <ownedRule xmi:id="9437" namespace="9435" name="redefinition_context_valid" constrainedElement="9435" xmi:type="Constraint">
              <ownedComment xmi:id="9438" annotatedElement="9437" body="At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element." xmi:type="Comment" />
              <specification xmi:id="9439" language="OCL" body="self.redefinedElement-&gt;forAll(e | self.isRedefinitionContextValid(e))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9440" namespace="9435" name="redefinition_consistent" constrainedElement="9435" xmi:type="Constraint">
              <ownedComment xmi:id="9441" annotatedElement="9440" body="A redefining element must be consistent with each redefined element." xmi:type="Comment" />
              <specification xmi:id="9442" language="OCL" body="self.redefinedElement-&gt;forAll(re | re.isConsistentWith(self))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9433" visibility="public" isDerived="true" type="9423" class="9435" association="9459" isDerivedUnion="true" opposite="9434" isReadOnly="true" isUnique="true" isOrdered="false" name="redefinitionContext" xmi:type="Property">
              <upperValue xmi:id="10039" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9460" annotatedElement="9433" body="References the contexts that this element may be redefined from." xmi:type="Comment" />
              <lowerValue xmi:id="10040" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9443" visibility="public" isDerived="true" type="9435" class="9435" association="9445" isDerivedUnion="true" opposite="9444" isReadOnly="true" isUnique="true" isOrdered="false" name="redefinedElement" xmi:type="Property">
              <upperValue xmi:id="10070" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9446" annotatedElement="9443" body="The redefinable element that is being redefined by this element." xmi:type="Comment" />
              <lowerValue xmi:id="10071" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9447" isQuery="true" visibility="public" upper="1" lower="1" class="9435" isOrdered="false" isUnique="true" name="isConsistentWith" xmi:type="Operation">
              <formalParameter xmi:id="9449" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9447" xmi:type="Parameter">
                <upperValue xmi:id="10219" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10220" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9450" direction="in" type="9435" isOrdered="false" isUnique="true" name="redefinee" operation="9447" xmi:type="Parameter">
                <upperValue xmi:id="10221" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10222" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9451" namespace="9447" name="spec" constrainedElement="9447" xmi:type="Constraint">
                <specification xmi:id="9452" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9448" annotatedElement="9447" body="The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9453" isQuery="true" visibility="public" upper="1" lower="1" class="9435" isOrdered="false" isUnique="true" name="isRedefinitionContextValid" xmi:type="Operation">
              <formalParameter xmi:id="9455" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9453" xmi:type="Parameter">
                <upperValue xmi:id="10223" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10224" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9456" direction="in" type="9435" isOrdered="false" isUnique="true" name="redefined" operation="9453" xmi:type="Parameter">
                <upperValue xmi:id="10225" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10226" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9457" namespace="9453" name="spec" constrainedElement="9453" xmi:type="Constraint">
                <specification xmi:id="9458" language="OCL" body="result = self.redefinitionContext-&gt;exists(c | redefined.redefinitionContext-&gt;exists(r | c.allParents()-&gt;includes(r)))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9454" annotatedElement="9453" body="The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10227" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10229" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10242" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10461" general="8400" xmi:type="Generalization" />
            <ownedComment xmi:id="9436" annotatedElement="9435" body="A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier. " xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9662" visibility="public" isDerived="false" memberEnd="9660" isAbstract="false" name="A_bodyCondition_bodyContext" general="9289" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9661" owningAssociation="9662" visibility="public" isDerived="false" subsettedProperty="9288" type="9508" isDerivedUnion="false" opposite="9660" isReadOnly="false" isUnique="true" isOrdered="false" name="bodyContext" xmi:type="Property">
              <upperValue xmi:id="10462" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10463" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9305" visibility="public" isDerived="false" memberEnd="9303" isAbstract="false" name="A_specification_owningConstraint" general="8319" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9304" owningAssociation="9305" visibility="public" isDerived="false" subsettedProperty="8317" type="9291" isDerivedUnion="false" opposite="9303" isReadOnly="false" isUnique="true" isOrdered="false" name="owningConstraint" xmi:type="Property">
              <upperValue xmi:id="10466" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10467" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9659" visibility="public" isDerived="false" memberEnd="9657" isAbstract="false" name="A_postcondition_postContext" general="9289" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9658" owningAssociation="9659" visibility="public" isDerived="false" subsettedProperty="9288" type="9508" isDerivedUnion="false" opposite="9657" isReadOnly="false" isUnique="true" isOrdered="false" name="postContext" xmi:type="Property">
              <upperValue xmi:id="10468" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10469" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8358" visibility="public" isDerived="false" memberEnd="8356" isAbstract="false" name="A_annotatedElement_comment" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8357" owningAssociation="8358" visibility="public" isDerived="false" type="8352" isDerivedUnion="false" opposite="8356" isReadOnly="false" isUnique="true" isOrdered="false" name="comment" xmi:type="Property">
              <upperValue xmi:id="10472" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10473" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9423" visibility="public" isAbstract="true" name="Classifier" package="8320" superClass="8388 9315" xmi:type="Class">
            <ownedRule xmi:id="9425" namespace="9423" name="no_cycles_in_generalization" constrainedElement="9423" xmi:type="Constraint">
              <ownedComment xmi:id="9426" annotatedElement="9425" body="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier." xmi:type="Comment" />
              <specification xmi:id="9427" language="OCL" body="not self.allParents()-&gt;includes(self)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9428" namespace="9423" name="specialize_type" constrainedElement="9423" xmi:type="Constraint">
              <ownedComment xmi:id="9429" annotatedElement="9428" body="A classifier may only specialize classifiers of a valid type." xmi:type="Comment" />
              <specification xmi:id="9430" language="OCL" body="self.parents()-&gt;forAll(c | self.maySpecializeType(c))" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9431" visibility="public" isDerived="true" subsettedProperty="9420" type="9463" class="9423" association="9461" isDerivedUnion="true" opposite="9432" isReadOnly="true" isOrdered="false" isUnique="true" name="attribute" xmi:type="Property">
              <upperValue xmi:id="10090" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9462" annotatedElement="9431" body="Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier." xmi:type="Comment" />
              <lowerValue xmi:id="10091" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9420" visibility="public" isDerived="true" subsettedProperty="8386" type="9635" class="9423" association="9419" isDerivedUnion="true" opposite="9421" isReadOnly="true" isOrdered="false" isUnique="true" name="feature" xmi:type="Property">
              <upperValue xmi:id="10019" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9841" annotatedElement="9420" body="Redefines the corresponding association in Abstractions.  Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features." xmi:type="Comment" />
              <lowerValue xmi:id="10020" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9704" visibility="public" isDerived="false" type="9423" class="9423" association="9706" isDerivedUnion="false" opposite="9703" isReadOnly="false" isUnique="true" isOrdered="false" name="general" xmi:type="Property">
              <upperValue xmi:id="10092" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9705" annotatedElement="9704" body="References the general classifier in the Generalization relationship." xmi:type="Comment" />
              <lowerValue xmi:id="10093" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9784" visibility="public" isDerived="true" subsettedProperty="8386" type="8400" class="9423" association="9786" isDerivedUnion="false" opposite="9785" isReadOnly="true" isOrdered="false" isUnique="true" name="inheritedMember" xmi:type="Property">
              <upperValue xmi:id="10094" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9787" annotatedElement="9784" body="Specifies all elements inherited by this classifier from the general classifiers." xmi:type="Comment" />
              <lowerValue xmi:id="10095" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9788" isQuery="true" visibility="public" redefinedOperation="9323" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="conformsTo" xmi:type="Operation">
              <formalParameter xmi:id="9790" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9788" xmi:type="Parameter">
                <upperValue xmi:id="10096" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10097" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9791" direction="in" type="9423" isOrdered="false" isUnique="true" name="other" operation="9788" xmi:type="Parameter">
                <upperValue xmi:id="10098" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10099" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9792" namespace="9788" name="spec" constrainedElement="9788" xmi:type="Constraint">
                <specification xmi:id="9793" language="OCL" body="result = (self=other) or (self.allParents()-&gt;includes(other))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9789" annotatedElement="9788" body="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9794" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="allFeatures" xmi:type="Operation">
              <formalParameter xmi:id="9796" direction="return" type="9635" isOrdered="false" isUnique="true" operation="9794" xmi:type="Parameter">
                <upperValue xmi:id="10113" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10114" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9797" namespace="9794" name="spec" constrainedElement="9794" xmi:type="Constraint">
                <specification xmi:id="9798" language="OCL" body="result = member-&gt;select(oclIsKindOf(Feature))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9795" annotatedElement="9794" body="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9799" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="general" xmi:type="Operation">
              <formalParameter xmi:id="9801" direction="return" type="9423" isOrdered="false" isUnique="true" operation="9799" xmi:type="Parameter">
                <upperValue xmi:id="10117" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10118" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9802" namespace="9799" name="spec" constrainedElement="9799 9704" xmi:type="Constraint">
                <specification xmi:id="9803" language="OCL" body="result = self.parents()" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9800" annotatedElement="9799" body="The general classifiers are the classifiers referenced by the generalization relationships." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9804" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="parents" xmi:type="Operation">
              <formalParameter xmi:id="9806" direction="return" type="9423" isOrdered="false" isUnique="true" operation="9804" xmi:type="Parameter">
                <upperValue xmi:id="10121" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10122" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9807" namespace="9804" name="spec" constrainedElement="9804" xmi:type="Constraint">
                <specification xmi:id="9808" language="OCL" body="result = generalization.general" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9805" annotatedElement="9804" body="The query parents() gives all of the immediate ancestors of a generalized Classifier." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9809" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="inheritedMember" xmi:type="Operation">
              <formalParameter xmi:id="9811" direction="return" type="8400" isOrdered="false" isUnique="true" operation="9809" xmi:type="Parameter">
                <upperValue xmi:id="10125" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10126" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9812" namespace="9809" name="spec" constrainedElement="9809 9784" xmi:type="Constraint">
                <specification xmi:id="9813" language="OCL" body="result = self.inherit(self.parents()-&gt;collect(p | p.inheritableMembers(self))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9810" annotatedElement="9809" body="The inheritedMember association is derived by inheriting the inheritable members of the parents." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9814" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="allParents" xmi:type="Operation">
              <formalParameter xmi:id="9816" direction="return" type="9423" isOrdered="false" isUnique="true" operation="9814" xmi:type="Parameter">
                <upperValue xmi:id="10129" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10130" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9817" namespace="9814" name="spec" constrainedElement="9814" xmi:type="Constraint">
                <specification xmi:id="9818" language="OCL" body="result = self.parents()-&gt;union(self.parents()-&gt;collect(p | p.allParents())" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9815" annotatedElement="9814" body="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9819" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="inheritableMembers" xmi:type="Operation">
              <formalParameter xmi:id="9821" direction="return" type="8400" isOrdered="false" isUnique="true" operation="9819" xmi:type="Parameter">
                <upperValue xmi:id="10133" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10134" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9822" direction="in" type="9423" isOrdered="false" isUnique="true" name="c" operation="9819" xmi:type="Parameter">
                <upperValue xmi:id="10135" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10136" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9825" namespace="9819" name="spec" constrainedElement="9819" xmi:type="Constraint">
                <specification xmi:id="9826" language="OCL" body="result = member-&gt;select(m | c.hasVisibilityOf(m))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9823" namespace="9819" constrainedElement="9819" xmi:type="Constraint">
                <specification xmi:id="9824" language="OCL" body="c.allParents()-&gt;includes(self)" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9820" annotatedElement="9819" body="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9827" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="hasVisibilityOf" xmi:type="Operation">
              <formalParameter xmi:id="9829" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9827" xmi:type="Parameter">
                <upperValue xmi:id="10139" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10140" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9830" direction="in" type="8400" isOrdered="false" isUnique="true" name="n" operation="9827" xmi:type="Parameter">
                <upperValue xmi:id="10141" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10142" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9833" namespace="9827" name="spec" constrainedElement="9827" xmi:type="Constraint">
                <specification xmi:id="9834" language="OCL" body="result = if (self.inheritedMember-&gt;includes(n)) then (n.visibility &lt;&gt; #private) else true" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9831" namespace="9827" constrainedElement="9827" xmi:type="Constraint">
                <specification xmi:id="9832" language="OCL" body="self.allParents()-&gt;collect(c | c.member)-&gt;includes(n)" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9828" annotatedElement="9827" body="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9539" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="inherit" xmi:type="Operation">
              <formalParameter xmi:id="9541" direction="return" type="8400" isOrdered="false" isUnique="true" operation="9539" xmi:type="Parameter">
                <upperValue xmi:id="10086" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10087" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9542" direction="in" type="8400" isOrdered="false" isUnique="true" name="inhs" operation="9539" xmi:type="Parameter">
                <upperValue xmi:id="10088" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10089" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9543" namespace="9539" name="spec" constrainedElement="9539" xmi:type="Constraint">
                <specification xmi:id="9544" language="OCL" body="result = inhs" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9540" annotatedElement="9539" body="The inherit operation is overridden to exclude redefined properties." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9835" isQuery="true" visibility="public" upper="1" lower="1" class="9423" isOrdered="false" isUnique="true" name="maySpecializeType" xmi:type="Operation">
              <formalParameter xmi:id="9837" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9835" xmi:type="Parameter">
                <upperValue xmi:id="10145" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10146" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9838" direction="in" type="9423" isOrdered="false" isUnique="true" name="c" operation="9835" xmi:type="Parameter">
                <upperValue xmi:id="10147" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10148" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9839" namespace="9835" name="spec" constrainedElement="9835" xmi:type="Constraint">
                <specification xmi:id="9840" language="OCL" body="result = self.oclIsKindOf(c.oclType)" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9836" annotatedElement="9835" body="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10111" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10112" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10115" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10116" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10119" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10120" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10123" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10124" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10127" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10128" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10131" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10132" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10137" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10138" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10143" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10144" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10149" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10150" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10184" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10185" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10187" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10188" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10290" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10291" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10458" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10459" general="9315" xmi:type="Generalization" />
            <generalization xmi:id="10474" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10475" general="9315" xmi:type="Generalization" />
            <ownedComment xmi:id="9424" annotatedElement="9423" body="A classifier is a type. It can specify a generalization hierarchy by referencing its general classifiers.  A classifier is also a namespace whose members can include features. Classifier is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9751" visibility="public" isDerived="false" memberEnd="9749" isAbstract="false" name="A_opposite_property" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9750" owningAssociation="9751" visibility="public" isDerived="false" type="9463" isDerivedUnion="false" opposite="9749" isReadOnly="false" isUnique="true" isOrdered="false" name="property" xmi:type="Property">
              <upperValue xmi:id="10476" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10477" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9861" visibility="public" isAbstract="false" name="EnumerationLiteral" package="8320" superClass="8400" xmi:type="Class">
            <ownedAttribute xmi:id="9863" visibility="public" isDerived="false" subsettedProperty="8384" type="9867" class="9861" association="9866" isDerivedUnion="false" opposite="9864" isReadOnly="false" isOrdered="false" isUnique="true" name="enumeration" xmi:type="Property">
              <upperValue xmi:id="10478" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9869" annotatedElement="9863" body="The enumeration that this literal belongs to." xmi:type="Comment" />
              <lowerValue xmi:id="10479" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10481" general="8400" xmi:type="Generalization" />
            <ownedComment xmi:id="9862" annotatedElement="9861" body="An enumeration literal is a value of an enumeration." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8349" visibility="public" isDerived="false" memberEnd="8347" isAbstract="false" name="A_ownedComment_owningElement" general="8319" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8348" owningAssociation="8349" visibility="public" isDerived="false" subsettedProperty="8317" type="8338" isDerivedUnion="false" opposite="8347" isReadOnly="false" isUnique="true" isOrdered="false" name="owningElement" xmi:type="Property">
              <upperValue xmi:id="10482" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10483" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9858" visibility="public" isAbstract="false" name="Expression" package="8320" superClass="9307" xmi:type="Class">
            <ownedAttribute xmi:id="9856" visibility="public" isDerived="false" subsettedProperty="8316" type="9307" class="9858" association="9855" aggregation="composite" isDerivedUnion="false" opposite="9857" isReadOnly="false" isOrdered="true" isUnique="true" name="operand" xmi:type="Property">
              <upperValue xmi:id="10362" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9860" annotatedElement="9856" body="Specifies a sequence of operands." xmi:type="Comment" />
              <lowerValue xmi:id="10363" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10486" general="9307" xmi:type="Generalization" />
            <ownedComment xmi:id="9859" annotatedElement="9858" body="An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9459" visibility="public" isDerived="false" memberEnd="9433" isAbstract="false" name="A_redefinitionContext_redefinableElement" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9434" owningAssociation="9459" visibility="public" isDerived="false" type="9435" isDerivedUnion="false" opposite="9433" isReadOnly="false" isUnique="true" isOrdered="false" name="redefinableElement" xmi:type="Property">
              <upperValue xmi:id="10041" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10042" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8326" visibility="public" isDerived="false" memberEnd="8323 8324" isAbstract="false" name="A_receivingPackage_packageMerge" general="8327 8319" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9736" visibility="public" isDerived="false" memberEnd="9717 9716" isAbstract="false" name="A_ownedEnd_owningAssociation" general="9721 9419 9290" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9291" visibility="public" isAbstract="false" name="Constraint" package="8320" superClass="8398" xmi:type="Class">
            <ownedRule xmi:id="9293" namespace="9291" name="not_apply_to_self" constrainedElement="9291" xmi:type="Constraint">
              <ownedComment xmi:id="9294" annotatedElement="9293" body="A constraint cannot be applied to itself." xmi:type="Comment" />
              <specification xmi:id="9295" language="OCL" body="not constrainedElement-&gt;includes(self)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9296" namespace="9291" name="value_specification_boolean" constrainedElement="9291" xmi:type="Constraint">
              <ownedComment xmi:id="9297" annotatedElement="9296" body="The value specification for a constraint must evaluate to a Boolean value." xmi:type="Comment" />
              <specification xmi:id="9298" language="OCL" body="self.specification().booleanValue().isOclKindOf(Boolean)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9299" visibility="public" isDerived="false" type="8338" class="9291" association="9301" isDerivedUnion="false" opposite="9300" isReadOnly="false" isUnique="true" isOrdered="true" name="constrainedElement" xmi:type="Property">
              <upperValue xmi:id="10489" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9302" annotatedElement="9299" body="The ordered set of Elements referenced by this Constraint." xmi:type="Comment" />
              <lowerValue xmi:id="10490" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9303" visibility="public" isDerived="false" subsettedProperty="8316" type="9307" class="9291" association="9305" aggregation="composite" isDerivedUnion="false" opposite="9304" isReadOnly="false" isOrdered="false" isUnique="true" name="specification" xmi:type="Property">
              <upperValue xmi:id="10464" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9306" annotatedElement="9303" body="A condition that must be true when evaluated in order for the constraint to be satisfied.&#xA;&#xA;" xmi:type="Comment" />
              <lowerValue xmi:id="10465" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9288" visibility="public" isDerived="false" subsettedProperty="8384" type="8388" class="9291" association="9289" isDerivedUnion="false" opposite="9287" isReadOnly="false" isUnique="true" isOrdered="false" name="context" xmi:type="Property">
              <upperValue xmi:id="10325" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10326" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10492" general="8398" xmi:type="Generalization" />
            <ownedComment xmi:id="9292" annotatedElement="9291" body="Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association &quot;xor&quot; constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.&#xA;&#xA;Constraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to the element. Constraint contains an optional name, although they are commonly unnamed." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9309" visibility="public" isAbstract="true" name="TypedElement" package="8320" superClass="8400" xmi:type="Class">
            <ownedAttribute xmi:id="9311" visibility="public" isDerived="false" type="9315" class="9309" association="9313" isDerivedUnion="false" opposite="9312" isReadOnly="false" isUnique="true" isOrdered="false" name="type" xmi:type="Property">
              <upperValue xmi:id="10244" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9314" annotatedElement="9311" body="Redefines the corresponding property from Basic to derive this information from the return result for this Operation." xmi:type="Comment" />
              <lowerValue xmi:id="10245" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10247" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10355" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10493" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10529" general="8400" xmi:type="Generalization" />
            <ownedComment xmi:id="9310" annotatedElement="9309" body="A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8319" visibility="public" isDerived="false" memberEnd="8316 8317" isAbstract="false" name="A_ownedElement_owner" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9248" visibility="public" isDerived="false" memberEnd="9245 9246" isAbstract="false" name="A_elementImport_importingNamespace" general="8319 8327" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9870" visibility="public" isAbstract="false" name="PrimitiveType" package="8320" superClass="9530" xmi:type="Class">
            <generalization xmi:id="10497" general="9530" xmi:type="Generalization" />
            <ownedComment xmi:id="9871" annotatedElement="9870" body="A primitive type defines a predefined data type, without any relevant substructure (i.e. it has no parts in the context of the UML). A primitive datatype may have an algebra and operations defined out of UML, for example, mathematically." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9556" visibility="public" isAbstract="true" name="BehavioralFeature" package="8320" superClass="9635 8388" xmi:type="Class">
            <ownedAttribute xmi:id="9558" visibility="public" isDerived="false" subsettedProperty="8385" type="9562" class="9556" association="9560" aggregation="composite" isDerivedUnion="false" opposite="9559" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedParameter" xmi:type="Property">
              <upperValue xmi:id="10027" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9561" annotatedElement="9558" body="Specifies the ordered set of formal parameters of this BehavioralFeature." xmi:type="Comment" />
              <lowerValue xmi:id="10028" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9553" visibility="public" isDerived="false" type="9315" class="9556" association="9555" isDerivedUnion="false" opposite="9552" isReadOnly="false" isUnique="true" isOrdered="false" name="raisedException" xmi:type="Property">
              <upperValue xmi:id="10366" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9554" annotatedElement="9553" body="References the Types representing exceptions that may be raised during an invocation of this feature." xmi:type="Comment" />
              <lowerValue xmi:id="10367" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9637" isQuery="true" visibility="public" redefinedOperation="9228" upper="1" lower="1" class="9556" isOrdered="false" isUnique="true" name="isDistinguishableFrom" xmi:type="Operation">
              <formalParameter xmi:id="9639" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9637" xmi:type="Parameter">
                <upperValue xmi:id="10440" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10441" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9640" direction="in" type="8400" isOrdered="false" isUnique="true" name="n" operation="9637" xmi:type="Parameter">
                <upperValue xmi:id="10442" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10443" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9641" direction="in" type="8388" isOrdered="false" isUnique="true" name="ns" operation="9637" xmi:type="Parameter">
                <upperValue xmi:id="10444" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10445" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9642" namespace="9637" name="spec" constrainedElement="9637" xmi:type="Constraint">
                <specification xmi:id="9643" language="OCL" body="result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)-&gt;intersection(ns.getNamesOfMember(n))-&gt;notEmpty()&#xA;  then Set{}-&gt;include(self)-&gt;include(n)-&gt;isUnique( bf | bf.parameter-&gt;collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9638" annotatedElement="9637" body="The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10446" general="9635" xmi:type="Generalization" />
            <generalization xmi:id="10447" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10450" general="9635" xmi:type="Generalization" />
            <generalization xmi:id="10451" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10498" general="9635" xmi:type="Generalization" />
            <generalization xmi:id="10499" general="8388" xmi:type="Generalization" />
            <ownedComment xmi:id="9557" annotatedElement="9556" body="A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8338" visibility="public" isAbstract="true" name="Element" package="8320" xmi:type="Class">
            <ownedRule xmi:id="8340" namespace="8338" name="not_own_self" constrainedElement="8338" xmi:type="Constraint">
              <ownedComment xmi:id="8341" annotatedElement="8340" body="An element may not directly or indirectly own itself." xmi:type="Comment" />
              <specification xmi:id="8342" language="OCL" body="not self.allOwnedElements()-&gt;includes(self)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="8344" namespace="8338" name="has_owner" constrainedElement="8338" xmi:type="Constraint">
              <ownedComment xmi:id="8345" annotatedElement="8344" body="Elements that must be owned must have an owner." xmi:type="Comment" />
              <specification xmi:id="8346" language="OCL" body="self.mustBeOwned() implies owner-&gt;notEmpty()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="8316" visibility="public" isDerived="true" type="8338" class="8338" association="8319" aggregation="composite" isDerivedUnion="true" opposite="8317" isReadOnly="true" isUnique="true" isOrdered="false" name="ownedElement" xmi:type="Property">
              <upperValue xmi:id="10004" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9873" annotatedElement="8316" body="The Elements owned by this element." xmi:type="Comment" />
              <lowerValue xmi:id="10005" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8317" visibility="public" isDerived="true" type="8338" class="8338" association="8319" isDerivedUnion="true" opposite="8316" isReadOnly="true" isUnique="true" isOrdered="false" name="owner" xmi:type="Property">
              <upperValue xmi:id="10007" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8318" annotatedElement="8317" body="The Element that owns this element." xmi:type="Comment" />
              <lowerValue xmi:id="10008" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8347" visibility="public" isDerived="false" subsettedProperty="8316" type="8352" class="8338" association="8349" aggregation="composite" isDerivedUnion="false" opposite="8348" isReadOnly="false" isOrdered="false" isUnique="true" name="ownedComment" xmi:type="Property">
              <upperValue xmi:id="10009" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8351" annotatedElement="8347" body="The Comments owned by this element." xmi:type="Comment" />
              <lowerValue xmi:id="10010" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="8360" isQuery="true" visibility="public" upper="1" lower="1" class="8338" isOrdered="false" isUnique="true" name="allOwnedElements" xmi:type="Operation">
              <formalParameter xmi:id="8362" direction="return" type="8338" isOrdered="false" isUnique="true" operation="8360" xmi:type="Parameter">
                <upperValue xmi:id="10011" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10012" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="8365" namespace="8360" name="spec" constrainedElement="8360" xmi:type="Constraint">
                <specification xmi:id="8366" language="OCL" body="result = ownedElement-&gt;union(ownedElement-&gt;collect(e | e.allOwnedElements()))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="8361" annotatedElement="8360" body="The query allOwnedElements() gives all of the direct and indirect owned elements of an element." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="8367" isQuery="true" visibility="public" upper="1" lower="1" class="8338" isOrdered="false" isUnique="true" name="mustBeOwned" xmi:type="Operation">
              <formalParameter xmi:id="8369" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8367" xmi:type="Parameter">
                <upperValue xmi:id="10013" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10014" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="8370" namespace="8367" name="spec" constrainedElement="8367" xmi:type="Constraint">
                <specification xmi:id="8371" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="8368" annotatedElement="8367" body="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation." xmi:type="Comment" />
            </ownedOperation>
            <ownedComment xmi:id="8339" annotatedElement="8338" body="An element can own comments." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9648" visibility="public" isDerived="false" memberEnd="9646" isAbstract="false" name="A_redefinedOperation_operation" general="9445" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9647" owningAssociation="9648" visibility="public" isDerived="false" type="9508" redefinedProperty="9444" isDerivedUnion="false" opposite="9646" isReadOnly="false" isUnique="true" isOrdered="false" name="operation" xmi:type="Property">
              <upperValue xmi:id="10500" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10501" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9786" visibility="public" isDerived="false" memberEnd="9784" isAbstract="false" name="A_inheritedMember_classifier" general="8396" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9785" owningAssociation="9786" visibility="public" isDerived="false" type="9423" redefinedProperty="8387" isDerivedUnion="false" opposite="9784" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
              <upperValue xmi:id="10502" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10503" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9852" visibility="public" isDerived="false" memberEnd="9850" isAbstract="false" name="A_language_opaqueExpression" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9851" owningAssociation="9852" visibility="public" isDerived="false" type="9845" isDerivedUnion="false" opposite="9850" isReadOnly="false" isUnique="true" isOrdered="false" name="opaqueExpression" xmi:type="Property">
              <upperValue xmi:id="10504" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10505" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9706" visibility="public" isDerived="false" memberEnd="9704" isAbstract="false" name="A_general_classifier" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9703" owningAssociation="9706" visibility="public" isDerived="false" type="9423" isDerivedUnion="false" opposite="9704" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
              <upperValue xmi:id="10381" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10382" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9417" visibility="public" isDerived="false" memberEnd="9415" isAbstract="false" name="A_mergedPackage_packageMerge" general="8374" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9416" owningAssociation="9417" visibility="public" isDerived="false" type="8321" redefinedProperty="8333" isDerivedUnion="false" opposite="9415" isReadOnly="false" isUnique="true" isOrdered="false" name="packageMerge" xmi:type="Property">
              <upperValue xmi:id="10506" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10507" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9301" visibility="public" isDerived="false" memberEnd="9299" isAbstract="false" name="A_constrainedElement_constraint" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9300" owningAssociation="9301" visibility="public" isDerived="false" type="9291" isDerivedUnion="false" opposite="9299" isReadOnly="false" isUnique="true" isOrdered="false" name="constraint" xmi:type="Property">
              <upperValue xmi:id="10508" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10509" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9284" visibility="public" isDerived="false" memberEnd="9282" isAbstract="false" name="A_importedPackage_packageImport" general="8374" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9283" owningAssociation="9284" visibility="public" isDerived="false" type="9275" redefinedProperty="8333" isDerivedUnion="false" opposite="9282" isReadOnly="false" isUnique="true" isOrdered="false" name="packageImport" xmi:type="Property">
              <upperValue xmi:id="10512" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10513" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9721" visibility="public" isDerived="false" memberEnd="9718 9719" isAbstract="false" name="A_memberEnd_association" general="8396" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="8327" visibility="public" isDerived="false" memberEnd="8328" isAbstract="false" name="A_source_directedRelationship" general="8337" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8329" owningAssociation="8327" visibility="public" isDerived="false" type="8330" redefinedProperty="8334" isDerivedUnion="false" opposite="8328" isReadOnly="false" isUnique="true" isOrdered="false" name="directedRelationship" xmi:type="Property">
              <upperValue xmi:id="10319" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10320" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9656" visibility="public" isDerived="false" memberEnd="9654" isAbstract="false" name="A_precondition_preContext" general="9289" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9655" owningAssociation="9656" visibility="public" isDerived="false" subsettedProperty="9288" type="9508" isDerivedUnion="false" opposite="9654" isReadOnly="false" isUnique="true" isOrdered="false" name="preContext" xmi:type="Property">
              <upperValue xmi:id="10514" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10515" value="0" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9867" visibility="public" isAbstract="false" name="Enumeration" package="8320" superClass="9530" xmi:type="Class">
            <ownedAttribute xmi:id="9864" visibility="public" isDerived="false" subsettedProperty="8385" type="9861" class="9867" association="9866" aggregation="composite" isDerivedUnion="false" opposite="9863" isReadOnly="false" isOrdered="true" isUnique="true" name="ownedLiteral" xmi:type="Property">
              <upperValue xmi:id="10516" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9865" annotatedElement="9864" body="The ordered collection of literals for the enumeration." xmi:type="Comment" />
              <lowerValue xmi:id="10517" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10519" general="9530" xmi:type="Generalization" />
            <ownedComment xmi:id="9868" annotatedElement="9867" body="Enumeration is a kind of data type, whose instances may be any of a number of predefined enumeration literals.&#xA;&#xA;It is possible to extend the set of applicable enumeration literals in other packages or profiles.&#xA;&#xA;" xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9583" visibility="public" isAbstract="true" name="MultiplicityElement" package="8320" superClass="8338" xmi:type="Class">
            <ownedRule xmi:id="9585" namespace="9583" name="upper_gt_0" constrainedElement="9583" xmi:type="Constraint">
              <ownedComment xmi:id="9586" annotatedElement="9585" body="A multiplicity must define at least one valid cardinality that is greater than zero." xmi:type="Comment" />
              <specification xmi:id="9587" language="OCL" body="upperBound()-&gt;notEmpty() implies upperBound() &gt; 0" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9588" namespace="9583" name="upper_ge_lower" constrainedElement="9583" xmi:type="Constraint">
              <ownedComment xmi:id="9589" annotatedElement="9588" body="The upper bound must be greater than or equal to the lower bound." xmi:type="Comment" />
              <specification xmi:id="9590" language="OCL" body="(upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()) implies upperBound() &gt;= lowerBound()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9591" namespace="9583" name="lower_ge_0" constrainedElement="9583" xmi:type="Constraint">
              <ownedComment xmi:id="9592" annotatedElement="9591" body="The lower bound must be a non-negative integer literal." xmi:type="Comment" />
              <specification xmi:id="9593" language="OCL" body="lowerBound()-&gt;notEmpty() implies lowerBound() &gt;= 0" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9594" visibility="public" isDerived="false" type="8297" class="9583" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isOrdered" xmi:type="Property">
              <upperValue xmi:id="10248" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9595" annotatedElement="9594" body="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.." xmi:type="Comment" />
              <lowerValue xmi:id="10249" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9596" visibility="public" isDerived="false" type="8297" class="9583" default="true" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isUnique" xmi:type="Property">
              <upperValue xmi:id="10250" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9597" annotatedElement="9596" body="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique." xmi:type="Comment" />
              <lowerValue xmi:id="10251" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9598" visibility="public" isDerived="false" type="8289" class="9583" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="lower" xmi:type="Property">
              <upperValue xmi:id="10252" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9599" annotatedElement="9598" body="Specifies the lower bound of the multiplicity interval." xmi:type="Comment" />
              <lowerValue xmi:id="10253" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9600" visibility="public" isDerived="false" type="8291" class="9583" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="upper" xmi:type="Property">
              <upperValue xmi:id="10254" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9601" annotatedElement="9600" body="Specifies the upper bound of the multiplicity interval." xmi:type="Comment" />
              <lowerValue xmi:id="10255" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9602" isQuery="true" visibility="public" upper="1" lower="1" class="9583" isOrdered="false" isUnique="true" name="isMultivalued" xmi:type="Operation">
              <formalParameter xmi:id="9604" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9602" xmi:type="Parameter">
                <upperValue xmi:id="10256" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10257" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9607" namespace="9602" name="spec" constrainedElement="9602" xmi:type="Constraint">
                <specification xmi:id="9608" language="OCL" body="result = upperBound() &gt; 1" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9605" namespace="9602" constrainedElement="9602" xmi:type="Constraint">
                <specification xmi:id="9606" language="OCL" body="upperBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9603" annotatedElement="9602" body="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9609" isQuery="true" visibility="public" upper="1" lower="1" class="9583" isOrdered="false" isUnique="true" name="includesMultiplicity" xmi:type="Operation">
              <formalParameter xmi:id="9611" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9609" xmi:type="Parameter">
                <upperValue xmi:id="10259" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10260" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9612" direction="in" type="9583" isOrdered="false" isUnique="true" name="M" operation="9609" xmi:type="Parameter">
                <upperValue xmi:id="10261" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10262" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9615" namespace="9609" name="spec" constrainedElement="9609" xmi:type="Constraint">
                <specification xmi:id="9616" language="OCL" body="result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() &gt;= M.upperBound())" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9613" namespace="9609" constrainedElement="9609" xmi:type="Constraint">
                <specification xmi:id="9614" language="OCL" body="self.upperBound()-&gt;notEmpty() and self.lowerBound()-&gt;notEmpty() and M.upperBound()-&gt;notEmpty() and M.lowerBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9610" annotatedElement="9609" body="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9617" isQuery="true" visibility="public" upper="1" lower="1" class="9583" isOrdered="false" isUnique="true" name="includesCardinality" xmi:type="Operation">
              <formalParameter xmi:id="9619" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9617" xmi:type="Parameter">
                <upperValue xmi:id="10264" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10265" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9620" direction="in" type="8289" isOrdered="false" isUnique="true" name="C" operation="9617" xmi:type="Parameter">
                <upperValue xmi:id="10266" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10267" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9623" namespace="9617" name="spec" constrainedElement="9617" xmi:type="Constraint">
                <specification xmi:id="9624" language="OCL" body="result = (lowerBound() &lt;= C) and (upperBound() &gt;= C)" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9621" namespace="9617" constrainedElement="9617" xmi:type="Constraint">
                <specification xmi:id="9622" language="OCL" body="upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9618" annotatedElement="9617" body="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9625" isQuery="true" visibility="public" upper="1" lower="1" class="9583" isOrdered="false" isUnique="true" name="lowerBound" xmi:type="Operation">
              <formalParameter xmi:id="9627" direction="return" type="8289" isOrdered="false" isUnique="true" operation="9625" xmi:type="Parameter">
                <upperValue xmi:id="10269" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10270" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9628" namespace="9625" name="spec" constrainedElement="9625" xmi:type="Constraint">
                <specification xmi:id="9629" language="OCL" body="result = if lower-&gt;notEmpty() then lower else 1 endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9626" annotatedElement="9625" body="The query lowerBound() returns the lower bound of the multiplicity as an integer." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9630" isQuery="true" visibility="public" upper="1" lower="1" class="9583" isOrdered="false" isUnique="true" name="upperBound" xmi:type="Operation">
              <formalParameter xmi:id="9632" direction="return" type="8291" isOrdered="false" isUnique="true" operation="9630" xmi:type="Parameter">
                <upperValue xmi:id="10272" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10273" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9633" namespace="9630" name="spec" constrainedElement="9630" xmi:type="Constraint">
                <specification xmi:id="9634" language="OCL" body="result = if upper-&gt;notEmpty() then upper else 1 endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9631" annotatedElement="9630" body="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10258" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10263" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10268" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10271" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10274" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10275" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10520" general="8338" xmi:type="Generalization" />
            <generalization xmi:id="10530" general="8338" xmi:type="Generalization" />
            <ownedComment xmi:id="9584" annotatedElement="9583" body="A MultiplicityElement is an abstract metaclass which includes optional attributes for defining the bounds of a multiplicity. A MultiplicityElement also includes specifications of whether the values in an instantiation of this element must be unique or ordered." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8374" visibility="public" isDerived="false" memberEnd="8332" isAbstract="false" name="A_target_directedRelationship" general="8337" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8333" owningAssociation="8374" visibility="public" isDerived="false" type="8330" redefinedProperty="8334" isDerivedUnion="false" opposite="8332" isReadOnly="false" isUnique="true" isOrdered="false" name="directedRelationship" xmi:type="Property">
              <upperValue xmi:id="11101" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="11102" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9275" visibility="public" isAbstract="false" name="PackageImport" package="8320" superClass="8330" xmi:type="Class">
            <ownedRule xmi:id="9277" namespace="9275" name="public_or_private" constrainedElement="9275" xmi:type="Constraint">
              <ownedComment xmi:id="9278" annotatedElement="9277" body="The visibility of a PackageImport is either public or private." xmi:type="Comment" />
              <specification xmi:id="9279" language="OCL" body="self.visibility = #public or self.visibility = #private" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9280" visibility="public" isDerived="false" type="8415" class="9275" default="public" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="visibility" xmi:type="Property">
              <upperValue xmi:id="10521" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9281" annotatedElement="9280" body="Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not." xmi:type="Comment" />
              <lowerValue xmi:id="10522" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9282" visibility="public" isDerived="false" subsettedProperty="8332" type="8377" class="9275" association="9284" isDerivedUnion="false" opposite="9283" isReadOnly="false" isOrdered="false" isUnique="true" name="importedPackage" xmi:type="Property">
              <upperValue xmi:id="10510" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9285" annotatedElement="9282" body="Specifies the Package whose members are imported into a Namespace." xmi:type="Comment" />
              <lowerValue xmi:id="10511" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9272" visibility="public" isDerived="false" subsettedProperty="8328 8317" type="8388" class="9275" association="9274" isDerivedUnion="false" opposite="9271" isReadOnly="false" isOrdered="false" isUnique="true" name="importingNamespace" xmi:type="Property">
              <upperValue xmi:id="10317" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9273" annotatedElement="9272" body="Specifies the Namespace that imports the members from a Package." xmi:type="Comment" />
              <lowerValue xmi:id="10318" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10524" general="8330" xmi:type="Generalization" />
            <ownedComment xmi:id="9276" annotatedElement="9275" body="A package import is defined as a directed relationship that identifies a package whose members are to be imported by a namespace." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9562" visibility="public" isAbstract="false" name="Parameter" package="8320" superClass="9309 9583" xmi:type="Class">
            <ownedAttribute xmi:id="9564" visibility="public" isDerived="false" type="8295" class="9562" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="default" xmi:type="Property">
              <upperValue xmi:id="10525" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9565" annotatedElement="9564" body="Specifies a String that represents a value to be used when no argument is supplied for the Parameter." xmi:type="Comment" />
              <lowerValue xmi:id="10526" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9566" visibility="public" isDerived="false" type="9568" class="9562" default="in" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="direction" xmi:type="Property">
              <upperValue xmi:id="10527" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9567" annotatedElement="9566" body="Indicates whether a parameter is being sent into or out of a behavioral element." xmi:type="Comment" />
              <lowerValue xmi:id="10528" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9578" visibility="public" isDerived="false" subsettedProperty="8384" type="9508" class="9562" association="9581" isDerivedUnion="false" opposite="9579" isReadOnly="false" isOrdered="false" isUnique="true" name="operation" xmi:type="Property">
              <upperValue xmi:id="10377" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9582" annotatedElement="9578" body="References the Operation for which this is a formal parameter." xmi:type="Comment" />
              <lowerValue xmi:id="10378" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10531" general="9309" xmi:type="Generalization" />
            <generalization xmi:id="10532" general="9583" xmi:type="Generalization" />
            <ownedComment xmi:id="9563" annotatedElement="9562" body="A parameter is a kind of typed element in order to allow the specification of an optional multiplicity on parameters. In addition, it supports the specification of an optional default value." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9731" visibility="public" isDerived="false" memberEnd="9729" isAbstract="false" name="A_endType_association" general="8337" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9730" owningAssociation="9731" visibility="public" isDerived="false" type="9722" redefinedProperty="8334" isDerivedUnion="false" opposite="9729" isReadOnly="false" isUnique="true" isOrdered="false" name="association" xmi:type="Property">
              <upperValue xmi:id="10533" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10534" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="9866" visibility="public" isDerived="false" memberEnd="9864 9863" isAbstract="false" name="A_ownedLiteral_enumeration" general="9290" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="9644" visibility="public" isDerived="false" memberEnd="9550" isAbstract="false" name="A_raisedException_operation" general="9555" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="9551" owningAssociation="9644" visibility="public" isDerived="false" type="9508" redefinedProperty="9552" isDerivedUnion="false" opposite="9550" isReadOnly="false" isUnique="true" isOrdered="false" name="operation" xmi:type="Property">
              <upperValue xmi:id="10535" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="10536" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8352" visibility="public" isAbstract="false" name="Comment" package="8320" superClass="8338" xmi:type="Class">
            <ownedAttribute xmi:id="8354" visibility="public" isDerived="false" type="8295" class="8352" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="body" xmi:type="Property">
              <upperValue xmi:id="10537" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="8355" annotatedElement="8354" body="Specifies a string that is the comment." xmi:type="Comment" />
              <lowerValue xmi:id="10538" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8356" visibility="public" isDerived="false" type="8338" class="8352" association="8358" isDerivedUnion="false" opposite="8357" isReadOnly="false" isUnique="true" isOrdered="false" name="annotatedElement" xmi:type="Property">
              <upperValue xmi:id="10470" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8359" annotatedElement="8356" body="References the Element(s) being commented." xmi:type="Comment" />
              <lowerValue xmi:id="10471" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <generalization xmi:id="10539" general="8338" xmi:type="Generalization" />
            <ownedComment xmi:id="8353" annotatedElement="8352" body="A comment is a textual annotation that can be attached to a set of elements." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9249" visibility="public" isAbstract="false" name="ElementImport" package="8320" superClass="8330" xmi:type="Class">
            <ownedRule xmi:id="9251" namespace="9249" name="visibility_public_or_private" constrainedElement="9249" xmi:type="Constraint">
              <ownedComment xmi:id="9252" annotatedElement="9251" body="The visibility of an ElementImport is either public or private." xmi:type="Comment" />
              <specification xmi:id="9253" language="OCL" body="self.visibility = #public or self.visibility = #private" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedRule xmi:id="9254" namespace="9249" name="imported_element_is_public" constrainedElement="9249" xmi:type="Constraint">
              <ownedComment xmi:id="9255" annotatedElement="9254" body="An importedElement has either public visibility or no visibility at all." xmi:type="Comment" />
              <specification xmi:id="9256" language="OCL" body="self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="9257" visibility="public" isDerived="false" type="8415" class="9249" default="public" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="visibility" xmi:type="Property">
              <upperValue xmi:id="10540" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9258" annotatedElement="9257" body="Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import." xmi:type="Comment" />
              <lowerValue xmi:id="10541" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9259" visibility="public" isDerived="false" type="8295" class="9249" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="alias" xmi:type="Property">
              <upperValue xmi:id="10542" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9260" annotatedElement="9259" body="Specifies the name that should be added to the namespace of the importing Package in lieu of the name of the imported PackagableElement. The aliased name must not clash with any other member name in the importing Package. By default, no alias is used." xmi:type="Comment" />
              <lowerValue xmi:id="10543" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9261" visibility="public" isDerived="false" subsettedProperty="8332" type="8398" class="9249" association="9263" isDerivedUnion="false" opposite="9262" isReadOnly="false" isOrdered="false" isUnique="true" name="importedElement" xmi:type="Property">
              <upperValue xmi:id="10306" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9264" annotatedElement="9261" body="Specifies the PackageableElement whose name is to be added to a Namespace." xmi:type="Comment" />
              <lowerValue xmi:id="10307" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9246" visibility="public" isDerived="false" subsettedProperty="8328 8317" type="8388" class="9249" association="9248" isDerivedUnion="false" opposite="9245" isReadOnly="false" isOrdered="false" isUnique="true" name="importingNamespace" xmi:type="Property">
              <upperValue xmi:id="10494" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9247" annotatedElement="9246" body="Specifies the Namespace that imports a PackageableElement from another Package." xmi:type="Comment" />
              <lowerValue xmi:id="10495" value="1" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9265" isQuery="true" visibility="public" upper="1" lower="1" class="9249" isOrdered="false" isUnique="true" name="getName" xmi:type="Operation">
              <formalParameter xmi:id="9267" direction="return" type="8295" isOrdered="false" isUnique="true" operation="9265" xmi:type="Parameter">
                <upperValue xmi:id="10544" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10545" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9268" namespace="9265" name="spec" constrainedElement="9265" xmi:type="Constraint">
                <specification xmi:id="9269" language="OCL" body="result = if self.alias-&gt;notEmpty() then &#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9266" annotatedElement="9265" body="The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10546" general="8330" xmi:type="Generalization" />
            <generalization xmi:id="10548" general="8330" xmi:type="Generalization" />
            <ownedComment xmi:id="9250" annotatedElement="9249" body="An element import is defined as a directed relationship between an importing namespace and a packageable element. The name of the packageable element or its alias is to be added to the namespace of the importing namespace. It is also possible to control whether the imported element can be further imported." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="9320" visibility="public" isDerived="false" memberEnd="9318 9317" isAbstract="false" name="A_ownedType_package" general="9321" package="8320" xmi:type="Association" />
          <ownedMember xmi:id="8337" visibility="public" isDerived="false" memberEnd="8335" isAbstract="false" name="A_relatedElement_relationship" package="8320" xmi:type="Association">
            <ownedEnd xmi:id="8334" owningAssociation="8337" visibility="public" isDerived="false" type="8372" isDerivedUnion="false" opposite="8335" isReadOnly="false" isUnique="true" isOrdered="false" name="relationship" xmi:type="Property">
              <upperValue xmi:id="9995" value="1" xmi:type="LiteralString" />
              <lowerValue xmi:id="9996" value="1" xmi:type="LiteralString" />
            </ownedEnd>
          </ownedMember>
          <ownedMember xmi:id="8388" visibility="public" isAbstract="true" name="Namespace" package="8320" superClass="8400" xmi:type="Class">
            <ownedRule xmi:id="8390" namespace="8388" name="members_distinguishable" constrainedElement="8388" xmi:type="Constraint">
              <ownedComment xmi:id="8391" annotatedElement="8390" body="All the members of a Namespace are distinguishable within it." xmi:type="Comment" />
              <specification xmi:id="8392" language="OCL" body="membersAreDistinguishable()" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="8393" visibility="public" isDerived="true" subsettedProperty="8386" type="8398" class="8388" association="8395" isDerivedUnion="false" opposite="8394" isReadOnly="true" isOrdered="false" isUnique="true" name="importedMember" xmi:type="Property">
              <upperValue xmi:id="10151" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8397" annotatedElement="8393" body="References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports." xmi:type="Comment" />
              <lowerValue xmi:id="10152" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9245" visibility="public" isDerived="false" subsettedProperty="8316" type="9249" class="8388" association="9248" aggregation="composite" isDerivedUnion="false" opposite="9246" isReadOnly="false" isOrdered="false" isUnique="true" name="elementImport" xmi:type="Property">
              <upperValue xmi:id="10153" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9270" annotatedElement="9245" body="References the ElementImports owned by the Namespace." xmi:type="Comment" />
              <lowerValue xmi:id="10154" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9271" visibility="public" isDerived="false" subsettedProperty="8316" type="9275" class="8388" association="9274" aggregation="composite" isDerivedUnion="false" opposite="9272" isReadOnly="false" isOrdered="false" isUnique="true" name="packageImport" xmi:type="Property">
              <upperValue xmi:id="10155" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9286" annotatedElement="9271" body="References the PackageImports owned by the Namespace." xmi:type="Comment" />
              <lowerValue xmi:id="10156" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8385" visibility="public" isDerived="true" subsettedProperty="8386 8316" type="8400" class="8388" association="9290" aggregation="composite" isDerivedUnion="true" opposite="8384" isReadOnly="true" isOrdered="false" isUnique="true" name="ownedMember" xmi:type="Property">
              <upperValue xmi:id="10029" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9388" annotatedElement="8385" body="Redefines the corresponding property of Abstractions::Namespaces::Namespace." xmi:type="Comment" />
              <lowerValue xmi:id="10030" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8386" visibility="public" isDerived="true" type="8400" class="8388" association="8396" isDerivedUnion="true" opposite="8387" isReadOnly="true" isUnique="true" isOrdered="false" name="member" xmi:type="Property">
              <upperValue xmi:id="10023" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9387" annotatedElement="8386" body="Redefines the corresponding property of Abstractions::Namespaces::Namespace." xmi:type="Comment" />
              <lowerValue xmi:id="10024" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9287" visibility="public" isDerived="false" subsettedProperty="8385" type="9291" class="8388" association="9289" aggregation="composite" isDerivedUnion="false" opposite="9288" isReadOnly="false" isUnique="true" isOrdered="false" name="ownedRule" xmi:type="Property">
              <upperValue xmi:id="10157" value="*" xmi:type="LiteralString" />
              <lowerValue xmi:id="10158" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9359" isQuery="true" visibility="public" upper="1" lower="1" class="8388" isOrdered="false" isUnique="true" name="importedMember" xmi:type="Operation">
              <formalParameter xmi:id="9361" direction="return" type="8398" isOrdered="false" isUnique="true" operation="9359" xmi:type="Parameter">
                <upperValue xmi:id="10159" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10160" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9362" namespace="9359" name="spec" constrainedElement="9359 8393" xmi:type="Constraint">
                <specification xmi:id="9363" language="OCL" body="result = self.importMembers(self.elementImport.importedElement.asSet()-&gt;union(self.packageImport.importedPackage-&gt;collect(p | p.visibleMembers())))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9360" annotatedElement="9359" body="The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9364" isQuery="true" visibility="public" upper="1" lower="1" class="8388" isOrdered="false" isUnique="true" name="getNamesOfMember" xmi:type="Operation">
              <formalParameter xmi:id="9366" direction="return" type="8295" isOrdered="false" isUnique="true" operation="9364" xmi:type="Parameter">
                <upperValue xmi:id="10162" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10163" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9367" direction="in" type="8400" isOrdered="false" isUnique="true" name="element" operation="9364" xmi:type="Parameter">
                <upperValue xmi:id="10164" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10165" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9368" namespace="9364" name="spec" constrainedElement="9364" xmi:type="Constraint">
                <specification xmi:id="9369" language="OCL" body="result = if self.ownedMember-&gt;includes(element)&#xA;then Set{}-&gt;include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport-&gt;select(ei | ei.importedElement = element) in&#xA;  if elementImports-&gt;notEmpty()&#xA;  then elementImports-&gt;collect(el | el.getName())&#xA;  else self.packageImport-&gt;select(pi | pi.importedPackage.visibleMembers()-&gt;includes(element))-&gt;collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9365" annotatedElement="9364" body="The query getNamesOfMember() is overridden to take account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9370" isQuery="true" visibility="public" upper="1" lower="1" class="8388" isOrdered="false" isUnique="true" name="importMembers" xmi:type="Operation">
              <formalParameter xmi:id="9372" direction="return" type="8398" isOrdered="false" isUnique="true" operation="9370" xmi:type="Parameter">
                <upperValue xmi:id="10167" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10168" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9373" direction="in" type="8398" isOrdered="false" isUnique="true" name="imps" operation="9370" xmi:type="Parameter">
                <upperValue xmi:id="10169" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10170" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9374" namespace="9370" name="spec" constrainedElement="9370" xmi:type="Constraint">
                <specification xmi:id="9375" language="OCL" body="result = self.excludeCollisions(imps)-&gt;select(imp | self.ownedMember-&gt;forAll(mem | mem.imp.isDistinguishableFrom(mem, self)))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9371" annotatedElement="9370" body="The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9376" isQuery="true" visibility="public" upper="1" lower="1" class="8388" isOrdered="false" isUnique="true" name="excludeCollisions" xmi:type="Operation">
              <formalParameter xmi:id="9378" direction="return" type="8398" isOrdered="false" isUnique="true" operation="9376" xmi:type="Parameter">
                <upperValue xmi:id="10172" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10173" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9379" direction="in" type="8398" isOrdered="false" isUnique="true" name="imps" operation="9376" xmi:type="Parameter">
                <upperValue xmi:id="10174" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10175" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9380" namespace="9376" name="spec" constrainedElement="9376" xmi:type="Constraint">
                <specification xmi:id="9381" language="OCL" body="result = imps-&gt;reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9377" annotatedElement="9376" body="The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9382" isQuery="true" visibility="public" upper="1" lower="1" class="8388" isOrdered="false" isUnique="true" name="membersAreDistinguishable" xmi:type="Operation">
              <formalParameter xmi:id="9384" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9382" xmi:type="Parameter">
                <upperValue xmi:id="10177" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10178" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9385" namespace="9382" name="spec" constrainedElement="9382" xmi:type="Constraint">
                <specification xmi:id="9386" language="OCL" body="result = self.member-&gt;forAll( memb |&#xA;&#x9;self.member-&gt;excluding(memb)-&gt;forAll(other |&#xA;&#x9;&#x9;memb.isDistinguishableFrom(other, self)))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9383" annotatedElement="9382" body="The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10161" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10166" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10171" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10176" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10179" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10181" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10449" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10551" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="10567" general="8400" xmi:type="Generalization" />
            <generalization xmi:id="11140" general="8400" xmi:type="Generalization" />
            <ownedComment xmi:id="8389" annotatedElement="8388" body="A namespace has the ability to import either individial members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8377" visibility="public" isAbstract="false" name="Package" package="8320" superClass="8398 8388" xmi:type="Class">
            <ownedRule xmi:id="8379" namespace="8377" name="elements_public_or_private" constrainedElement="8377" xmi:type="Constraint">
              <ownedComment xmi:id="8380" annotatedElement="8379" body="If an element that is owned by a package has visibility, it is public or private." xmi:type="Comment" />
              <specification xmi:id="8381" language="OCL" body="self.ownedElements-&gt;forAll(e | e.visibility-&gt;notEmpty() implies e.visbility = #public or e.visibility = #private)" xmi:type="OpaqueExpression" />
            </ownedRule>
            <ownedAttribute xmi:id="8382" visibility="public" isDerived="false" subsettedProperty="8385" type="8398" class="8377" association="9321" aggregation="composite" isDerivedUnion="false" opposite="8383" isReadOnly="false" isOrdered="false" isUnique="true" name="packagedElement" xmi:type="Property">
              <upperValue xmi:id="10295" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9390" annotatedElement="8382" body="Specifies the packageable elements that are owned by this Package." xmi:type="Comment" />
              <lowerValue xmi:id="10296" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9318" visibility="public" isDerived="true" subsettedProperty="8382" type="9315" class="8377" association="9320" aggregation="composite" isDerivedUnion="false" opposite="9317" isReadOnly="false" isOrdered="false" isUnique="true" name="ownedType" xmi:type="Property">
              <upperValue xmi:id="10549" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9319" annotatedElement="9318" body="References the packaged elements that are Types." xmi:type="Comment" />
              <lowerValue xmi:id="10550" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9391" visibility="public" isDerived="true" subsettedProperty="8382" type="8377" class="8377" association="9394" aggregation="composite" isDerivedUnion="false" opposite="9392" isReadOnly="false" isOrdered="false" isUnique="true" name="nestedPackage" xmi:type="Property">
              <upperValue xmi:id="10385" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="9395" annotatedElement="9391" body="References the packaged elements that are Packages." xmi:type="Comment" />
              <lowerValue xmi:id="10386" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="9392" visibility="public" isDerived="false" subsettedProperty="8384" type="8377" class="8377" association="9394" isDerivedUnion="false" opposite="9391" isReadOnly="false" isOrdered="false" isUnique="true" name="nestingPackage" xmi:type="Property">
              <upperValue xmi:id="10387" value="1" xmi:type="LiteralString" />
              <ownedComment xmi:id="9393" annotatedElement="9392" body="References the owning package of a package." xmi:type="Comment" />
              <lowerValue xmi:id="10388" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedAttribute xmi:id="8324" visibility="public" isDerived="false" subsettedProperty="8316" type="8321" class="8377" association="8326" aggregation="composite" isDerivedUnion="false" opposite="8323" isReadOnly="false" isOrdered="false" isUnique="true" name="packageMerge" xmi:type="Property">
              <upperValue xmi:id="10487" value="*" xmi:type="LiteralString" />
              <ownedComment xmi:id="8325" annotatedElement="8324" body="References the PackageMerges that are owned by this Package." xmi:type="Comment" />
              <lowerValue xmi:id="10488" value="0" xmi:type="LiteralString" />
            </ownedAttribute>
            <ownedOperation xmi:id="9396" isQuery="true" visibility="public" redefinedOperation="8367" upper="1" lower="1" class="8377" isOrdered="false" isUnique="true" name="mustBeOwned" xmi:type="Operation">
              <formalParameter xmi:id="9398" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9396" xmi:type="Parameter">
                <upperValue xmi:id="10552" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10553" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9399" namespace="9396" name="spec" constrainedElement="9396" xmi:type="Constraint">
                <specification xmi:id="9400" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9397" annotatedElement="9396" body="The query mustBeOwned() indicates whether elements of this type must have an owner." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9401" isQuery="true" visibility="public" upper="1" lower="1" class="8377" isOrdered="false" isUnique="true" name="visibleMembers" xmi:type="Operation">
              <formalParameter xmi:id="9403" direction="return" type="8398" isOrdered="false" isUnique="true" operation="9401" xmi:type="Parameter">
                <upperValue xmi:id="10556" value="*" xmi:type="LiteralString" />
                <lowerValue xmi:id="10557" value="0" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9404" namespace="9401" name="spec" constrainedElement="9401" xmi:type="Constraint">
                <specification xmi:id="9405" language="OCL" body="result = member-&gt;select( m | self.makesVisible(m))" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <ownedComment xmi:id="9402" annotatedElement="9401" body="The query visibleMembers() defines which members of a Package can be accessed outside it." xmi:type="Comment" />
            </ownedOperation>
            <ownedOperation xmi:id="9406" isQuery="true" visibility="public" upper="1" lower="1" class="8377" isOrdered="false" isUnique="true" name="makesVisible" xmi:type="Operation">
              <formalParameter xmi:id="9408" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9406" xmi:type="Parameter">
                <upperValue xmi:id="10560" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10561" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <formalParameter xmi:id="9409" direction="in" type="8400" isOrdered="false" isUnique="true" name="el" operation="9406" xmi:type="Parameter">
                <upperValue xmi:id="10562" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10563" value="1" xmi:type="LiteralString" />
              </formalParameter>
              <bodyCondition xmi:id="9412" namespace="9406" name="spec" constrainedElement="9406" xmi:type="Constraint">
                <specification xmi:id="9413" language="OCL" body="result = (ownedMember-&gt;includes(el)) or&#xA;   (elementImport-&gt;&#xA;      select(ei|ei.visibility = #public)-&gt;&#xA;         collect(ei|ei.importedElement)-&gt;includes(el)) or&#xA;   (packageImport-&gt;&#xA;      select(pi|pi.visibility = #public)-&gt;&#xA;        collect(pi|&#xA;           pi.importedPackage.member-&gt;includes(el))-&gt;notEmpty())" xmi:type="OpaqueExpression" />
              </bodyCondition>
              <precondition xmi:id="9410" namespace="9406" constrainedElement="9406" xmi:type="Constraint">
                <specification xmi:id="9411" language="OCL" body="self.member-&gt;includes(el)" xmi:type="OpaqueExpression" />
              </precondition>
              <ownedComment xmi:id="9407" annotatedElement="9406" body="The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible." xmi:type="Comment" />
            </ownedOperation>
            <generalization xmi:id="10554" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10555" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10558" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10559" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10564" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10565" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="10568" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="10569" general="8388" xmi:type="Generalization" />
            <generalization xmi:id="11124" general="8398" xmi:type="Generalization" />
            <generalization xmi:id="11125" general="8388" xmi:type="Generalization" />
            <ownedComment xmi:id="8378" annotatedElement="8377" body="A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages. In addition a package can be merged with other packages." xmi:type="Comment" />
          </ownedMember>
        </nestedPackage>
        <nestedPackage xmi:id="8438" visibility="public" name="Abstractions" nestingPackage="8301" xmi:type="Package">
          <packageImport xmi:id="8440" importingNamespace="8438" visibility="public" importedPackage="8290" xmi:type="PackageImport" />
          <nestedPackage xmi:id="8443" visibility="public" name="TypedElements" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8561" importingNamespace="8443" visibility="public" importedPackage="8447" xmi:type="PackageImport" />
            <ownedMember xmi:id="8444" visibility="public" isAbstract="true" name="Type" package="8443" superClass="8446" xmi:type="Class">
              <ownedOperation xmi:id="8549" isQuery="true" visibility="public" upper="1" lower="1" class="8444" isOrdered="false" isUnique="true" name="conformsTo" xmi:type="Operation">
                <formalParameter xmi:id="8551" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8549" xmi:type="Parameter">
                  <upperValue xmi:id="10690" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10691" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8552" direction="in" type="8444" isOrdered="false" isUnique="true" name="other" operation="8549" xmi:type="Parameter">
                  <upperValue xmi:id="10692" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10693" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8553" namespace="8549" name="spec" constrainedElement="8549" xmi:type="Constraint">
                  <specification xmi:id="8554" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8550" annotatedElement="8549" body="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10694" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10747" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="11099" general="8446" xmi:type="Generalization" />
              <ownedComment xmi:id="8445" annotatedElement="8444" body="A type serves as a constraint on the range of values represented by a typed element. Type is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8555" visibility="public" isDerived="false" memberEnd="8556" isAbstract="false" name="A_type_typedElement" package="8443" xmi:type="Association">
              <ownedEnd xmi:id="8557" owningAssociation="8555" visibility="public" isDerived="false" type="8558" isDerivedUnion="false" opposite="8556" isReadOnly="false" isUnique="true" isOrdered="false" name="typedElement" xmi:type="Property">
                <upperValue xmi:id="10750" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10751" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8558" visibility="public" isAbstract="true" name="TypedElement" package="8443" superClass="8446" xmi:type="Class">
              <ownedAttribute xmi:id="8556" visibility="public" isDerived="false" type="8444" class="8558" association="8555" isDerivedUnion="false" opposite="8557" isReadOnly="false" isUnique="true" isOrdered="false" name="type" xmi:type="Property">
                <upperValue xmi:id="10748" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8560" annotatedElement="8556" body="The type of the TypedElement." xmi:type="Comment" />
                <lowerValue xmi:id="10749" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10753" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10759" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10786" general="8446" xmi:type="Generalization" />
              <ownedComment xmi:id="8559" annotatedElement="8558" body="A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8563" visibility="public" name="BehavioralFeatures" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8596" importingNamespace="8563" visibility="public" importedPackage="8570" xmi:type="PackageImport" />
            <packageImport xmi:id="8597" importingNamespace="8563" visibility="public" importedPackage="8443" xmi:type="PackageImport" />
            <ownedMember xmi:id="8564" visibility="public" isDerived="false" memberEnd="8565" isAbstract="false" name="A_parameter_behavioralFeature" general="8448" package="8563" xmi:type="Association">
              <ownedEnd xmi:id="8566" owningAssociation="8564" visibility="public" isDerived="false" type="8567" isDerivedUnion="false" opposite="8565" isReadOnly="false" isUnique="true" isOrdered="false" name="behavioralFeature" xmi:type="Property">
                <upperValue xmi:id="10756" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10757" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8594" visibility="public" isAbstract="true" name="Parameter" package="8563" superClass="8446 8558" xmi:type="Class">
              <generalization xmi:id="10760" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10761" general="8558" xmi:type="Generalization" />
              <ownedComment xmi:id="8595" annotatedElement="8594" body="Parameter is an abstract metaclass specializing TypedElement and NamedElement." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8567" visibility="public" isAbstract="true" name="BehavioralFeature" package="8563" superClass="8569 8451" xmi:type="Class">
              <ownedAttribute xmi:id="8565" visibility="public" isDerived="true" subsettedProperty="8449" type="8594" class="8567" association="8564" isDerivedUnion="true" opposite="8566" isReadOnly="true" isOrdered="true" isUnique="true" name="parameter" xmi:type="Property">
                <upperValue xmi:id="10754" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8593" annotatedElement="8565" body="Specifies the parameters of the BehavioralFeature." xmi:type="Comment" />
                <lowerValue xmi:id="10755" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8586" isQuery="true" visibility="public" redefinedOperation="8532" upper="1" lower="1" class="8567" isOrdered="false" isUnique="true" name="isDistinguishableFrom" xmi:type="Operation">
                <formalParameter xmi:id="8588" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8586" xmi:type="Parameter">
                  <upperValue xmi:id="10762" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10763" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8589" direction="in" type="8446" isOrdered="false" isUnique="true" name="n" operation="8586" xmi:type="Parameter">
                  <upperValue xmi:id="10764" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10765" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8590" direction="in" type="8451" isOrdered="false" isUnique="true" name="ns" operation="8586" xmi:type="Parameter">
                  <upperValue xmi:id="10766" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10767" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8591" namespace="8586" name="spec" constrainedElement="8586" xmi:type="Constraint">
                  <specification xmi:id="8592" language="OCL" body="result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)-&gt;intersection(ns.getNamesOfMember(n))-&gt;notEmpty()&#xA;  then Set{}-&gt;including(self)-&gt;including(n)-&gt;isUnique( bf | bf.parameter-&gt;collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8587" annotatedElement="8586" body="The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10768" general="8569" xmi:type="Generalization" />
              <generalization xmi:id="10769" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10783" general="8569" xmi:type="Generalization" />
              <generalization xmi:id="10784" general="8451" xmi:type="Generalization" />
              <ownedComment xmi:id="8568" annotatedElement="8567" body="A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8598" visibility="public" name="StructuralFeatures" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8601" importingNamespace="8598" visibility="public" importedPackage="8570" xmi:type="PackageImport" />
            <packageImport xmi:id="8602" importingNamespace="8598" visibility="public" importedPackage="8443" xmi:type="PackageImport" />
            <ownedMember xmi:id="8599" visibility="public" isAbstract="true" name="StructuralFeature" package="8598" superClass="8569 8558" xmi:type="Class">
              <generalization xmi:id="10787" general="8569" xmi:type="Generalization" />
              <generalization xmi:id="10788" general="8558" xmi:type="Generalization" />
              <ownedComment xmi:id="8600" annotatedElement="8599" body="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier. Structural feature is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8476" visibility="public" name="Comments" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8481" importingNamespace="8476" visibility="public" importedPackage="8462" xmi:type="PackageImport" />
            <ownedMember xmi:id="8477" visibility="public" isDerived="false" memberEnd="8478" isAbstract="false" name="A_annotatedElement_comment" package="8476" xmi:type="Association">
              <ownedEnd xmi:id="8479" owningAssociation="8477" visibility="public" isDerived="false" type="8475" isDerivedUnion="false" opposite="8478" isReadOnly="false" isUnique="true" isOrdered="false" name="comment" xmi:type="Property">
                <upperValue xmi:id="10791" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10792" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8475" visibility="public" isAbstract="false" name="Comment" package="8476" superClass="8463" xmi:type="Class">
              <ownedAttribute xmi:id="8483" visibility="public" isDerived="false" type="8295" class="8475" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="body" xmi:type="Property">
                <upperValue xmi:id="10793" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8484" annotatedElement="8483" body="Specifies a string that is the comment" xmi:type="Comment" />
                <lowerValue xmi:id="10794" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8478" visibility="public" isDerived="false" type="8463" class="8475" association="8477" isDerivedUnion="false" opposite="8479" isReadOnly="false" isUnique="true" isOrdered="false" name="annotatedElement" xmi:type="Property">
                <upperValue xmi:id="10789" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8480" annotatedElement="8478" body="References the Element(s) being commented." xmi:type="Comment" />
                <lowerValue xmi:id="10790" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10795" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="8482" annotatedElement="8475" body="A comment gives the ability to attach various remarks to elements. A comment carries no semantic force, but may contain information that is useful to a modeler. A comment may be owned by any element." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8462" visibility="public" name="Ownerships" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8495" importingNamespace="8462" visibility="public" importedPackage="8496" xmi:type="PackageImport" />
            <ownedMember xmi:id="8461" visibility="public" isDerived="false" memberEnd="8459 8458" isAbstract="false" name="A_ownedElement_owner" package="8462" xmi:type="Association" />
            <ownedMember xmi:id="8463" visibility="public" isAbstract="true" name="Element" package="8462" xmi:type="Class">
              <ownedRule xmi:id="8465" namespace="8463" name="not_own_self" constrainedElement="8463" xmi:type="Constraint">
                <ownedComment xmi:id="8466" annotatedElement="8465" body="An element may not directly or indirectly own itself." xmi:type="Comment" />
                <specification xmi:id="8467" language="OCL" body="not self.allOwnedElements()-&gt;includes(self)" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8468" namespace="8463" name="has_owner" constrainedElement="8463" xmi:type="Constraint">
                <ownedComment xmi:id="8469" annotatedElement="8468" body="Elements that must be owned must have an owner." xmi:type="Comment" />
                <specification xmi:id="8470" language="OCL" body="self.mustBeOwned() implies owner-&gt;notEmpty()" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8459" visibility="public" isDerived="true" type="8463" class="8463" association="8461" aggregation="composite" isDerivedUnion="true" opposite="8458" isReadOnly="true" isUnique="true" isOrdered="false" name="ownedElement" xmi:type="Property">
                <upperValue xmi:id="10723" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8460" annotatedElement="8459" body="The Elements owned by this element." xmi:type="Comment" />
                <lowerValue xmi:id="10724" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8458" visibility="public" isDerived="true" type="8463" class="8463" association="8461" isDerivedUnion="true" opposite="8459" isReadOnly="true" isUnique="true" isOrdered="false" name="owner" xmi:type="Property">
                <upperValue xmi:id="10725" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8499" annotatedElement="8458" body="The Element that owns this element." xmi:type="Comment" />
                <lowerValue xmi:id="10726" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8471" visibility="public" isDerived="false" subsettedProperty="8459" type="8475" class="8463" association="8473" aggregation="composite" isDerivedUnion="false" opposite="8472" isReadOnly="false" isOrdered="false" isUnique="true" name="ownedComment" xmi:type="Property">
                <upperValue xmi:id="10727" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8474" annotatedElement="8471" body="The Comments owned by this element." xmi:type="Comment" />
                <lowerValue xmi:id="10728" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8485" isQuery="true" visibility="public" upper="1" lower="1" class="8463" isOrdered="false" isUnique="true" name="allOwnedElements" xmi:type="Operation">
                <formalParameter xmi:id="8487" direction="return" type="8463" isOrdered="false" isUnique="true" operation="8485" xmi:type="Parameter">
                  <upperValue xmi:id="10729" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10730" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8488" namespace="8485" name="spec" constrainedElement="8485" xmi:type="Constraint">
                  <specification xmi:id="8489" language="OCL" body="result = ownedElement-&gt;union(ownedElement-&gt;collect(e | e.allOwnedElements()))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8486" annotatedElement="8485" body="The query allOwnedElements() gives all of the direct and indirect owned elements of an element." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8490" isQuery="true" visibility="public" upper="1" lower="1" class="8463" isOrdered="false" isUnique="true" name="mustBeOwned" xmi:type="Operation">
                <formalParameter xmi:id="8492" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8490" xmi:type="Parameter">
                  <upperValue xmi:id="10731" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10732" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8493" namespace="8490" name="spec" constrainedElement="8490" xmi:type="Constraint">
                  <specification xmi:id="8494" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8491" annotatedElement="8490" body="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation." xmi:type="Comment" />
              </ownedOperation>
              <ownedComment xmi:id="8464" annotatedElement="8463" body="Element has a derived composition association to itself to support the general capability for elements to own other elements." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8473" visibility="public" isDerived="false" memberEnd="8471" isAbstract="false" name="A_ownedComment_owningElement" general="8461" package="8462" xmi:type="Association">
              <ownedEnd xmi:id="8472" owningAssociation="8473" visibility="public" isDerived="false" subsettedProperty="8458" type="8463" isDerivedUnion="false" opposite="8471" isReadOnly="false" isUnique="true" isOrdered="false" name="owningElement" xmi:type="Property">
                <upperValue xmi:id="10733" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10734" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8603" visibility="public" name="Instances" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8693" importingNamespace="8603" visibility="public" importedPackage="8630" xmi:type="PackageImport" />
            <packageImport xmi:id="8694" importingNamespace="8603" visibility="public" importedPackage="8598" xmi:type="PackageImport" />
            <ownedMember xmi:id="8604" visibility="public" isDerived="false" memberEnd="8605" isAbstract="false" name="A_definingFeature_slot" package="8603" xmi:type="Association">
              <ownedEnd xmi:id="8606" owningAssociation="8604" visibility="public" isDerived="false" type="8607" isDerivedUnion="false" opposite="8605" isReadOnly="false" isUnique="true" isOrdered="false" name="slot" xmi:type="Property">
                <upperValue xmi:id="10798" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10799" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8612" visibility="public" isDerived="false" memberEnd="8610 8609" isAbstract="false" name="A_slot_owningInstance" general="8461" package="8603" xmi:type="Association" />
            <ownedMember xmi:id="8613" visibility="public" isAbstract="false" name="InstanceSpecification" package="8603" superClass="8446" xmi:type="Class">
              <ownedRule xmi:id="8615" namespace="8613" name="slots_are_defined" constrainedElement="8613" xmi:type="Constraint">
                <ownedComment xmi:id="8616" annotatedElement="8615" body="The defining feature of each slot is a structural feature (directly or inherited) of a classifier of the instance specification." xmi:type="Comment" />
                <specification xmi:id="8617" language="OCL" body="slot-&gt;forAll(s |&#xA;classifier-&gt;exists(c | c.allFeatures()-&gt;includes(s.definingFeature))&#xA;)&#xA;" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8618" namespace="8613" name="no_duplicate_slots" constrainedElement="8613" xmi:type="Constraint">
                <ownedComment xmi:id="8619" annotatedElement="8618" body="One structural feature (including the same feature inherited from multiple classifiers) is the defining feature of at most one slot in an instance specification." xmi:type="Comment" />
                <specification xmi:id="8620" language="OCL" body="classifier-&gt;forAll(c |&#xA;(c.allFeatures()-&gt;forAll(f | slot-&gt;select(s | s.definingFeature = f)-&gt;size() &lt;= 1)&#xA;)&#xA;" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8610" visibility="public" isDerived="false" subsettedProperty="8459" type="8607" class="8613" association="8612" aggregation="composite" isDerivedUnion="false" opposite="8609" isReadOnly="false" isOrdered="false" isUnique="true" name="slot" xmi:type="Property">
                <upperValue xmi:id="10800" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8611" annotatedElement="8610" body="A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description." xmi:type="Comment" />
                <lowerValue xmi:id="10801" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8621" visibility="public" isDerived="false" type="8571" class="8613" association="8623" isDerivedUnion="false" opposite="8622" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
                <upperValue xmi:id="10804" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8624" annotatedElement="8621" body="The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them." xmi:type="Comment" />
                <lowerValue xmi:id="10805" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8625" visibility="public" isDerived="false" subsettedProperty="8459" type="8629" class="8613" association="8627" aggregation="composite" isDerivedUnion="false" opposite="8626" isReadOnly="false" isOrdered="false" isUnique="true" name="specification" xmi:type="Property">
                <upperValue xmi:id="10806" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8628" annotatedElement="8625" body="A specification of how to compute, derive, or construct the instance." xmi:type="Comment" />
                <lowerValue xmi:id="10807" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10809" general="8446" xmi:type="Generalization" />
              <ownedComment xmi:id="8614" annotatedElement="8613" body="An instance specification specifies existence of an entity in a modeled system and completely or partially describes the entity. The description includes:&#xA;&#xA;  - Classification of the entity by one or more classifiers of which the entity is an instance. If the only classifier specified is abstract, then the instance specification only partially describes the entity.&#xA;&#xA;  - The kind of instance, based on its classifier or classifiers: for example, an instance specification whose classifier is a class describes an object of that class, while an instance specification whose classifier is an association describes a link of that association.&#xA;&#xA;  - Specification of values of structural features of the entity. Not all structural features of all classifiers of the instance specification need be represented by slots, in which case the instance specification is a partial description.&#xA;&#xA;  - Specification of how to compute, derive or construct the instance (optional). InstanceSpecification is a concrete class." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8627" visibility="public" isDerived="false" memberEnd="8625" isAbstract="false" name="A_specification_owningInstanceSpec" general="8461" package="8603" xmi:type="Association">
              <ownedEnd xmi:id="8626" owningAssociation="8627" visibility="public" isDerived="false" subsettedProperty="8458" type="8613" isDerivedUnion="false" opposite="8625" isReadOnly="false" isUnique="true" isOrdered="false" name="owningInstanceSpec" xmi:type="Property">
                <upperValue xmi:id="10810" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10811" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8623" visibility="public" isDerived="false" memberEnd="8621" isAbstract="false" name="A_classifier_instanceSpecification" package="8603" xmi:type="Association">
              <ownedEnd xmi:id="8622" owningAssociation="8623" visibility="public" isDerived="false" type="8613" isDerivedUnion="false" opposite="8621" isReadOnly="false" isUnique="true" isOrdered="false" name="instanceSpecification" xmi:type="Property">
                <upperValue xmi:id="10812" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10813" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8687" visibility="public" isAbstract="false" name="InstanceValue" package="8603" superClass="8629" xmi:type="Class">
              <ownedAttribute xmi:id="8689" visibility="public" isDerived="false" type="8613" class="8687" association="8691" isDerivedUnion="false" opposite="8690" isReadOnly="false" isUnique="true" isOrdered="false" name="instance" xmi:type="Property">
                <upperValue xmi:id="10814" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8692" annotatedElement="8689" body="The instance that is the specified value." xmi:type="Comment" />
                <lowerValue xmi:id="10815" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10854" general="8629" xmi:type="Generalization" />
              <ownedComment xmi:id="8688" annotatedElement="8687" body="An instance value specifies the value modeled by an instance specification." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8607" visibility="public" isAbstract="false" name="Slot" package="8603" superClass="8463" xmi:type="Class">
              <ownedAttribute xmi:id="8609" visibility="public" isDerived="false" subsettedProperty="8458" type="8613" class="8607" association="8612" isDerivedUnion="false" opposite="8610" isReadOnly="false" isOrdered="false" isUnique="true" name="owningInstance" xmi:type="Property">
                <upperValue xmi:id="10802" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8681" annotatedElement="8609" body="The instance specification that owns this slot." xmi:type="Comment" />
                <lowerValue xmi:id="10803" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8682" visibility="public" isDerived="false" subsettedProperty="8459" type="8629" class="8607" association="8684" aggregation="composite" isDerivedUnion="false" opposite="8683" isReadOnly="false" isOrdered="true" isUnique="true" name="value" xmi:type="Property">
                <upperValue xmi:id="10855" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8685" annotatedElement="8682" body="The value or values corresponding to the defining feature for the owning instance specification. This is an ordered association." xmi:type="Comment" />
                <lowerValue xmi:id="10856" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8605" visibility="public" isDerived="false" type="8599" class="8607" association="8604" isDerivedUnion="false" opposite="8606" isReadOnly="false" isUnique="true" isOrdered="false" name="definingFeature" xmi:type="Property">
                <upperValue xmi:id="10796" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8686" annotatedElement="8605" body="The structural feature that specifies the values that may be held by the slot." xmi:type="Comment" />
                <lowerValue xmi:id="10797" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10857" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="8608" annotatedElement="8607" body="A slot is owned by an instance specification. It specifies the value or values for its defining feature, which must be a structural feature of a classifier of the instance specification owning the slot." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8684" visibility="public" isDerived="false" memberEnd="8682" isAbstract="false" name="A_value_owningSlot" general="8461" package="8603" xmi:type="Association">
              <ownedEnd xmi:id="8683" owningAssociation="8684" visibility="public" isDerived="false" subsettedProperty="8458" type="8607" isDerivedUnion="false" opposite="8682" isReadOnly="false" isUnique="true" isOrdered="false" name="owningSlot" xmi:type="Property">
                <upperValue xmi:id="10858" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10859" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8691" visibility="public" isDerived="false" memberEnd="8689" isAbstract="false" name="A_instance_instanceValue" package="8603" xmi:type="Association">
              <ownedEnd xmi:id="8690" owningAssociation="8691" visibility="public" isDerived="false" type="8687" isDerivedUnion="false" opposite="8689" isReadOnly="false" isUnique="true" isOrdered="false" name="instanceValue" xmi:type="Property">
                <upperValue xmi:id="10860" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10861" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8496" visibility="public" name="Elements" nestingPackage="8438" xmi:type="Package">
            <ownedMember xmi:id="8497" visibility="public" isAbstract="true" name="Element" package="8496" xmi:type="Class">
              <ownedComment xmi:id="8498" annotatedElement="8497" body="Element is an abstract metaclass with no superclass. It is used as the common superclass for all metaclasses in the infrastructure library." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8430" visibility="public" name="Visibilities" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9201" importingNamespace="8430" visibility="public" importedPackage="8447" xmi:type="PackageImport" />
            <ownedMember xmi:id="8431" visibility="public" isAbstract="true" name="NamedElement" package="8430" xmi:type="Class">
              <ownedRule xmi:id="8433" namespace="8431" name="visibility_needs_ownership" constrainedElement="8431" xmi:type="Constraint">
                <ownedComment xmi:id="8434" annotatedElement="8433" body="The query bestVisibility() examines a set of VisibilityKinds, and returns public as the preferred visibility." xmi:type="Comment" />
                <specification xmi:id="8435" language="OCL" body="namespace-&gt;isEmpty() implies visibility-&gt;isEmpty()" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8436" visibility="public" isDerived="false" type="8429" class="8431" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="visibility" xmi:type="Property">
                <upperValue xmi:id="10862" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8437" annotatedElement="8436" body="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility." xmi:type="Comment" />
                <lowerValue xmi:id="10863" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedComment xmi:id="8432" annotatedElement="8431" body="NamedElement has a visibility attribute." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8429" visibility="public" isAbstract="false" name="VisibilityKind" package="8430" xmi:type="Enumeration">
              <ownedLiteral xmi:id="9203" enumeration="8429" name="public" xmi:type="EnumerationLiteral">
                <ownedComment xmi:id="9204" annotatedElement="9203" body="A public element is visible to all elements that can access the contents of the namespace that owns it." xmi:type="Comment" />
              </ownedLiteral>
              <ownedLiteral xmi:id="9205" enumeration="8429" name="private" xmi:type="EnumerationLiteral">
                <ownedComment xmi:id="9206" annotatedElement="9205" body="A private element is only visible inside the namespace that owns it." xmi:type="Comment" />
              </ownedLiteral>
              <ownedLiteral xmi:id="9207" enumeration="8429" name="protected" xmi:type="EnumerationLiteral">
                <ownedComment xmi:id="9208" annotatedElement="9207" body="A protected element is visible to elements that have a generalization relationship to the namespace that owns it." xmi:type="Comment" />
              </ownedLiteral>
              <ownedLiteral xmi:id="9209" enumeration="8429" name="package" xmi:type="EnumerationLiteral">
                <ownedComment xmi:id="9210" annotatedElement="9209" body="A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible." xmi:type="Comment" />
              </ownedLiteral>
              <ownedOperation xmi:id="9211" isQuery="true" visibility="public" upper="1" lower="1" datatype="8429" isOrdered="false" isUnique="true" name="bestVisibility" xmi:type="Operation">
                <formalParameter xmi:id="9213" direction="return" type="8429" isOrdered="false" isUnique="true" operation="9211" xmi:type="Parameter">
                  <upperValue xmi:id="10864" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10865" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="9214" direction="in" type="8429" isOrdered="false" isUnique="true" name="vis" operation="9211" xmi:type="Parameter">
                  <upperValue xmi:id="10866" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10867" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9215" namespace="9211" name="spec" constrainedElement="9211" xmi:type="Constraint">
                  <specification xmi:id="9216" language="OCL" body="result = if vis-&gt;includes(#public) then #public else #private endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9212" annotatedElement="9211" body="The query bestVisibility() examines a set of VisibilityKinds, and returns public as the preferred visibility." xmi:type="Comment" />
              </ownedOperation>
              <ownedComment xmi:id="9202" annotatedElement="8429" body="VisibilityKind is an enumeration of the following literal values:&#xA;&#xA;  - public&#xA;&#xA;  - private&#xA;&#xA;  - protected&#xA;&#xA;  - package" xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8695" visibility="public" name="Constraints" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8730" importingNamespace="8695" visibility="public" importedPackage="8630" xmi:type="PackageImport" />
            <packageImport xmi:id="8731" importingNamespace="8695" visibility="public" importedPackage="8447" xmi:type="PackageImport" />
            <packageImport xmi:id="8732" importingNamespace="8695" visibility="public" importedPackage="8462" xmi:type="PackageImport" />
            <ownedMember xmi:id="8696" visibility="public" isAbstract="true" name="NamedElement" package="8695" superClass="8463" xmi:type="Class">
              <ownedAttribute xmi:id="8698" visibility="public" isDerived="true" subsettedProperty="8458" type="8702" class="8696" association="8708" isDerivedUnion="true" opposite="8699" isReadOnly="true" isOrdered="false" isUnique="true" name="namespace" xmi:type="Property">
                <upperValue xmi:id="10868" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8729" annotatedElement="8698" body="Specifies the namespace that owns the NamedElement." xmi:type="Comment" />
                <lowerValue xmi:id="10869" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10870" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10879" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10887" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="8697" annotatedElement="8696" body="A named element represents elements that may have a name. The name is used for identification of the named element within the namespace in which it is defined. A named element also has a qualified name that allows it to be unambiguously identified within a hierarchy of nested namespaces. NamedElement is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8709" visibility="public" isDerived="false" memberEnd="8700" isAbstract="false" name="A_member_namespace" package="8695" xmi:type="Association">
              <ownedEnd xmi:id="8701" owningAssociation="8709" visibility="public" isDerived="false" type="8702" isDerivedUnion="false" opposite="8700" isReadOnly="false" isUnique="true" isOrdered="false" name="namespace" xmi:type="Property">
                <upperValue xmi:id="10873" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10874" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8708" visibility="public" isDerived="false" memberEnd="8699 8698" isAbstract="false" name="A_ownedMember_namespace" general="8461 8709" package="8695" xmi:type="Association" />
            <ownedMember xmi:id="8702" visibility="public" isAbstract="true" name="Namespace" package="8695" superClass="8696" xmi:type="Class">
              <ownedAttribute xmi:id="8704" visibility="public" isDerived="false" subsettedProperty="8699" type="8710" class="8702" association="8707" aggregation="composite" isDerivedUnion="false" opposite="8705" isReadOnly="false" isOrdered="false" isUnique="true" name="ownedRule" xmi:type="Property">
                <upperValue xmi:id="10877" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8726" annotatedElement="8704" body="Specifies a set of Constraints owned by this Namespace." xmi:type="Comment" />
                <lowerValue xmi:id="10878" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8699" visibility="public" isDerived="true" subsettedProperty="8459 8700" type="8696" class="8702" association="8708" aggregation="composite" isDerivedUnion="true" opposite="8698" isReadOnly="true" isOrdered="false" isUnique="true" name="ownedMember" xmi:type="Property">
                <upperValue xmi:id="10875" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8728" annotatedElement="8699" body="A collection of NamedElements owned by the Namespace." xmi:type="Comment" />
                <lowerValue xmi:id="10876" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8700" visibility="public" isDerived="true" type="8696" class="8702" association="8709" isDerivedUnion="true" opposite="8701" isReadOnly="true" isUnique="true" isOrdered="false" name="member" xmi:type="Property">
                <upperValue xmi:id="10871" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8727" annotatedElement="8700" body="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance." xmi:type="Comment" />
                <lowerValue xmi:id="10872" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10880" general="8696" xmi:type="Generalization" />
              <ownedComment xmi:id="8703" annotatedElement="8702" body="A namespace can own constraints. The constraint does not necessarily apply to the namespace itself, but may also apply to elements in the namespace." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8710" visibility="public" isAbstract="false" name="Constraint" package="8695" superClass="8696" xmi:type="Class">
              <ownedRule xmi:id="8712" namespace="8710" name="not_apply_to_self" constrainedElement="8710" xmi:type="Constraint">
                <ownedComment xmi:id="8713" annotatedElement="8712" body="A constraint cannot be applied to itself." xmi:type="Comment" />
                <specification xmi:id="8714" language="OCL" body="not constrainedElement-&gt;includes(self)" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8715" namespace="8710" name="value_specification_boolean" constrainedElement="8710" xmi:type="Constraint">
                <ownedComment xmi:id="8716" annotatedElement="8715" body="The value specification for a constraint must evaluate to a Boolean value." xmi:type="Comment" />
                <specification xmi:id="8717" language="OCL" body="self.specification().booleanValue().isOclKindOf(Boolean)" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8705" visibility="public" isDerived="false" subsettedProperty="8698" type="8702" class="8710" association="8707" isDerivedUnion="false" opposite="8704" isReadOnly="false" isOrdered="false" isUnique="true" name="context" xmi:type="Property">
                <upperValue xmi:id="10881" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8706" annotatedElement="8705" body="The Namespace that owns this NamedElement." xmi:type="Comment" />
                <lowerValue xmi:id="10882" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8718" visibility="public" isDerived="false" subsettedProperty="8459" type="8629" class="8710" association="8720" aggregation="composite" isDerivedUnion="false" opposite="8719" isReadOnly="false" isOrdered="false" isUnique="true" name="specification" xmi:type="Property">
                <upperValue xmi:id="10883" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8721" annotatedElement="8718" body="A condition that must be true when evaluated in order for the constraint to be satisfied." xmi:type="Comment" />
                <lowerValue xmi:id="10884" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8722" visibility="public" isDerived="false" type="8463" class="8710" association="8724" isDerivedUnion="false" opposite="8723" isReadOnly="false" isUnique="true" isOrdered="true" name="constrainedElement" xmi:type="Property">
                <upperValue xmi:id="10885" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8725" annotatedElement="8722" body="The ordered set of Elements referenced by this Constraint." xmi:type="Comment" />
                <lowerValue xmi:id="10886" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10888" general="8696" xmi:type="Generalization" />
              <ownedComment xmi:id="8711" annotatedElement="8710" body="Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association &quot;xor&quot; constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.&#xA;&#xA;Constraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to the element. Constraint contains an optional name, although they are commonly unnamed." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8720" visibility="public" isDerived="false" memberEnd="8718" isAbstract="false" name="A_specification_owningConstraint" general="8461" package="8695" xmi:type="Association">
              <ownedEnd xmi:id="8719" owningAssociation="8720" visibility="public" isDerived="false" subsettedProperty="8458" type="8710" isDerivedUnion="false" opposite="8718" isReadOnly="false" isUnique="true" isOrdered="false" name="owningConstraint" xmi:type="Property">
                <upperValue xmi:id="10889" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10890" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8724" visibility="public" isDerived="false" memberEnd="8722" isAbstract="false" name="A_constrainedElement_constraint" package="8695" xmi:type="Association">
              <ownedEnd xmi:id="8723" owningAssociation="8724" visibility="public" isDerived="false" type="8710" isDerivedUnion="false" opposite="8722" isReadOnly="false" isUnique="true" isOrdered="false" name="constraint" xmi:type="Property">
                <upperValue xmi:id="10891" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10892" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8707" visibility="public" isDerived="false" memberEnd="8704 8705" isAbstract="false" name="A_ownedRule_context" general="8708" package="8695" xmi:type="Association" />
          </nestedPackage>
          <nestedPackage xmi:id="8447" visibility="public" name="Namespaces" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8515" importingNamespace="8447" visibility="public" importedPackage="8462" xmi:type="PackageImport" />
            <ownedMember xmi:id="8448" visibility="public" isDerived="false" memberEnd="8449" isAbstract="false" name="A_member_namespace" package="8447" xmi:type="Association">
              <ownedEnd xmi:id="8450" owningAssociation="8448" visibility="public" isDerived="false" type="8451" isDerivedUnion="false" opposite="8449" isReadOnly="false" isUnique="true" isOrdered="false" name="namespace" xmi:type="Property">
                <upperValue xmi:id="10719" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10720" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8501" visibility="public" isDerived="false" memberEnd="8456 8457" isAbstract="false" name="A_ownedMember_namespace" general="8461 8448" package="8447" xmi:type="Association" />
            <ownedMember xmi:id="8446" visibility="public" isAbstract="true" name="NamedElement" package="8447" superClass="8463" xmi:type="Class">
              <ownedRule xmi:id="8517" namespace="8446" name="has_no_qualified_name" constrainedElement="8446" xmi:type="Constraint">
                <ownedComment xmi:id="8518" annotatedElement="8517" body="If there is no name, or one of the containing namespaces has no name, there is no qualified name." xmi:type="Comment" />
                <specification xmi:id="8519" language="OCL" body="(self.name-&gt;isEmpty() or self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;notEmpty())&#xA;&#xA;  implies self.qualifiedName-&gt;isEmpty()" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8520" namespace="8446" name="has_qualified_name" constrainedElement="8446" xmi:type="Constraint">
                <ownedComment xmi:id="8521" annotatedElement="8520" body="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces." xmi:type="Comment" />
                <specification xmi:id="8522" language="OCL" body="(self.name-&gt;notEmpty() and self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()-&gt;iterate( ns : Namespace; result: String = self.name | ns.name-&gt;union(self.separator())-&gt;union(result))" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8523" visibility="public" isDerived="false" type="8295" class="8446" aggregation="composite" isDerivedUnion="false" isID="true" isReadOnly="false" isUnique="true" isOrdered="false" name="name" xmi:type="Property">
                <upperValue xmi:id="10695" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8524" annotatedElement="8523" body="The name of the NamedElement." xmi:type="Comment" />
                <lowerValue xmi:id="10696" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8525" visibility="public" isDerived="true" type="8295" class="8446" aggregation="composite" isDerivedUnion="false" isReadOnly="true" isUnique="true" isOrdered="false" name="qualifiedName" xmi:type="Property">
                <upperValue xmi:id="10697" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8526" annotatedElement="8525" body="A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself." xmi:type="Comment" />
                <lowerValue xmi:id="10698" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8457" visibility="public" isDerived="true" subsettedProperty="8458" type="8451" class="8446" association="8501" isDerivedUnion="true" opposite="8456" isReadOnly="true" isOrdered="false" isUnique="true" name="namespace" xmi:type="Property">
                <upperValue xmi:id="10699" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8500" annotatedElement="8457" body="Specifies the namespace that owns the NamedElement." xmi:type="Comment" />
                <lowerValue xmi:id="10700" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8527" isQuery="true" visibility="public" upper="1" lower="1" class="8446" isOrdered="false" isUnique="true" name="allNamespaces" xmi:type="Operation">
                <formalParameter xmi:id="8529" direction="return" type="8451" isOrdered="true" isUnique="true" operation="8527" xmi:type="Parameter">
                  <upperValue xmi:id="10701" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10702" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8530" namespace="8527" name="spec" constrainedElement="8527" xmi:type="Constraint">
                  <specification xmi:id="8531" language="OCL" body="result = if self.namespace-&gt;isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()-&gt;prepend(self.namespace)&#xA;endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8528" annotatedElement="8527" body="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8532" isQuery="true" visibility="public" upper="1" lower="1" class="8446" isOrdered="false" isUnique="true" name="isDistinguishableFrom" xmi:type="Operation">
                <formalParameter xmi:id="8534" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8532" xmi:type="Parameter">
                  <upperValue xmi:id="10704" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10705" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8535" direction="in" type="8446" isOrdered="false" isUnique="true" name="n" operation="8532" xmi:type="Parameter">
                  <upperValue xmi:id="10706" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10707" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8536" direction="in" type="8451" isOrdered="false" isUnique="true" name="ns" operation="8532" xmi:type="Parameter">
                  <upperValue xmi:id="10708" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10709" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8537" namespace="8532" name="spec" constrainedElement="8532" xmi:type="Constraint">
                  <specification xmi:id="8538" language="OCL" body="result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)-&gt;intersection(ns.getNamesOfMember(n))-&gt;isEmpty()&#xA;else true&#xA;endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8533" annotatedElement="8532" body="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8539" isQuery="true" visibility="public" upper="1" lower="1" class="8446" isOrdered="false" isUnique="true" name="separator" xmi:type="Operation">
                <formalParameter xmi:id="8541" direction="return" type="8295" isOrdered="false" isUnique="true" operation="8539" xmi:type="Parameter">
                  <upperValue xmi:id="10711" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10712" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8542" namespace="8539" name="spec" constrainedElement="8539" xmi:type="Constraint">
                  <specification xmi:id="8543" language="OCL" body="result = '::'" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8540" annotatedElement="8539" body="The query separator() gives the string that is used to separate names when constructing a qualified name." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8544" isQuery="true" visibility="public" upper="1" lower="1" class="8446" isOrdered="false" isUnique="true" name="qualifiedName" xmi:type="Operation">
                <formalParameter xmi:id="8546" direction="return" type="8295" isOrdered="false" isUnique="true" operation="8544" xmi:type="Parameter">
                  <upperValue xmi:id="10714" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10715" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8547" namespace="8544" name="spec" constrainedElement="8544 8525" xmi:type="Constraint">
                  <specification xmi:id="8548" language="OCL" body="result = if self.name-&gt;notEmpty() and self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;isEmpty()&#xA;then &#xA;    self.allNamespaces()-&gt;iterate( ns : Namespace; result: String = self.name | ns.name-&gt;union(self.separator())-&gt;union(result))&#xA;else&#xA;    Set{}&#xA;endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8545" annotatedElement="8544" body="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10703" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10710" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10713" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10716" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10735" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10744" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10746" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10752" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10758" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10780" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10808" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="11025" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="8516" annotatedElement="8446" body="A named element represents elements that may have a name. The name is used for identification of the named element within the namespace in which it is defined. A named element also has a qualified name that allows it to be unambiguously identified within a hierarchy of nested namespaces. NamedElement is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8451" visibility="public" isAbstract="true" name="Namespace" package="8447" superClass="8446" xmi:type="Class">
              <ownedRule xmi:id="8453" namespace="8451" name="members_distinguishable" constrainedElement="8451" xmi:type="Constraint">
                <ownedComment xmi:id="8454" annotatedElement="8453" body="All the members of a Namespace are distinguishable within it." xmi:type="Comment" />
                <specification xmi:id="8455" language="OCL" body="membersAreDistinguishable()" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8456" visibility="public" isDerived="true" subsettedProperty="8459 8449" type="8446" class="8451" association="8501" aggregation="composite" isDerivedUnion="true" opposite="8457" isReadOnly="true" isOrdered="false" isUnique="true" name="ownedMember" xmi:type="Property">
                <upperValue xmi:id="10721" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8502" annotatedElement="8456" body="A collection of NamedElements owned by the Namespace." xmi:type="Comment" />
                <lowerValue xmi:id="10722" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8449" visibility="public" isDerived="true" type="8446" class="8451" association="8448" isDerivedUnion="true" opposite="8450" isReadOnly="true" isUnique="true" isOrdered="false" name="member" xmi:type="Property">
                <upperValue xmi:id="10717" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8514" annotatedElement="8449" body="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance." xmi:type="Comment" />
                <lowerValue xmi:id="10718" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8503" isQuery="true" visibility="public" upper="1" lower="1" class="8451" isOrdered="false" isUnique="true" name="getNamesOfMember" xmi:type="Operation">
                <formalParameter xmi:id="8505" direction="return" type="8295" isOrdered="false" isUnique="true" operation="8503" xmi:type="Parameter">
                  <upperValue xmi:id="10736" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10737" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8506" direction="in" type="8446" isOrdered="false" isUnique="true" name="element" operation="8503" xmi:type="Parameter">
                  <upperValue xmi:id="10738" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10739" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8507" namespace="8503" name="spec" constrainedElement="8503" xmi:type="Constraint">
                  <specification xmi:id="8508" language="OCL" body="result = if member-&gt;includes(element) then Set{}-&gt;including(element.name) else Set{} endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8504" annotatedElement="8503" body="The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. Those semantics are specified by overriding the getNamesOfMember operation. The specification here simply returns a set containing a single name, or the empty set if no name." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8509" isQuery="true" visibility="public" upper="1" lower="1" class="8451" isOrdered="false" isUnique="true" name="membersAreDistinguishable" xmi:type="Operation">
                <formalParameter xmi:id="8511" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8509" xmi:type="Parameter">
                  <upperValue xmi:id="10741" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10742" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8512" namespace="8509" name="spec" constrainedElement="8509" xmi:type="Constraint">
                  <specification xmi:id="8513" language="OCL" body="result = self.member-&gt;forAll( memb |&#xA;self.member-&gt;excluding(memb)-&gt;forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8510" annotatedElement="8509" body="The Boolean query membersAreDistinguishable() determines whether all of the namespaces members are distinguishable within it." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10740" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10743" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10745" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10778" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10782" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10932" general="8446" xmi:type="Generalization" />
              <ownedComment xmi:id="8452" annotatedElement="8451" body="A namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8733" visibility="public" name="Super" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8795" importingNamespace="8733" visibility="public" importedPackage="8570" xmi:type="PackageImport" />
            <ownedMember xmi:id="8734" visibility="public" isDerived="false" memberEnd="8735" isAbstract="false" name="A_general_classifier" package="8733" xmi:type="Association">
              <ownedEnd xmi:id="8736" owningAssociation="8734" visibility="public" isDerived="false" type="8737" isDerivedUnion="false" opposite="8735" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
                <upperValue xmi:id="10895" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10896" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8749" visibility="public" isDerived="false" memberEnd="8747" isAbstract="false" name="A_classifier_inheritedMember" general="8448" package="8733" xmi:type="Association">
              <ownedEnd xmi:id="8748" owningAssociation="8749" visibility="public" isDerived="false" type="8737" redefinedProperty="8450" isDerivedUnion="false" opposite="8747" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
                <upperValue xmi:id="10899" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10900" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8737" visibility="public" isAbstract="true" name="Classifier" package="8733" superClass="8451" xmi:type="Class">
              <ownedRule xmi:id="8739" namespace="8737" name="no_cycles_in_generalization" constrainedElement="8737" xmi:type="Constraint">
                <ownedComment xmi:id="8740" annotatedElement="8739" body="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier." xmi:type="Comment" />
                <specification xmi:id="8741" language="OCL" body="not self.allParents()-&gt;includes(self)" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8742" namespace="8737" name="specialize_type" constrainedElement="8737" xmi:type="Constraint">
                <ownedComment xmi:id="8743" annotatedElement="8742" body="A classifier may only specialize classifiers of a valid type." xmi:type="Comment" />
                <specification xmi:id="8744" language="OCL" body="self.parents()-&gt;forAll(c | self.maySpecializeType(c))" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8745" visibility="public" isDerived="false" type="8297" class="8737" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isAbstract" xmi:type="Property">
                <upperValue xmi:id="10901" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8746" annotatedElement="8745" body="If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships." xmi:type="Comment" />
                <lowerValue xmi:id="10902" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8747" visibility="public" isDerived="true" subsettedProperty="8449" type="8446" class="8737" association="8749" isDerivedUnion="false" opposite="8748" isReadOnly="true" isOrdered="false" isUnique="true" name="inheritedMember" xmi:type="Property">
                <upperValue xmi:id="10897" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8750" annotatedElement="8747" body="Specifies all elements inherited by this classifier from the general classifiers." xmi:type="Comment" />
                <lowerValue xmi:id="10898" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8735" visibility="public" isDerived="false" type="8737" class="8737" association="8734" isDerivedUnion="false" opposite="8736" isReadOnly="false" isUnique="true" isOrdered="false" name="general" xmi:type="Property">
                <upperValue xmi:id="10893" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8794" annotatedElement="8735" body="Specifies the more general classifiers in the generalization hierarchy for this Classifier." xmi:type="Comment" />
                <lowerValue xmi:id="10894" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8751" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="inheritedMember" xmi:type="Operation">
                <formalParameter xmi:id="8753" direction="return" type="8446" isOrdered="false" isUnique="true" operation="8751" xmi:type="Parameter">
                  <upperValue xmi:id="10903" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10904" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8754" namespace="8751" name="spec" constrainedElement="8751 8747" xmi:type="Constraint">
                  <specification xmi:id="8755" language="OCL" body="result = self.inherit(self.parents()-&gt;collect(p | p.inheritableMembers(self))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8752" annotatedElement="8751" body="The inheritedMember association is derived by inheriting the inheritable members of the parents." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8756" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="parents" xmi:type="Operation">
                <formalParameter xmi:id="8758" direction="return" type="8737" isOrdered="false" isUnique="true" operation="8756" xmi:type="Parameter">
                  <upperValue xmi:id="10906" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10907" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8759" namespace="8756" name="spec" constrainedElement="8756" xmi:type="Constraint">
                  <specification xmi:id="8760" language="OCL" body="result = general" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8757" annotatedElement="8756" body="The query parents() gives all of the immediate ancestors of a generalized Classifier." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8761" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="allParents" xmi:type="Operation">
                <formalParameter xmi:id="8763" direction="return" type="8737" isOrdered="false" isUnique="true" operation="8761" xmi:type="Parameter">
                  <upperValue xmi:id="10909" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10910" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8764" namespace="8761" name="spec" constrainedElement="8761" xmi:type="Constraint">
                  <specification xmi:id="8765" language="OCL" body="result = self.parents()-&gt;union(self.parents()-&gt;collect(p | p.allParents())" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8762" annotatedElement="8761" body="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8766" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="inheritableMembers" xmi:type="Operation">
                <formalParameter xmi:id="8768" direction="return" type="8446" isOrdered="false" isUnique="true" operation="8766" xmi:type="Parameter">
                  <upperValue xmi:id="10912" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10913" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8769" direction="in" type="8737" isOrdered="false" isUnique="true" name="c" operation="8766" xmi:type="Parameter">
                  <upperValue xmi:id="10914" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10915" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8772" namespace="8766" name="spec" constrainedElement="8766" xmi:type="Constraint">
                  <specification xmi:id="8773" language="OCL" body="result = member-&gt;select(m | c.hasVisibilityOf(m))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <precondition xmi:id="8770" namespace="8766" constrainedElement="8766" xmi:type="Constraint">
                  <specification xmi:id="8771" language="OCL" body="c.allParents()-&gt;includes(self)" xmi:type="OpaqueExpression" />
                </precondition>
                <ownedComment xmi:id="8767" annotatedElement="8766" body="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8774" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="hasVisibilityOf" xmi:type="Operation">
                <formalParameter xmi:id="8776" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8774" xmi:type="Parameter">
                  <upperValue xmi:id="10917" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10918" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8777" direction="in" type="8446" isOrdered="false" isUnique="true" name="n" operation="8774" xmi:type="Parameter">
                  <upperValue xmi:id="10919" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10920" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8780" namespace="8774" name="spec" constrainedElement="8774" xmi:type="Constraint">
                  <specification xmi:id="8781" language="OCL" body="result = if (self.inheritedMember-&gt;includes (n)) then (n.visibility &lt;&gt; #private) else true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <precondition xmi:id="8778" namespace="8774" constrainedElement="8774" xmi:type="Constraint">
                  <specification xmi:id="8779" language="OCL" body="self.allParents()-&gt;collect(c | c.member)-&gt;includes(n)" xmi:type="OpaqueExpression" />
                </precondition>
                <ownedComment xmi:id="8775" annotatedElement="8774" body="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8782" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="inherit" xmi:type="Operation">
                <formalParameter xmi:id="8784" direction="return" type="8446" isOrdered="false" isUnique="true" operation="8782" xmi:type="Parameter">
                  <upperValue xmi:id="10922" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10923" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8785" direction="in" type="8446" isOrdered="false" isUnique="true" name="inhs" operation="8782" xmi:type="Parameter">
                  <upperValue xmi:id="10924" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10925" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8786" namespace="8782" name="spec" constrainedElement="8782" xmi:type="Constraint">
                  <specification xmi:id="8787" language="OCL" body="result = inhs" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8783" annotatedElement="8782" body="The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8788" isQuery="true" visibility="public" upper="1" lower="1" class="8737" isOrdered="false" isUnique="true" name="maySpecializeType" xmi:type="Operation">
                <formalParameter xmi:id="8790" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8788" xmi:type="Parameter">
                  <upperValue xmi:id="10927" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10928" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8791" direction="in" type="8737" isOrdered="false" isUnique="true" name="c" operation="8788" xmi:type="Parameter">
                  <upperValue xmi:id="10929" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10930" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8792" namespace="8788" name="spec" constrainedElement="8788" xmi:type="Constraint">
                  <specification xmi:id="8793" language="OCL" body="result = self.oclIsKindOf(c.oclType)" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8789" annotatedElement="8788" body="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10905" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10908" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10911" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10916" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10921" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10926" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10931" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10933" general="8451" xmi:type="Generalization" />
              <ownedComment xmi:id="8738" annotatedElement="8737" body="A classifier can specify a generalization hierarchy by referencing its general classifiers." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8570" visibility="public" name="Classifiers" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8583" importingNamespace="8570" visibility="public" importedPackage="8447" xmi:type="PackageImport" />
            <packageImport xmi:id="8584" importingNamespace="8570" visibility="public" importedPackage="8462" xmi:type="PackageImport" />
            <ownedMember xmi:id="8569" visibility="public" isAbstract="true" name="Feature" package="8570" superClass="8446" xmi:type="Class">
              <ownedAttribute xmi:id="8574" visibility="public" isDerived="true" type="8571" class="8569" association="8576" isDerivedUnion="true" opposite="8573" isReadOnly="true" isUnique="true" isOrdered="false" name="featuringClassifier" xmi:type="Property">
                <upperValue xmi:id="10770" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8575" annotatedElement="8574" body="The Classifiers that have this Feature as a feature." xmi:type="Comment" />
                <lowerValue xmi:id="10771" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10772" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10781" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="10785" general="8446" xmi:type="Generalization" />
              <ownedComment xmi:id="8585" annotatedElement="8569" body="A feature declares a behavioral or structural characteristic of instances of classifiers. Feature is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8571" visibility="public" isAbstract="true" name="Classifier" package="8570" superClass="8451" xmi:type="Class">
              <ownedAttribute xmi:id="8573" visibility="public" isDerived="true" subsettedProperty="8449" type="8569" class="8571" association="8576" isDerivedUnion="true" opposite="8574" isReadOnly="true" isOrdered="false" isUnique="true" name="feature" xmi:type="Property">
                <upperValue xmi:id="10773" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8577" annotatedElement="8573" body="Specifies each feature defined in the classifier." xmi:type="Comment" />
                <lowerValue xmi:id="10774" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8578" isQuery="true" visibility="public" upper="1" lower="1" class="8571" isOrdered="false" isUnique="true" name="allFeatures" xmi:type="Operation">
                <formalParameter xmi:id="8580" direction="return" type="8569" isOrdered="false" isUnique="true" operation="8578" xmi:type="Parameter">
                  <upperValue xmi:id="10775" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10776" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8581" namespace="8578" name="spec" constrainedElement="8578" xmi:type="Constraint">
                  <specification xmi:id="8582" language="OCL" body="result = member-&gt;select(oclIsKindOf(Feature))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8579" annotatedElement="8578" body="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10777" general="8451" xmi:type="Generalization" />
              <generalization xmi:id="10779" general="8451" xmi:type="Generalization" />
              <ownedComment xmi:id="8572" annotatedElement="8571" body="A classifier is a classification of instances; it describes a set of instances that have features in common. A classifier is a namespace whose members can include features. Classifier is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8576" visibility="public" isDerived="false" memberEnd="8573 8574" isAbstract="false" name="A_feature_featuringClassifier" general="8448" package="8570" xmi:type="Association" />
          </nestedPackage>
          <nestedPackage xmi:id="8630" visibility="public" name="Expressions" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8649" importingNamespace="8630" visibility="public" importedPackage="8462" xmi:type="PackageImport" />
            <ownedMember xmi:id="8631" visibility="public" isDerived="false" memberEnd="8632" isAbstract="false" name="A_language_opaqueExpression" package="8630" xmi:type="Association">
              <ownedEnd xmi:id="8633" owningAssociation="8631" visibility="public" isDerived="false" type="8634" isDerivedUnion="false" opposite="8632" isReadOnly="false" isUnique="true" isOrdered="false" name="opaqueExpression" xmi:type="Property">
                <upperValue xmi:id="10836" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10837" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8638" visibility="public" isDerived="false" memberEnd="8636" isAbstract="false" name="A_body_opaqueExpression" package="8630" xmi:type="Association">
              <ownedEnd xmi:id="8637" owningAssociation="8638" visibility="public" isDerived="false" type="8634" isDerivedUnion="false" opposite="8636" isReadOnly="false" isUnique="true" isOrdered="false" name="opaqueExpression" xmi:type="Property">
                <upperValue xmi:id="10840" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10841" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8641" visibility="public" isDerived="false" memberEnd="8642" isAbstract="false" name="A_operand_expression" general="8461" package="8630" xmi:type="Association">
              <ownedEnd xmi:id="8643" owningAssociation="8641" visibility="public" isDerived="false" subsettedProperty="8458" type="8644" isDerivedUnion="false" opposite="8642" isReadOnly="false" isUnique="true" isOrdered="false" name="expression" xmi:type="Property">
                <upperValue xmi:id="10844" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10845" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8644" visibility="public" isAbstract="false" name="Expression" package="8630" superClass="8629" xmi:type="Class">
              <ownedAttribute xmi:id="8646" visibility="public" isDerived="false" type="8295" class="8644" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="symbol" xmi:type="Property">
                <upperValue xmi:id="10846" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8647" annotatedElement="8646" body="The symbol associated with the node in the expression tree." xmi:type="Comment" />
                <lowerValue xmi:id="10847" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8642" visibility="public" isDerived="false" subsettedProperty="8459" type="8629" class="8644" association="8641" aggregation="composite" isDerivedUnion="false" opposite="8643" isReadOnly="false" isOrdered="true" isUnique="true" name="operand" xmi:type="Property">
                <upperValue xmi:id="10842" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8648" annotatedElement="8642" body="Specifies a sequence of operands." xmi:type="Comment" />
                <lowerValue xmi:id="10843" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10849" general="8629" xmi:type="Generalization" />
              <ownedComment xmi:id="8645" annotatedElement="8644" body="An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8629" visibility="public" isAbstract="true" name="ValueSpecification" package="8630" superClass="8463" xmi:type="Class">
              <ownedOperation xmi:id="8651" isQuery="true" visibility="public" upper="1" lower="1" class="8629" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
                <formalParameter xmi:id="8653" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8651" xmi:type="Parameter">
                  <upperValue xmi:id="10816" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10817" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8654" namespace="8651" name="spec" constrainedElement="8651" xmi:type="Constraint">
                  <specification xmi:id="8655" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8652" annotatedElement="8651" body="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8656" isQuery="true" visibility="public" upper="1" lower="1" class="8629" isOrdered="false" isUnique="true" name="integerValue" xmi:type="Operation">
                <formalParameter xmi:id="8658" direction="return" type="8289" isOrdered="false" isUnique="true" operation="8656" xmi:type="Parameter">
                  <upperValue xmi:id="10819" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10820" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8659" namespace="8656" name="spec" constrainedElement="8656" xmi:type="Constraint">
                  <specification xmi:id="8660" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8657" annotatedElement="8656" body="The query integerValue() gives a single Integer value when one can be computed." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8661" isQuery="true" visibility="public" upper="1" lower="1" class="8629" isOrdered="false" isUnique="true" name="booleanValue" xmi:type="Operation">
                <formalParameter xmi:id="8663" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8661" xmi:type="Parameter">
                  <upperValue xmi:id="10822" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10823" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8664" namespace="8661" name="spec" constrainedElement="8661" xmi:type="Constraint">
                  <specification xmi:id="8665" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8662" annotatedElement="8661" body="The query booleanValue() gives a single Boolean value when one can be computed." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8666" isQuery="true" visibility="public" upper="1" lower="1" class="8629" isOrdered="false" isUnique="true" name="stringValue" xmi:type="Operation">
                <formalParameter xmi:id="8668" direction="return" type="8295" isOrdered="false" isUnique="true" operation="8666" xmi:type="Parameter">
                  <upperValue xmi:id="10825" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10826" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8669" namespace="8666" name="spec" constrainedElement="8666" xmi:type="Constraint">
                  <specification xmi:id="8670" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8667" annotatedElement="8666" body="The query stringValue() gives a single String value when one can be computed." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8671" isQuery="true" visibility="public" upper="1" lower="1" class="8629" isOrdered="false" isUnique="true" name="unlimitedValue" xmi:type="Operation">
                <formalParameter xmi:id="8673" direction="return" type="8291" isOrdered="false" isUnique="true" operation="8671" xmi:type="Parameter">
                  <upperValue xmi:id="10828" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10829" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8674" namespace="8671" name="spec" constrainedElement="8671" xmi:type="Constraint">
                  <specification xmi:id="8675" language="OCL" body="result = Set{}" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8672" annotatedElement="8671" body="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8676" isQuery="true" visibility="public" upper="1" lower="1" class="8629" isOrdered="false" isUnique="true" name="isNull" xmi:type="Operation">
                <formalParameter xmi:id="8678" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8676" xmi:type="Parameter">
                  <upperValue xmi:id="10831" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10832" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8679" namespace="8676" name="spec" constrainedElement="8676" xmi:type="Constraint">
                  <specification xmi:id="8680" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8677" annotatedElement="8676" body="The query isNull() returns true when it can be computed that the value is null." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10818" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10821" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10824" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10827" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10830" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10833" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10848" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10850" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10851" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10853" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10967" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="8650" annotatedElement="8629" body="ValueSpecification is an abstract metaclass used to identify a value or values in a model. It may reference an instance or it may be an expression denoting an instance or instances when evaluated." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="8634" visibility="public" isAbstract="false" name="OpaqueExpression" package="8630" superClass="8629" xmi:type="Class">
              <ownedAttribute xmi:id="8636" visibility="public" isDerived="false" type="8295" class="8634" association="8638" aggregation="composite" isDerivedUnion="false" opposite="8637" isReadOnly="false" isUnique="true" isOrdered="true" name="body" xmi:type="Property">
                <upperValue xmi:id="10838" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8639" annotatedElement="8636" body="The text of the expression, possibly in multiple languages." xmi:type="Comment" />
                <lowerValue xmi:id="10839" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8632" visibility="public" isDerived="false" type="8295" class="8634" association="8631" aggregation="composite" isDerivedUnion="false" opposite="8633" isReadOnly="false" isUnique="true" isOrdered="true" name="language" xmi:type="Property">
                <upperValue xmi:id="10834" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="8640" annotatedElement="8632" body="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression body or the context. Languages are matched to body strings by order." xmi:type="Comment" />
                <lowerValue xmi:id="10835" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="10852" general="8629" xmi:type="Generalization" />
              <ownedComment xmi:id="8635" annotatedElement="8634" body="An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8796" visibility="public" name="MultiplicityExpressions" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="8831" importingNamespace="8796" visibility="public" importedPackage="8630" xmi:type="PackageImport" />
            <packageImport xmi:id="8832" importingNamespace="8796" visibility="public" importedPackage="8833" xmi:type="PackageImport" />
            <ownedMember xmi:id="8797" visibility="public" isDerived="false" memberEnd="8798" isAbstract="false" name="A_upperValue_owningUpper" general="8461" package="8796" xmi:type="Association">
              <ownedEnd xmi:id="8799" owningAssociation="8797" visibility="public" isDerived="false" subsettedProperty="8458" type="8800" isDerivedUnion="false" opposite="8798" isReadOnly="false" isUnique="true" isOrdered="false" name="owningUpper" xmi:type="Property">
                <upperValue xmi:id="10936" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10937" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8808" visibility="public" isDerived="false" memberEnd="8806" isAbstract="false" name="A_lowerValue_owningLower" general="8461" package="8796" xmi:type="Association">
              <ownedEnd xmi:id="8807" owningAssociation="8808" visibility="public" isDerived="false" subsettedProperty="8458" type="8800" isDerivedUnion="false" opposite="8806" isReadOnly="false" isUnique="true" isOrdered="false" name="owningLower" xmi:type="Property">
                <upperValue xmi:id="10940" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="10941" value="0" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="8800" visibility="public" isAbstract="true" name="MultiplicityElement" package="8796" superClass="8463" xmi:type="Class">
              <ownedAttribute xmi:id="8802" visibility="public" isDerived="true" type="8289" class="8800" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="lower" xmi:type="Property">
                <upperValue xmi:id="10942" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8803" annotatedElement="8802" body="Specifies the lower bound of the multiplicity interval, if it is expressed as an integer. This is a redefinition of the corresponding property from Multiplicities." xmi:type="Comment" />
                <lowerValue xmi:id="10943" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8804" visibility="public" isDerived="true" type="8291" class="8800" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="upper" xmi:type="Property">
                <upperValue xmi:id="10944" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8805" annotatedElement="8804" body="Specifies the upper bound of the multiplicity interval, if it is expressed as an unlimited natural. This is a redefinition of the corresponding property from Multiplicities." xmi:type="Comment" />
                <lowerValue xmi:id="10945" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8798" visibility="public" isDerived="false" subsettedProperty="8459" type="8629" class="8800" association="8797" aggregation="composite" isDerivedUnion="false" opposite="8799" isReadOnly="false" isOrdered="false" isUnique="true" name="upperValue" xmi:type="Property">
                <upperValue xmi:id="10934" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8830" annotatedElement="8798" body="The specification of the upper bound for this multiplicity." xmi:type="Comment" />
                <lowerValue xmi:id="10935" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8806" visibility="public" isDerived="false" subsettedProperty="8459" type="8629" class="8800" association="8808" aggregation="composite" isDerivedUnion="false" opposite="8807" isReadOnly="false" isOrdered="false" isUnique="true" name="lowerValue" xmi:type="Property">
                <upperValue xmi:id="10938" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8809" annotatedElement="8806" body="The specification of the lower bound for this multiplicity." xmi:type="Comment" />
                <lowerValue xmi:id="10939" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8810" isQuery="true" visibility="public" upper="1" lower="1" class="8800" isOrdered="false" isUnique="true" name="lower" xmi:type="Operation">
                <formalParameter xmi:id="8812" direction="return" type="8289" isOrdered="false" isUnique="true" operation="8810" xmi:type="Parameter">
                  <upperValue xmi:id="10946" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10947" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8813" namespace="8810" name="spec" constrainedElement="8810 8802" xmi:type="Constraint">
                  <specification xmi:id="8814" language="OCL" body="result = lowerBound()" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8811" annotatedElement="8810" body="The derived lower attribute must equal the lowerBound." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8815" isQuery="true" visibility="public" upper="1" lower="1" class="8800" isOrdered="false" isUnique="true" name="upper" xmi:type="Operation">
                <formalParameter xmi:id="8817" direction="return" type="8291" isOrdered="false" isUnique="true" operation="8815" xmi:type="Parameter">
                  <upperValue xmi:id="10949" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10950" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8818" namespace="8815" name="spec" constrainedElement="8815 8804" xmi:type="Constraint">
                  <specification xmi:id="8819" language="OCL" body="result = upperBound()" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8816" annotatedElement="8815" body="The derived upper attribute must equal the upperBound." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8820" isQuery="true" visibility="public" upper="1" lower="1" class="8800" isOrdered="false" isUnique="true" name="lowerBound" xmi:type="Operation">
                <formalParameter xmi:id="8822" direction="return" type="8289" isOrdered="false" isUnique="true" operation="8820" xmi:type="Parameter">
                  <upperValue xmi:id="10952" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10953" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8823" namespace="8820" name="spec" constrainedElement="8820" xmi:type="Constraint">
                  <specification xmi:id="8824" language="OCL" body="result = if lowerValue-&gt;isEmpty() then 1 else lowerValue.integerValue() endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8821" annotatedElement="8820" body="The query lowerBound() returns the lower bound of the multiplicity as an integer." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8825" isQuery="true" visibility="public" upper="1" lower="1" class="8800" isOrdered="false" isUnique="true" name="upperBound" xmi:type="Operation">
                <formalParameter xmi:id="8827" direction="return" type="8291" isOrdered="false" isUnique="true" operation="8825" xmi:type="Parameter">
                  <upperValue xmi:id="10955" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10956" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8828" namespace="8825" name="spec" constrainedElement="8825" xmi:type="Constraint">
                  <specification xmi:id="8829" language="OCL" body="result = if upperValue-&gt;isEmpty() then 1 else upperValue.unlimitedValue() endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8826" annotatedElement="8825" body="The query upperBound() returns the upper bound of the multiplicity as an unlimited natural." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10948" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10951" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10954" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10957" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="10958" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="8801" annotatedElement="8800" body="MultiplicityElement is specialized to support the use of value specifications to define each bound of the multiplicity." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="9037" visibility="public" name="Literals" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9108" importingNamespace="9037" visibility="public" importedPackage="8630" xmi:type="PackageImport" />
            <ownedMember xmi:id="9038" visibility="public" isAbstract="false" name="LiteralInteger" package="9037" superClass="9042" xmi:type="Class">
              <ownedAttribute xmi:id="9040" visibility="public" isDerived="false" type="8289" class="9038" default="0" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="value" xmi:type="Property">
                <upperValue xmi:id="10959" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9041" annotatedElement="9040" body="The specified Integer value." xmi:type="Comment" />
                <lowerValue xmi:id="10960" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="9044" isQuery="true" visibility="public" redefinedOperation="8651" upper="1" lower="1" class="9038" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
                <formalParameter xmi:id="9046" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9044" xmi:type="Parameter">
                  <upperValue xmi:id="10961" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10962" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9047" namespace="9044" name="spec" constrainedElement="9044" xmi:type="Constraint">
                  <specification xmi:id="9048" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9045" annotatedElement="9044" body="The query isComputable() is redefined to be true." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9049" isQuery="true" visibility="public" redefinedOperation="8656" upper="1" lower="1" class="9038" isOrdered="false" isUnique="true" name="integerValue" xmi:type="Operation">
                <formalParameter xmi:id="9051" direction="return" type="8289" isOrdered="false" isUnique="true" operation="9049" xmi:type="Parameter">
                  <upperValue xmi:id="10964" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10965" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9052" namespace="9049" name="spec" constrainedElement="9049" xmi:type="Constraint">
                  <specification xmi:id="9053" language="OCL" body="result = value" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9050" annotatedElement="9049" body="The query integerValue() gives the value." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10963" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10966" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10969" general="9042" xmi:type="Generalization" />
              <ownedComment xmi:id="9039" annotatedElement="9038" body="A literal integer contains an Integer-valued attribute." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9054" visibility="public" isAbstract="false" name="LiteralString" package="9037" superClass="9042" xmi:type="Class">
              <ownedAttribute xmi:id="9056" visibility="public" isDerived="false" type="8295" class="9054" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="value" xmi:type="Property">
                <upperValue xmi:id="10970" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9057" annotatedElement="9056" body="The specified String value." xmi:type="Comment" />
                <lowerValue xmi:id="10971" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="9058" isQuery="true" visibility="public" redefinedOperation="8651" upper="1" lower="1" class="9054" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
                <formalParameter xmi:id="9060" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9058" xmi:type="Parameter">
                  <upperValue xmi:id="10972" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10973" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9061" namespace="9058" name="spec" constrainedElement="9058" xmi:type="Constraint">
                  <specification xmi:id="9062" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9059" annotatedElement="9058" body="The query isComputable() is redefined to be true." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9063" isQuery="true" visibility="public" redefinedOperation="8666" upper="1" lower="1" class="9054" isOrdered="false" isUnique="true" name="stringValue" xmi:type="Operation">
                <formalParameter xmi:id="9065" direction="return" type="8295" isOrdered="false" isUnique="true" operation="9063" xmi:type="Parameter">
                  <upperValue xmi:id="10975" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10976" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9066" namespace="9063" name="spec" constrainedElement="9063" xmi:type="Constraint">
                  <specification xmi:id="9067" language="OCL" body="result = value" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9064" annotatedElement="9063" body="The query stringValue() gives the value." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10974" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10977" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10979" general="9042" xmi:type="Generalization" />
              <ownedComment xmi:id="9055" annotatedElement="9054" body="A literal string contains a String-valued attribute." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9068" visibility="public" isAbstract="false" name="LiteralBoolean" package="9037" superClass="9042" xmi:type="Class">
              <ownedAttribute xmi:id="9070" visibility="public" isDerived="false" type="8297" class="9068" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="value" xmi:type="Property">
                <upperValue xmi:id="10980" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9071" annotatedElement="9070" body="The specified Boolean value." xmi:type="Comment" />
                <lowerValue xmi:id="10981" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="9072" isQuery="true" visibility="public" redefinedOperation="8651" upper="1" lower="1" class="9068" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
                <formalParameter xmi:id="9074" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9072" xmi:type="Parameter">
                  <upperValue xmi:id="10982" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10983" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9075" namespace="9072" name="spec" constrainedElement="9072" xmi:type="Constraint">
                  <specification xmi:id="9076" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9073" annotatedElement="9072" body="The query isComputable() is redefined to be true." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9077" isQuery="true" visibility="public" redefinedOperation="8661" upper="1" lower="1" class="9068" isOrdered="false" isUnique="true" name="booleanValue" xmi:type="Operation">
                <formalParameter xmi:id="9079" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9077" xmi:type="Parameter">
                  <upperValue xmi:id="10985" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10986" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9080" namespace="9077" name="spec" constrainedElement="9077" xmi:type="Constraint">
                  <specification xmi:id="9081" language="OCL" body="result = value" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9078" annotatedElement="9077" body="The query booleanValue() gives the value." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10984" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10987" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10989" general="9042" xmi:type="Generalization" />
              <ownedComment xmi:id="9069" annotatedElement="9068" body="A literal boolean contains a Boolean-valued attribute." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9082" visibility="public" isAbstract="false" name="LiteralNull" package="9037" superClass="9042" xmi:type="Class">
              <ownedOperation xmi:id="9084" isQuery="true" visibility="public" redefinedOperation="8651" upper="1" lower="1" class="9082" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
                <formalParameter xmi:id="9086" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9084" xmi:type="Parameter">
                  <upperValue xmi:id="10990" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10991" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9087" namespace="9084" name="spec" constrainedElement="9084" xmi:type="Constraint">
                  <specification xmi:id="9088" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9085" annotatedElement="9084" body="The query isComputable() is redefined to be true." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9089" isQuery="true" visibility="public" redefinedOperation="8676" upper="1" lower="1" class="9082" isOrdered="false" isUnique="true" name="isNull" xmi:type="Operation">
                <formalParameter xmi:id="9091" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9089" xmi:type="Parameter">
                  <upperValue xmi:id="10993" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="10994" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9092" namespace="9089" name="spec" constrainedElement="9089" xmi:type="Constraint">
                  <specification xmi:id="9093" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9090" annotatedElement="9089" body="The query isNull() returns true." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="10992" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10995" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="10997" general="9042" xmi:type="Generalization" />
              <ownedComment xmi:id="9083" annotatedElement="9082" body="A literal null is used to represent null, i.e., the absence of a value." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9042" visibility="public" isAbstract="true" name="LiteralSpecification" package="9037" superClass="8629" xmi:type="Class">
              <generalization xmi:id="10968" general="8629" xmi:type="Generalization" />
              <generalization xmi:id="10978" general="8629" xmi:type="Generalization" />
              <generalization xmi:id="10988" general="8629" xmi:type="Generalization" />
              <generalization xmi:id="10996" general="8629" xmi:type="Generalization" />
              <generalization xmi:id="10998" general="8629" xmi:type="Generalization" />
              <generalization xmi:id="11007" general="8629" xmi:type="Generalization" />
              <ownedComment xmi:id="9043" annotatedElement="9042" body="A literal specification is an abstract specialization of ValueSpecification that identifies a literal constant being modeled." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9094" visibility="public" isAbstract="false" name="LiteralUnlimitedNatural" package="9037" superClass="9042" xmi:type="Class">
              <ownedAttribute xmi:id="9096" visibility="public" isDerived="false" type="8291" class="9094" default="0" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="value" xmi:type="Property">
                <upperValue xmi:id="10999" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9097" annotatedElement="9096" body="The specified UnlimitedNatural value." xmi:type="Comment" />
                <lowerValue xmi:id="11000" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="9098" isQuery="true" visibility="public" redefinedOperation="8651" upper="1" lower="1" class="9094" isOrdered="false" isUnique="true" name="isComputable" xmi:type="Operation">
                <formalParameter xmi:id="9100" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9098" xmi:type="Parameter">
                  <upperValue xmi:id="11001" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11002" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9101" namespace="9098" name="spec" constrainedElement="9098" xmi:type="Constraint">
                  <specification xmi:id="9102" language="OCL" body="result = true" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9099" annotatedElement="9098" body="The query isComputable() is redefined to be true." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9103" isQuery="true" visibility="public" redefinedOperation="8671" upper="1" lower="1" class="9094" isOrdered="false" isUnique="true" name="unlimitedValue" xmi:type="Operation">
                <formalParameter xmi:id="9105" direction="return" type="8291" isOrdered="false" isUnique="true" operation="9103" xmi:type="Parameter">
                  <upperValue xmi:id="11004" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11005" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9106" namespace="9103" name="spec" constrainedElement="9103" xmi:type="Constraint">
                  <specification xmi:id="9107" language="OCL" body="result = value" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9104" annotatedElement="9103" body="The query unlimitedValue() gives the value." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="11003" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="11006" general="9042" xmi:type="Generalization" />
              <generalization xmi:id="11008" general="9042" xmi:type="Generalization" />
              <ownedComment xmi:id="9095" annotatedElement="9094" body="A literal unlimited natural is a specification of an unlimited natural number and contains a UnlimitedNatural-valued attribute." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="9109" visibility="public" name="Redefinitions" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9140" importingNamespace="9109" visibility="public" importedPackage="8733" xmi:type="PackageImport" />
            <ownedMember xmi:id="9110" visibility="public" isDerived="false" memberEnd="9111" isAbstract="false" name="A_redefinedElement_redefinableElement" package="9109" xmi:type="Association">
              <ownedEnd xmi:id="9112" owningAssociation="9110" visibility="public" isDerived="false" type="9113" isDerivedUnion="false" opposite="9111" isReadOnly="false" isUnique="true" isOrdered="false" name="redefinableElement" xmi:type="Property">
                <upperValue xmi:id="11011" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11012" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="9113" visibility="public" isAbstract="true" name="RedefinableElement" package="9109" superClass="8446" xmi:type="Class">
              <ownedRule xmi:id="9115" namespace="9113" name="redefinition_context_valid" constrainedElement="9113" xmi:type="Constraint">
                <ownedComment xmi:id="9116" annotatedElement="9115" body="At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element." xmi:type="Comment" />
                <specification xmi:id="9117" language="OCL" body="self.redefinedElement-&gt;forAll(e | self.isRedefinitionContextValid(e))" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="9118" namespace="9113" name="redefinition_consistent" constrainedElement="9113" xmi:type="Constraint">
                <ownedComment xmi:id="9119" annotatedElement="9118" body="A redefining element must be consistent with each redefined element." xmi:type="Comment" />
                <specification xmi:id="9120" language="OCL" body="self.redefinedElement-&gt;forAll(re | re.isConsistentWith(self))" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="9111" visibility="public" isDerived="true" type="9113" class="9113" association="9110" isDerivedUnion="true" opposite="9112" isReadOnly="true" isUnique="true" isOrdered="false" name="redefinedElement" xmi:type="Property">
                <upperValue xmi:id="11009" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9139" annotatedElement="9111" body="The redefinable element that is being redefined by this element." xmi:type="Comment" />
                <lowerValue xmi:id="11010" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="9121" visibility="public" isDerived="true" type="8737" class="9113" association="9123" isDerivedUnion="true" opposite="9122" isReadOnly="true" isUnique="true" isOrdered="false" name="redefinitionContext" xmi:type="Property">
                <upperValue xmi:id="11013" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9124" annotatedElement="9121" body="References the contexts that this element may be redefined from." xmi:type="Comment" />
                <lowerValue xmi:id="11014" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="9125" isQuery="true" visibility="public" upper="1" lower="1" class="9113" isOrdered="false" isUnique="true" name="isConsistentWith" xmi:type="Operation">
                <formalParameter xmi:id="9127" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9125" xmi:type="Parameter">
                  <upperValue xmi:id="11015" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11016" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="9128" direction="in" type="9113" isOrdered="false" isUnique="true" name="redefinee" operation="9125" xmi:type="Parameter">
                  <upperValue xmi:id="11017" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11018" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9131" namespace="9125" name="spec" constrainedElement="9125" xmi:type="Constraint">
                  <specification xmi:id="9132" language="OCL" body="result = false" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <precondition xmi:id="9129" namespace="9125" constrainedElement="9125" xmi:type="Constraint">
                  <specification xmi:id="9130" language="OCL" body="redefinee.isRedefinitionContextValid(self)" xmi:type="OpaqueExpression" />
                </precondition>
                <ownedComment xmi:id="9126" annotatedElement="9125" body="The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9133" isQuery="true" visibility="public" upper="1" lower="1" class="9113" isOrdered="false" isUnique="true" name="isRedefinitionContextValid" xmi:type="Operation">
                <formalParameter xmi:id="9135" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9133" xmi:type="Parameter">
                  <upperValue xmi:id="11020" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11021" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="9136" direction="in" type="9113" isOrdered="false" isUnique="true" name="redefined" operation="9133" xmi:type="Parameter">
                  <upperValue xmi:id="11022" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11023" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9137" namespace="9133" name="spec" constrainedElement="9133" xmi:type="Constraint">
                  <specification xmi:id="9138" language="OCL" body="result = redefinitionContext-&gt;exists(c | c.allParents()-&gt;includes (redefined.redefinitionContext)))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9134" annotatedElement="9133" body="The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="11019" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="11024" general="8446" xmi:type="Generalization" />
              <generalization xmi:id="11026" general="8446" xmi:type="Generalization" />
              <ownedComment xmi:id="9114" annotatedElement="9113" body="A redefinable element is a named element that can be redefined in the context of a generalization. RedefinableElement is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9123" visibility="public" isDerived="false" memberEnd="9121" isAbstract="false" name="A_redefinitionContext_redefinableElement" package="9109" xmi:type="Association">
              <ownedEnd xmi:id="9122" owningAssociation="9123" visibility="public" isDerived="false" type="9113" isDerivedUnion="false" opposite="9121" isReadOnly="false" isUnique="true" isOrdered="false" name="redefinableElement" xmi:type="Property">
                <upperValue xmi:id="11027" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11028" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="9141" visibility="public" name="Changeabilities" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9146" importingNamespace="9141" visibility="public" importedPackage="8598" xmi:type="PackageImport" />
            <ownedMember xmi:id="9142" visibility="public" isAbstract="true" name="StructuralFeature" package="9141" xmi:type="Class">
              <ownedAttribute xmi:id="9144" visibility="public" isDerived="false" type="8297" class="9142" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isReadOnly" xmi:type="Property">
                <upperValue xmi:id="11029" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9145" annotatedElement="9144" body="States whether the feature's value may be modified by a client." xmi:type="Comment" />
                <lowerValue xmi:id="11030" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedComment xmi:id="9143" annotatedElement="9142" body="StructuralFeature is specialized to add an attribute that determines whether a client may modify its value." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="8833" visibility="public" name="Multiplicities" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9036" importingNamespace="8833" visibility="public" importedPackage="8496" xmi:type="PackageImport" />
            <ownedMember xmi:id="8834" visibility="public" isAbstract="true" name="MultiplicityElement" package="8833" superClass="8497" xmi:type="Class">
              <ownedRule xmi:id="8836" namespace="8834" name="upper_gt_0" constrainedElement="8834" xmi:type="Constraint">
                <ownedComment xmi:id="8837" annotatedElement="8836" body="A multiplicity must define at least one valid cardinality that is greater than zero." xmi:type="Comment" />
                <specification xmi:id="8838" language="OCL" body="upperBound()-&gt;notEmpty() implies upperBound() &gt; 0" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8839" namespace="8834" name="lower_ge_0" constrainedElement="8834" xmi:type="Constraint">
                <ownedComment xmi:id="8840" annotatedElement="8839" body="The lower bound must be a non-negative integer literal." xmi:type="Comment" />
                <specification xmi:id="8841" language="OCL" body="lowerBound()-&gt;notEmpty() implies lowerBound() &gt;= 0" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedRule xmi:id="8842" namespace="8834" name="upper_ge_lower" constrainedElement="8834" xmi:type="Constraint">
                <ownedComment xmi:id="8843" annotatedElement="8842" body="The upper bound must be greater than or equal to the lower bound." xmi:type="Comment" />
                <specification xmi:id="8844" language="OCL" body="(upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()) implies upperBound() &gt;= lowerBound()" xmi:type="OpaqueExpression" />
              </ownedRule>
              <ownedAttribute xmi:id="8845" visibility="public" isDerived="false" type="8297" class="8834" default="false" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isOrdered" xmi:type="Property">
                <upperValue xmi:id="11031" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8846" annotatedElement="8845" body="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.." xmi:type="Comment" />
                <lowerValue xmi:id="11032" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8847" visibility="public" isDerived="false" type="8297" class="8834" default="true" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="isUnique" xmi:type="Property">
                <upperValue xmi:id="11033" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8848" annotatedElement="8847" body="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique." xmi:type="Comment" />
                <lowerValue xmi:id="11034" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8849" visibility="public" isDerived="false" type="8289" class="8834" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="lower" xmi:type="Property">
                <upperValue xmi:id="11035" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8850" annotatedElement="8849" body="Specifies the lower bound of the multiplicity interval." xmi:type="Comment" />
                <lowerValue xmi:id="11036" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="8851" visibility="public" isDerived="false" type="8291" class="8834" default="1" aggregation="composite" isDerivedUnion="false" isReadOnly="false" isUnique="true" isOrdered="false" name="upper" xmi:type="Property">
                <upperValue xmi:id="11037" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="8852" annotatedElement="8851" body="Specifies the upper bound of the multiplicity interval." xmi:type="Comment" />
                <lowerValue xmi:id="11038" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="8853" isQuery="true" visibility="public" upper="1" lower="1" class="8834" isOrdered="false" isUnique="true" name="lowerBound" xmi:type="Operation">
                <formalParameter xmi:id="8855" direction="return" type="8289" isOrdered="false" isUnique="true" operation="8853" xmi:type="Parameter">
                  <upperValue xmi:id="11039" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11040" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8856" namespace="8853" name="spec" constrainedElement="8853" xmi:type="Constraint">
                  <specification xmi:id="8857" language="OCL" body="result = if lower-&gt;notEmpty() then lower else 1 endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8854" annotatedElement="8853" body="The query lowerBound() returns the lower bound of the multiplicity as an integer." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8858" isQuery="true" visibility="public" upper="1" lower="1" class="8834" isOrdered="false" isUnique="true" name="upperBound" xmi:type="Operation">
                <formalParameter xmi:id="8860" direction="return" type="8291" isOrdered="false" isUnique="true" operation="8858" xmi:type="Parameter">
                  <upperValue xmi:id="11042" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11043" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8861" namespace="8858" name="spec" constrainedElement="8858" xmi:type="Constraint">
                  <specification xmi:id="8862" language="OCL" body="result = if upper-&gt;notEmpty() then upper else 1 endif" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="8859" annotatedElement="8858" body="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8863" isQuery="true" visibility="public" upper="1" lower="1" class="8834" isOrdered="false" isUnique="true" name="isMultivalued" xmi:type="Operation">
                <formalParameter xmi:id="8865" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8863" xmi:type="Parameter">
                  <upperValue xmi:id="11045" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11046" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8868" namespace="8863" name="spec" constrainedElement="8863" xmi:type="Constraint">
                  <specification xmi:id="8869" language="OCL" body="result = upperBound() &gt; 1" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <precondition xmi:id="8866" namespace="8863" constrainedElement="8863" xmi:type="Constraint">
                  <specification xmi:id="8867" language="OCL" body="upperBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
                </precondition>
                <ownedComment xmi:id="8864" annotatedElement="8863" body="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8870" isQuery="true" visibility="public" upper="1" lower="1" class="8834" isOrdered="false" isUnique="true" name="includesCardinality" xmi:type="Operation">
                <formalParameter xmi:id="8872" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8870" xmi:type="Parameter">
                  <upperValue xmi:id="11048" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11049" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8873" direction="in" type="8289" isOrdered="false" isUnique="true" name="C" operation="8870" xmi:type="Parameter">
                  <upperValue xmi:id="11050" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11051" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="8876" namespace="8870" name="spec" constrainedElement="8870" xmi:type="Constraint">
                  <specification xmi:id="8877" language="OCL" body="result = (lowerBound() &lt;= C) and (upperBound() &gt;= C)" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <precondition xmi:id="8874" namespace="8870" constrainedElement="8870" xmi:type="Constraint">
                  <specification xmi:id="8875" language="OCL" body="upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()&#xA;includesCardinality = (lowerBound() &lt;= C) and (upperBound() &gt;= C)&#xA;" xmi:type="OpaqueExpression" />
                </precondition>
                <ownedComment xmi:id="8871" annotatedElement="8870" body="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="8878" isQuery="true" visibility="public" upper="1" lower="1" class="8834" isOrdered="false" isUnique="true" name="includesMultiplicity" xmi:type="Operation">
                <formalParameter xmi:id="8880" direction="return" type="8297" isOrdered="false" isUnique="true" operation="8878" xmi:type="Parameter">
                  <upperValue xmi:id="11053" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11054" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="8881" direction="in" type="8882" isOrdered="false" isUnique="true" name="M" operation="8878" xmi:type="Parameter">
                  <upperValue xmi:id="11055" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11056" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9034" namespace="8878" name="spec" constrainedElement="8878" xmi:type="Constraint">
                  <specification xmi:id="9035" language="OCL" body="result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() &gt;= M.upperBound())" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <precondition xmi:id="9032" namespace="8878" constrainedElement="8878" xmi:type="Constraint">
                  <specification xmi:id="9033" language="OCL" body="self.upperBound()-&gt;notEmpty() and self.lowerBound()-&gt;notEmpty() and M.upperBound()-&gt;notEmpty() and M.lowerBound()-&gt;notEmpty()" xmi:type="OpaqueExpression" />
                </precondition>
                <ownedComment xmi:id="8879" annotatedElement="8878" body="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="11041" general="8497" xmi:type="Generalization" />
              <generalization xmi:id="11044" general="8497" xmi:type="Generalization" />
              <generalization xmi:id="11047" general="8497" xmi:type="Generalization" />
              <generalization xmi:id="11052" general="8497" xmi:type="Generalization" />
              <generalization xmi:id="11057" general="8497" xmi:type="Generalization" />
              <generalization xmi:id="11058" general="8497" xmi:type="Generalization" />
              <ownedComment xmi:id="8835" annotatedElement="8834" body="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element. A MultiplicityElement also includes specifications of whether the values in an instantiation of this element must be unique or ordered." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="9147" visibility="public" name="Generalizations" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9198" importingNamespace="9147" visibility="public" importedPackage="9154" xmi:type="PackageImport" />
            <packageImport xmi:id="9199" importingNamespace="9147" visibility="public" importedPackage="8733" xmi:type="PackageImport" />
            <packageImport xmi:id="9200" importingNamespace="9147" visibility="public" importedPackage="8443" xmi:type="PackageImport" />
            <ownedMember xmi:id="9148" visibility="public" isAbstract="false" name="Generalization" package="9147" superClass="9158" xmi:type="Class">
              <ownedAttribute xmi:id="9149" visibility="public" isDerived="false" subsettedProperty="9160 8458" type="9171" class="9148" association="9152" isDerivedUnion="false" opposite="9150" isReadOnly="false" isOrdered="false" isUnique="true" name="specific" xmi:type="Property">
                <upperValue xmi:id="11059" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9193" annotatedElement="9149" body="References the specializing classifier in the Generalization relationship. " xmi:type="Comment" />
                <lowerValue xmi:id="11060" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="9194" visibility="public" isDerived="false" subsettedProperty="9156" type="9171" class="9148" association="9196" isDerivedUnion="false" opposite="9195" isReadOnly="false" isOrdered="false" isUnique="true" name="general" xmi:type="Property">
                <upperValue xmi:id="11061" value="1" xmi:type="LiteralString" />
                <ownedComment xmi:id="9197" annotatedElement="9194" body="References the general classifier in the Generalization relationship." xmi:type="Comment" />
                <lowerValue xmi:id="11062" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="11079" general="9158" xmi:type="Generalization" />
            </ownedMember>
            <ownedMember xmi:id="9196" visibility="public" isDerived="false" memberEnd="9194" isAbstract="false" name="A_general_generalization" general="9155" package="9147" xmi:type="Association">
              <ownedEnd xmi:id="9195" owningAssociation="9196" visibility="public" isDerived="false" type="9148" redefinedProperty="9157" isDerivedUnion="false" opposite="9194" isReadOnly="false" isUnique="true" isOrdered="false" name="generalization" xmi:type="Property">
                <upperValue xmi:id="11080" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11081" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="9175" visibility="public" isDerived="false" memberEnd="9173" isAbstract="false" name="A_general_classifier" package="9147" xmi:type="Association">
              <ownedEnd xmi:id="9174" owningAssociation="9175" visibility="public" isDerived="false" type="9171" isDerivedUnion="false" opposite="9173" isReadOnly="false" isUnique="true" isOrdered="false" name="classifier" xmi:type="Property">
                <upperValue xmi:id="11084" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11085" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="9152" visibility="public" isDerived="false" memberEnd="9150 9149" isAbstract="false" name="A_generalization_specific" general="8461 9153" package="9147" xmi:type="Association" />
            <ownedMember xmi:id="9171" visibility="public" isAbstract="true" name="Classifier" package="9147" superClass="8444" xmi:type="Class">
              <ownedAttribute xmi:id="9150" visibility="public" isDerived="false" subsettedProperty="8459" type="9148" class="9171" association="9152" aggregation="composite" isDerivedUnion="false" opposite="9149" isReadOnly="false" isOrdered="false" isUnique="true" name="generalization" xmi:type="Property">
                <upperValue xmi:id="11086" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9151" annotatedElement="9150" body="Specifies the Generalization relationships for this Classifier. These Generalizations navigate to more general classifiers in the generalization hierarchy." xmi:type="Comment" />
                <lowerValue xmi:id="11087" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="9173" visibility="public" isDerived="true" type="9171" class="9171" association="9175" isDerivedUnion="false" opposite="9174" isReadOnly="false" isUnique="true" isOrdered="false" name="general" xmi:type="Property">
                <upperValue xmi:id="11082" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9176" annotatedElement="9173" body="Specifies the general Classifiers for this Classifier." xmi:type="Comment" />
                <lowerValue xmi:id="11083" value="0" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedOperation xmi:id="9177" isQuery="true" visibility="public" upper="1" lower="1" class="9171" isOrdered="false" isUnique="true" name="general" xmi:type="Operation">
                <formalParameter xmi:id="9179" direction="return" type="9171" isOrdered="false" isUnique="true" operation="9177" xmi:type="Parameter">
                  <upperValue xmi:id="11088" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11089" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9180" namespace="9177" name="spec" constrainedElement="9177 9173" xmi:type="Constraint">
                  <specification xmi:id="9181" language="OCL" body="result = self.parents()" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9178" annotatedElement="9177" body="The general classifiers are the classifiers referenced by the generalization relationships." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9182" isQuery="true" visibility="public" upper="1" lower="1" class="9171" isOrdered="false" isUnique="true" name="parents" xmi:type="Operation">
                <formalParameter xmi:id="9184" direction="return" type="9171" isOrdered="false" isUnique="true" operation="9182" xmi:type="Parameter">
                  <upperValue xmi:id="11091" value="*" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11092" value="0" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9185" namespace="9182" name="spec" constrainedElement="9182" xmi:type="Constraint">
                  <specification xmi:id="9186" language="OCL" body="result = generalization.general" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9183" annotatedElement="9182" body="The query parents() gives all of the immediate ancestors of a generalized Classifier." xmi:type="Comment" />
              </ownedOperation>
              <ownedOperation xmi:id="9187" isQuery="true" visibility="public" redefinedOperation="8549" upper="1" lower="1" class="9171" isOrdered="false" isUnique="true" name="conformsTo" xmi:type="Operation">
                <formalParameter xmi:id="9189" direction="return" type="8297" isOrdered="false" isUnique="true" operation="9187" xmi:type="Parameter">
                  <upperValue xmi:id="11094" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11095" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <formalParameter xmi:id="9190" direction="in" type="9171" isOrdered="false" isUnique="true" name="other" operation="9187" xmi:type="Parameter">
                  <upperValue xmi:id="11096" value="1" xmi:type="LiteralString" />
                  <lowerValue xmi:id="11097" value="1" xmi:type="LiteralString" />
                </formalParameter>
                <bodyCondition xmi:id="9191" namespace="9187" name="spec" constrainedElement="9187" xmi:type="Constraint">
                  <specification xmi:id="9192" language="OCL" body="result = (self=other) or (self.allParents()-&gt;includes(other))" xmi:type="OpaqueExpression" />
                </bodyCondition>
                <ownedComment xmi:id="9188" annotatedElement="9187" body="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations." xmi:type="Comment" />
              </ownedOperation>
              <generalization xmi:id="11090" general="8444" xmi:type="Generalization" />
              <generalization xmi:id="11093" general="8444" xmi:type="Generalization" />
              <generalization xmi:id="11098" general="8444" xmi:type="Generalization" />
              <generalization xmi:id="11100" general="8444" xmi:type="Generalization" />
              <ownedComment xmi:id="9172" annotatedElement="9171" body="A classifier is a type and can own generalizations, thereby making it possible to define generalization relationships to other classifiers." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
          <nestedPackage xmi:id="9154" visibility="public" name="Relationships" nestingPackage="8438" xmi:type="Package">
            <packageImport xmi:id="9170" importingNamespace="9154" visibility="public" importedPackage="8462" xmi:type="PackageImport" />
            <ownedMember xmi:id="9155" visibility="public" isDerived="false" memberEnd="9156" isAbstract="false" name="A_target_directedRelationship" general="9165" package="9154" xmi:type="Association">
              <ownedEnd xmi:id="9157" owningAssociation="9155" visibility="public" isDerived="false" type="9158" redefinedProperty="9162" isDerivedUnion="false" opposite="9156" isReadOnly="false" isUnique="true" isOrdered="false" name="directedRelationship" xmi:type="Property">
                <upperValue xmi:id="11071" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11072" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="9165" visibility="public" isDerived="false" memberEnd="9163" isAbstract="false" name="A_relatedElement_relationship" package="9154" xmi:type="Association">
              <ownedEnd xmi:id="9162" owningAssociation="9165" visibility="public" isDerived="false" type="9166" isDerivedUnion="false" opposite="9163" isReadOnly="false" isUnique="true" isOrdered="false" name="relationship" xmi:type="Property">
                <upperValue xmi:id="11069" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11070" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="9153" visibility="public" isDerived="false" memberEnd="9160" isAbstract="false" name="A_source_directedRelationship" general="9165" package="9154" xmi:type="Association">
              <ownedEnd xmi:id="9161" owningAssociation="9153" visibility="public" isDerived="false" type="9158" redefinedProperty="9162" isDerivedUnion="false" opposite="9160" isReadOnly="false" isUnique="true" isOrdered="false" name="directedRelationship" xmi:type="Property">
                <upperValue xmi:id="11073" value="1" xmi:type="LiteralString" />
                <lowerValue xmi:id="11074" value="1" xmi:type="LiteralString" />
              </ownedEnd>
            </ownedMember>
            <ownedMember xmi:id="9166" visibility="public" isAbstract="true" name="Relationship" package="9154" superClass="8463" xmi:type="Class">
              <ownedAttribute xmi:id="9163" visibility="public" isDerived="true" type="8463" class="9166" association="9165" isDerivedUnion="true" opposite="9162" isReadOnly="true" isUnique="true" isOrdered="false" name="relatedElement" xmi:type="Property">
                <upperValue xmi:id="11067" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9164" annotatedElement="9163" body="Specifies the elements related by the Relationship." xmi:type="Comment" />
                <lowerValue xmi:id="11068" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="11075" general="8463" xmi:type="Generalization" />
              <generalization xmi:id="11077" general="8463" xmi:type="Generalization" />
              <ownedComment xmi:id="9167" annotatedElement="9166" body="A relationship references one or more related elements. Relationship is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
            <ownedMember xmi:id="9158" visibility="public" isAbstract="true" name="DirectedRelationship" package="9154" superClass="9166" xmi:type="Class">
              <ownedAttribute xmi:id="9160" visibility="public" isDerived="true" subsettedProperty="9163" type="8463" class="9158" association="9153" isDerivedUnion="true" opposite="9161" isReadOnly="true" isOrdered="false" isUnique="true" name="source" xmi:type="Property">
                <upperValue xmi:id="11063" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9168" annotatedElement="9160" body="Specifies the sources of the DirectedRelationship." xmi:type="Comment" />
                <lowerValue xmi:id="11064" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <ownedAttribute xmi:id="9156" visibility="public" isDerived="true" subsettedProperty="9163" type="8463" class="9158" association="9155" isDerivedUnion="true" opposite="9157" isReadOnly="true" isOrdered="false" isUnique="true" name="target" xmi:type="Property">
                <upperValue xmi:id="11065" value="*" xmi:type="LiteralString" />
                <ownedComment xmi:id="9169" annotatedElement="9156" body="Specifies the targets of the DirectedRelationship." xmi:type="Comment" />
                <lowerValue xmi:id="11066" value="1" xmi:type="LiteralString" />
              </ownedAttribute>
              <generalization xmi:id="11076" general="9166" xmi:type="Generalization" />
              <generalization xmi:id="11078" general="9166" xmi:type="Generalization" />
              <ownedComment xmi:id="9159" annotatedElement="9158" body="A directed relationship references one or more source elements and one or more target elements. DirectedRelationship is an abstract metaclass." xmi:type="Comment" />
            </ownedMember>
          </nestedPackage>
        </nestedPackage>
        <nestedPackage xmi:id="8290" visibility="public" name="PrimitiveTypes" nestingPackage="8301" xmi:type="Package">
          <ownedMember xmi:id="8291" visibility="public" isAbstract="false" name="UnlimitedNatural" package="8290" xmi:type="PrimitiveType">
            <ownedComment xmi:id="8293" annotatedElement="8291" body="An instance of UnlimitedNatural is an element in the (infinite) set of naturals (0, 1, 2...). The value of infinity is shown using an asterisk ('*')." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8295" visibility="public" isAbstract="false" name="String" package="8290" xmi:type="PrimitiveType">
            <ownedComment xmi:id="8296" annotatedElement="8295" body="An instance of String defines a piece of text. The semantics of the string itself depends on its purpose, it can be a comment, computational language expression, OCL expression, etc. It is used for String attributes and String expressions in the metamodel." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8297" visibility="public" isAbstract="false" tag="8299" name="Boolean" package="8290" xmi:type="PrimitiveType">
            <ownedComment xmi:id="8298" annotatedElement="8297" body="Boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical condition. Its enumeration literals are:&#xA;&#xA;  - true: The Boolean condition is satisfied.&#xA;&#xA;  - false: The Boolean condition is not satisfied.&#xA;&#xA;&#xA;&#xA;It is used for Boolean attribute and Boolean expressions in the metamodel, such as OCL expression." xmi:type="Comment" />
          </ownedMember>
          <ownedMember xmi:id="8289" visibility="public" isAbstract="false" tag="8288" name="Integer" package="8290" xmi:type="PrimitiveType">
            <ownedComment xmi:id="9984" annotatedElement="8289" body="An instance of Integer is an element in the (infinite) set of integers (...-2, -1, 0, 1, 2...). It is used for integer attributes and integer expressions in the metamodel." xmi:type="Comment" />
          </ownedMember>
        </nestedPackage>
      </nestedPackage>
    </ownedElement>
  </uml:Model>
</xmi:XMI>

